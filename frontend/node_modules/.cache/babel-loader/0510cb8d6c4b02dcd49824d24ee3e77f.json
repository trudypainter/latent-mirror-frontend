{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport UniformNode from '../core/UniformNode.js';\nimport UVNode from './UVNode.js';\nvar TextureNode = /*#__PURE__*/function (_UniformNode) {\n  _inherits(TextureNode, _UniformNode);\n  var _super = _createSuper(TextureNode);\n  function TextureNode(value) {\n    var _this;\n    var uvNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new UVNode();\n    var biasNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    _classCallCheck(this, TextureNode);\n    _this = _super.call(this, value, 'vec4');\n    _this.uvNode = uvNode;\n    _this.biasNode = biasNode;\n    return _this;\n  }\n  _createClass(TextureNode, [{\n    key: \"getUniformHash\",\n    value: function getUniformHash() {\n      return this.value.uuid;\n    }\n  }, {\n    key: \"getInputType\",\n    value: function getInputType() {\n      return 'texture';\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder, output) {\n      var texture = this.value;\n      if (!texture || texture.isTexture !== true) {\n        throw new Error('TextureNode: Need a three.js texture.');\n      }\n      var textureProperty = _get(_getPrototypeOf(TextureNode.prototype), \"generate\", this).call(this, builder, 'texture');\n      if (output === 'sampler') {\n        return textureProperty + '_sampler';\n      } else if (builder.isReference(output)) {\n        return textureProperty;\n      } else {\n        var nodeData = builder.getDataFromNode(this);\n        var snippet = nodeData.snippet;\n        if (snippet === undefined) {\n          var uvSnippet = this.uvNode.build(builder, 'vec2');\n          var biasNode = this.biasNode;\n          if (biasNode !== null) {\n            var biasSnippet = biasNode.build(builder, 'float');\n            snippet = builder.getTextureBias(textureProperty, uvSnippet, biasSnippet);\n          } else {\n            snippet = builder.getTexture(textureProperty, uvSnippet);\n          }\n          nodeData.snippet = snippet;\n        }\n        return builder.format(snippet, 'vec4', output);\n      }\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(TextureNode.prototype), \"serialize\", this).call(this, data);\n      data.value = this.value.toJSON(data.meta).uuid;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(TextureNode.prototype), \"deserialize\", this).call(this, data);\n      this.value = data.meta.textures[data.value];\n    }\n  }]);\n  return TextureNode;\n}(UniformNode);\nTextureNode.prototype.isTextureNode = true;\nexport default TextureNode;","map":{"version":3,"names":["UniformNode","UVNode","TextureNode","value","uvNode","biasNode","uuid","builder","output","texture","isTexture","Error","textureProperty","isReference","nodeData","getDataFromNode","snippet","undefined","uvSnippet","build","biasSnippet","getTextureBias","getTexture","format","data","toJSON","meta","textures","prototype","isTextureNode"],"sources":["/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/three-stdlib/nodes/accessors/TextureNode.js"],"sourcesContent":["import UniformNode from '../core/UniformNode.js';\nimport UVNode from './UVNode.js';\n\nclass TextureNode extends UniformNode {\n  constructor(value, uvNode = new UVNode(), biasNode = null) {\n    super(value, 'vec4');\n    this.uvNode = uvNode;\n    this.biasNode = biasNode;\n  }\n\n  getUniformHash() {\n    return this.value.uuid;\n  }\n\n  getInputType() {\n    return 'texture';\n  }\n\n  generate(builder, output) {\n    const texture = this.value;\n\n    if (!texture || texture.isTexture !== true) {\n      throw new Error('TextureNode: Need a three.js texture.');\n    }\n\n    const textureProperty = super.generate(builder, 'texture');\n\n    if (output === 'sampler') {\n      return textureProperty + '_sampler';\n    } else if (builder.isReference(output)) {\n      return textureProperty;\n    } else {\n      const nodeData = builder.getDataFromNode(this);\n      let snippet = nodeData.snippet;\n\n      if (snippet === undefined) {\n        const uvSnippet = this.uvNode.build(builder, 'vec2');\n        const biasNode = this.biasNode;\n\n        if (biasNode !== null) {\n          const biasSnippet = biasNode.build(builder, 'float');\n          snippet = builder.getTextureBias(textureProperty, uvSnippet, biasSnippet);\n        } else {\n          snippet = builder.getTexture(textureProperty, uvSnippet);\n        }\n\n        nodeData.snippet = snippet;\n      }\n\n      return builder.format(snippet, 'vec4', output);\n    }\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.value = this.value.toJSON(data.meta).uuid;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.value = data.meta.textures[data.value];\n  }\n\n}\n\nTextureNode.prototype.isTextureNode = true;\n\nexport default TextureNode;\n"],"mappings":";;;;;;AAAA,OAAOA,WAAW,MAAM,wBAAwB;AAChD,OAAOC,MAAM,MAAM,aAAa;AAAC,IAE3BC,WAAW;EAAA;EAAA;EACf,qBAAYC,KAAK,EAA0C;IAAA;IAAA,IAAxCC,MAAM,uEAAG,IAAIH,MAAM,EAAE;IAAA,IAAEI,QAAQ,uEAAG,IAAI;IAAA;IACvD,0BAAMF,KAAK,EAAE,MAAM;IACnB,MAAKC,MAAM,GAAGA,MAAM;IACpB,MAAKC,QAAQ,GAAGA,QAAQ;IAAC;EAC3B;EAAC;IAAA;IAAA,OAED,0BAAiB;MACf,OAAO,IAAI,CAACF,KAAK,CAACG,IAAI;IACxB;EAAC;IAAA;IAAA,OAED,wBAAe;MACb,OAAO,SAAS;IAClB;EAAC;IAAA;IAAA,OAED,kBAASC,OAAO,EAAEC,MAAM,EAAE;MACxB,IAAMC,OAAO,GAAG,IAAI,CAACN,KAAK;MAE1B,IAAI,CAACM,OAAO,IAAIA,OAAO,CAACC,SAAS,KAAK,IAAI,EAAE;QAC1C,MAAM,IAAIC,KAAK,CAAC,uCAAuC,CAAC;MAC1D;MAEA,IAAMC,eAAe,6EAAkBL,OAAO,EAAE,SAAS,CAAC;MAE1D,IAAIC,MAAM,KAAK,SAAS,EAAE;QACxB,OAAOI,eAAe,GAAG,UAAU;MACrC,CAAC,MAAM,IAAIL,OAAO,CAACM,WAAW,CAACL,MAAM,CAAC,EAAE;QACtC,OAAOI,eAAe;MACxB,CAAC,MAAM;QACL,IAAME,QAAQ,GAAGP,OAAO,CAACQ,eAAe,CAAC,IAAI,CAAC;QAC9C,IAAIC,OAAO,GAAGF,QAAQ,CAACE,OAAO;QAE9B,IAAIA,OAAO,KAAKC,SAAS,EAAE;UACzB,IAAMC,SAAS,GAAG,IAAI,CAACd,MAAM,CAACe,KAAK,CAACZ,OAAO,EAAE,MAAM,CAAC;UACpD,IAAMF,QAAQ,GAAG,IAAI,CAACA,QAAQ;UAE9B,IAAIA,QAAQ,KAAK,IAAI,EAAE;YACrB,IAAMe,WAAW,GAAGf,QAAQ,CAACc,KAAK,CAACZ,OAAO,EAAE,OAAO,CAAC;YACpDS,OAAO,GAAGT,OAAO,CAACc,cAAc,CAACT,eAAe,EAAEM,SAAS,EAAEE,WAAW,CAAC;UAC3E,CAAC,MAAM;YACLJ,OAAO,GAAGT,OAAO,CAACe,UAAU,CAACV,eAAe,EAAEM,SAAS,CAAC;UAC1D;UAEAJ,QAAQ,CAACE,OAAO,GAAGA,OAAO;QAC5B;QAEA,OAAOT,OAAO,CAACgB,MAAM,CAACP,OAAO,EAAE,MAAM,EAAER,MAAM,CAAC;MAChD;IACF;EAAC;IAAA;IAAA,OAED,mBAAUgB,IAAI,EAAE;MACd,2EAAgBA,IAAI;MACpBA,IAAI,CAACrB,KAAK,GAAG,IAAI,CAACA,KAAK,CAACsB,MAAM,CAACD,IAAI,CAACE,IAAI,CAAC,CAACpB,IAAI;IAChD;EAAC;IAAA;IAAA,OAED,qBAAYkB,IAAI,EAAE;MAChB,6EAAkBA,IAAI;MACtB,IAAI,CAACrB,KAAK,GAAGqB,IAAI,CAACE,IAAI,CAACC,QAAQ,CAACH,IAAI,CAACrB,KAAK,CAAC;IAC7C;EAAC;EAAA;AAAA,EA1DuBH,WAAW;AA8DrCE,WAAW,CAAC0B,SAAS,CAACC,aAAa,GAAG,IAAI;AAE1C,eAAe3B,WAAW"},"metadata":{},"sourceType":"module"}