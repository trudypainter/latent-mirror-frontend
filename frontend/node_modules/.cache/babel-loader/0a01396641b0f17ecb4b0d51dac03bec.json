{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport TempNode from '../core/TempNode.js';\nimport { normalize, join, negate, positionViewDirection, cross, add, mul, dot, transformedNormalView } from '../ShaderNode.js';\nvar MatcapUVNode = /*#__PURE__*/function (_TempNode) {\n  _inherits(MatcapUVNode, _TempNode);\n  var _super = _createSuper(MatcapUVNode);\n  function MatcapUVNode() {\n    _classCallCheck(this, MatcapUVNode);\n    return _super.call(this, 'vec2');\n  }\n  _createClass(MatcapUVNode, [{\n    key: \"generate\",\n    value: function generate(builder) {\n      var x = normalize(join(positionViewDirection.z, 0, negate(positionViewDirection.x)));\n      var y = cross(positionViewDirection, x);\n      var uv = add(mul(join(dot(x, transformedNormalView), dot(y, transformedNormalView)), 0.495), 0.5);\n      return uv.build(builder, this.getNodeType(builder));\n    }\n  }]);\n  return MatcapUVNode;\n}(TempNode);\nexport default MatcapUVNode;","map":{"version":3,"names":["TempNode","normalize","join","negate","positionViewDirection","cross","add","mul","dot","transformedNormalView","MatcapUVNode","builder","x","z","y","uv","build","getNodeType"],"sources":["/Users/trudypainter/Desktop/latent-2/frontend/node_modules/three-stdlib/nodes/utils/MatcapUVNode.js"],"sourcesContent":["import TempNode from '../core/TempNode.js';\nimport { normalize, join, negate, positionViewDirection, cross, add, mul, dot, transformedNormalView } from '../ShaderNode.js';\n\nclass MatcapUVNode extends TempNode {\n  constructor() {\n    super('vec2');\n  }\n\n  generate(builder) {\n    const x = normalize(join(positionViewDirection.z, 0, negate(positionViewDirection.x)));\n    const y = cross(positionViewDirection, x);\n    const uv = add(mul(join(dot(x, transformedNormalView), dot(y, transformedNormalView)), 0.495), 0.5);\n    return uv.build(builder, this.getNodeType(builder));\n  }\n\n}\n\nexport default MatcapUVNode;\n"],"mappings":";;;;AAAA,OAAOA,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,SAAS,EAAEC,IAAI,EAAEC,MAAM,EAAEC,qBAAqB,EAAEC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,qBAAqB,QAAQ,kBAAkB;AAAC,IAEzHC,YAAY;EAAA;EAAA;EAChB,wBAAc;IAAA;IAAA,yBACN,MAAM;EACd;EAAC;IAAA;IAAA,OAED,kBAASC,OAAO,EAAE;MAChB,IAAMC,CAAC,GAAGX,SAAS,CAACC,IAAI,CAACE,qBAAqB,CAACS,CAAC,EAAE,CAAC,EAAEV,MAAM,CAACC,qBAAqB,CAACQ,CAAC,CAAC,CAAC,CAAC;MACtF,IAAME,CAAC,GAAGT,KAAK,CAACD,qBAAqB,EAAEQ,CAAC,CAAC;MACzC,IAAMG,EAAE,GAAGT,GAAG,CAACC,GAAG,CAACL,IAAI,CAACM,GAAG,CAACI,CAAC,EAAEH,qBAAqB,CAAC,EAAED,GAAG,CAACM,CAAC,EAAEL,qBAAqB,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,GAAG,CAAC;MACnG,OAAOM,EAAE,CAACC,KAAK,CAACL,OAAO,EAAE,IAAI,CAACM,WAAW,CAACN,OAAO,CAAC,CAAC;IACrD;EAAC;EAAA;AAAA,EAVwBX,QAAQ;AAcnC,eAAeU,YAAY"},"metadata":{},"sourceType":"module"}