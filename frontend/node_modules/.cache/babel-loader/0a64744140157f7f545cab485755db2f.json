{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { UniformsUtils, WebGLRenderTarget, LinearFilter, NearestFilter, RGBAFormat, ShaderMaterial, MeshBasicMaterial } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { AfterimageShader } from '../shaders/AfterimageShader.js';\nvar AfterimagePass = /*#__PURE__*/function (_Pass) {\n  _inherits(AfterimagePass, _Pass);\n  var _super = _createSuper(AfterimagePass);\n  function AfterimagePass() {\n    var _this;\n    var damp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.96;\n    var shader = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : AfterimageShader;\n    _classCallCheck(this, AfterimagePass);\n    _this = _super.call(this);\n    _defineProperty(_assertThisInitialized(_this), \"shader\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"uniforms\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"textureComp\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"textureOld\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"shaderMaterial\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"compFsQuad\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"copyFsQuad\", void 0);\n    _this.shader = shader;\n    _this.uniforms = UniformsUtils.clone(shader.uniforms);\n    _this.uniforms['damp'].value = damp;\n    _this.textureComp = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    _this.textureOld = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    _this.shaderMaterial = new ShaderMaterial({\n      uniforms: _this.uniforms,\n      vertexShader: _this.shader.vertexShader,\n      fragmentShader: _this.shader.fragmentShader\n    });\n    _this.compFsQuad = new FullScreenQuad(_this.shaderMaterial);\n    var material = new MeshBasicMaterial();\n    _this.copyFsQuad = new FullScreenQuad(material);\n    return _this;\n  }\n  _createClass(AfterimagePass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      this.uniforms['tOld'].value = this.textureOld.texture;\n      this.uniforms['tNew'].value = readBuffer.texture;\n      renderer.setRenderTarget(this.textureComp);\n      this.compFsQuad.render(renderer);\n      this.copyFsQuad.material.map = this.textureComp.texture;\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this.copyFsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer);\n        if (this.clear) renderer.clear();\n        this.copyFsQuad.render(renderer);\n      } // Swap buffers.\n\n      var temp = this.textureOld;\n      this.textureOld = this.textureComp;\n      this.textureComp = temp; // Now textureOld contains the latest image, ready for the next frame.\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(width, height) {\n      this.textureComp.setSize(width, height);\n      this.textureOld.setSize(width, height);\n    }\n  }]);\n  return AfterimagePass;\n}(Pass);\nexport { AfterimagePass };","map":{"version":3,"names":["_defineProperty","UniformsUtils","WebGLRenderTarget","LinearFilter","NearestFilter","RGBAFormat","ShaderMaterial","MeshBasicMaterial","Pass","FullScreenQuad","AfterimageShader","AfterimagePass","damp","shader","uniforms","clone","value","textureComp","window","innerWidth","innerHeight","minFilter","magFilter","format","textureOld","shaderMaterial","vertexShader","fragmentShader","compFsQuad","material","copyFsQuad","renderer","writeBuffer","readBuffer","texture","setRenderTarget","render","map","renderToScreen","clear","temp","width","height","setSize"],"sources":["/Users/trudypainter/Desktop/latent-2/frontend/node_modules/three-stdlib/postprocessing/AfterimagePass.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { UniformsUtils, WebGLRenderTarget, LinearFilter, NearestFilter, RGBAFormat, ShaderMaterial, MeshBasicMaterial } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { AfterimageShader } from '../shaders/AfterimageShader.js';\n\nclass AfterimagePass extends Pass {\n  constructor(damp = 0.96, shader = AfterimageShader) {\n    super();\n\n    _defineProperty(this, \"shader\", void 0);\n\n    _defineProperty(this, \"uniforms\", void 0);\n\n    _defineProperty(this, \"textureComp\", void 0);\n\n    _defineProperty(this, \"textureOld\", void 0);\n\n    _defineProperty(this, \"shaderMaterial\", void 0);\n\n    _defineProperty(this, \"compFsQuad\", void 0);\n\n    _defineProperty(this, \"copyFsQuad\", void 0);\n\n    this.shader = shader;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.uniforms['damp'].value = damp;\n    this.textureComp = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    this.textureOld = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    this.shaderMaterial = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: this.shader.vertexShader,\n      fragmentShader: this.shader.fragmentShader\n    });\n    this.compFsQuad = new FullScreenQuad(this.shaderMaterial);\n    let material = new MeshBasicMaterial();\n    this.copyFsQuad = new FullScreenQuad(material);\n  }\n\n  render(renderer, writeBuffer, readBuffer) {\n    this.uniforms['tOld'].value = this.textureOld.texture;\n    this.uniforms['tNew'].value = readBuffer.texture;\n    renderer.setRenderTarget(this.textureComp);\n    this.compFsQuad.render(renderer);\n    this.copyFsQuad.material.map = this.textureComp.texture;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.copyFsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.copyFsQuad.render(renderer);\n    } // Swap buffers.\n\n\n    let temp = this.textureOld;\n    this.textureOld = this.textureComp;\n    this.textureComp = temp; // Now textureOld contains the latest image, ready for the next frame.\n  }\n\n  setSize(width, height) {\n    this.textureComp.setSize(width, height);\n    this.textureOld.setSize(width, height);\n  }\n\n}\n\nexport { AfterimagePass };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}