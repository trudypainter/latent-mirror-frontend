{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _possibleConstructorReturn from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Vector3, Matrix3, LineSegments, BufferGeometry, LineBasicMaterial, Float32BufferAttribute } from 'three';\nvar _v1 = new Vector3();\nvar _v2 = new Vector3();\nvar _normalMatrix = new Matrix3();\nvar VertexNormalsHelper = /*#__PURE__*/function (_LineSegments) {\n  _inherits(VertexNormalsHelper, _LineSegments);\n  var _super = _createSuper(VertexNormalsHelper);\n  function VertexNormalsHelper(object, size, hex) {\n    var _this;\n    _classCallCheck(this, VertexNormalsHelper);\n    var geometry = new BufferGeometry();\n    var color = hex !== undefined ? hex : 0xff0000;\n    _this = _super.call(this, geometry, new LineBasicMaterial({\n      color: color,\n      toneMapped: false\n    }));\n    _this.object = object;\n    _this.size = size !== undefined ? size : 0.1;\n    var nNormals = 0;\n    var objGeometry = _this.object.geometry;\n    if (objGeometry && objGeometry.isGeometry) {\n      console.error('THREE.VertexNormalsHelper no longer supports Geometry. Use BufferGeometry instead.');\n      return _possibleConstructorReturn(_this);\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n      nNormals = objGeometry.attributes.normal.count;\n    } //\n\n    var positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n    geometry.setAttribute('position', positions);\n    _this.type = 'VertexNormalsHelper'; //\n\n    _this.matrixAutoUpdate = false;\n    _this.update();\n    return _this;\n  }\n  _createClass(VertexNormalsHelper, [{\n    key: \"update\",\n    value: function update() {\n      this.object.updateMatrixWorld(true);\n      _normalMatrix.getNormalMatrix(this.object.matrixWorld);\n      var matrixWorld = this.object.matrixWorld;\n      var position = this.geometry.attributes.position; //\n\n      var objGeometry = this.object.geometry;\n      if (objGeometry && objGeometry.isGeometry) {\n        console.error('THREE.VertexNormalsHelper no longer supports Geometry. Use BufferGeometry instead.');\n        return;\n      } else if (objGeometry && objGeometry.isBufferGeometry) {\n        var objPos = objGeometry.attributes.position;\n        var objNorm = objGeometry.attributes.normal;\n        var idx = 0; // for simplicity, ignore index and drawcalls, and render every normal\n\n        for (var j = 0, jl = objPos.count; j < jl; j++) {\n          _v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n          _v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n          _v2.applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1);\n          position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n          idx = idx + 1;\n          position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n          idx = idx + 1;\n        }\n      }\n      position.needsUpdate = true;\n    }\n  }]);\n  return VertexNormalsHelper;\n}(LineSegments);\nexport { VertexNormalsHelper };","map":{"version":3,"names":["Vector3","Matrix3","LineSegments","BufferGeometry","LineBasicMaterial","Float32BufferAttribute","_v1","_v2","_normalMatrix","VertexNormalsHelper","object","size","hex","geometry","color","undefined","toneMapped","nNormals","objGeometry","isGeometry","console","error","isBufferGeometry","attributes","normal","count","positions","setAttribute","type","matrixAutoUpdate","update","updateMatrixWorld","getNormalMatrix","matrixWorld","position","objPos","objNorm","idx","j","jl","set","getX","getY","getZ","applyMatrix4","applyMatrix3","normalize","multiplyScalar","add","setXYZ","x","y","z","needsUpdate"],"sources":["/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/three-stdlib/helpers/VertexNormalsHelper.js"],"sourcesContent":["import { Vector3, Matrix3, LineSegments, BufferGeometry, LineBasicMaterial, Float32BufferAttribute } from 'three';\n\nconst _v1 = new Vector3();\n\nconst _v2 = new Vector3();\n\nconst _normalMatrix = new Matrix3();\n\nclass VertexNormalsHelper extends LineSegments {\n  constructor(object, size, hex) {\n    const geometry = new BufferGeometry();\n    const color = hex !== undefined ? hex : 0xff0000;\n    super(geometry, new LineBasicMaterial({\n      color,\n      toneMapped: false\n    }));\n    this.object = object;\n    this.size = size !== undefined ? size : 0.1;\n    let nNormals = 0;\n    const objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n      console.error('THREE.VertexNormalsHelper no longer supports Geometry. Use BufferGeometry instead.');\n      return;\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n      nNormals = objGeometry.attributes.normal.count;\n    } //\n\n\n    const positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n    geometry.setAttribute('position', positions);\n    this.type = 'VertexNormalsHelper'; //\n\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n\n  update() {\n    this.object.updateMatrixWorld(true);\n\n    _normalMatrix.getNormalMatrix(this.object.matrixWorld);\n\n    const matrixWorld = this.object.matrixWorld;\n    const position = this.geometry.attributes.position; //\n\n    const objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n      console.error('THREE.VertexNormalsHelper no longer supports Geometry. Use BufferGeometry instead.');\n      return;\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n      const objPos = objGeometry.attributes.position;\n      const objNorm = objGeometry.attributes.normal;\n      let idx = 0; // for simplicity, ignore index and drawcalls, and render every normal\n\n      for (let j = 0, jl = objPos.count; j < jl; j++) {\n        _v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n\n        _v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n\n        _v2.applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1);\n\n        position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n        idx = idx + 1;\n        position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n        idx = idx + 1;\n      }\n    }\n\n    position.needsUpdate = true;\n  }\n\n}\n\nexport { VertexNormalsHelper };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}