{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport { normalize, sub, positionWorld, cameraPosition, reflect, normalWorld, nodeObject, join, negate } from '../ShaderNode.js';\nvar ReflectNode = /*#__PURE__*/function (_Node) {\n  _inherits(ReflectNode, _Node);\n  var _super = _createSuper(ReflectNode);\n  function ReflectNode() {\n    var _this;\n    var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ReflectNode.CUBE;\n    _classCallCheck(this, ReflectNode);\n    _this = _super.call(this, 'vec3');\n    _this.scope = scope;\n    return _this;\n  }\n  _createClass(ReflectNode, [{\n    key: \"getHash\",\n    value: function getHash() {\n      return \"reflect-\".concat(this.scope);\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var scope = this.scope;\n      if (scope === ReflectNode.VECTOR) {\n        var cameraToFrag = normalize(sub(positionWorld, cameraPosition));\n        var reflectVec = reflect(cameraToFrag, normalWorld);\n        return reflectVec.build(builder);\n      } else if (scope === ReflectNode.CUBE) {\n        var _reflectVec = nodeObject(new ReflectNode(ReflectNode.VECTOR));\n        var cubeUV = join(negate(_reflectVec.x), _reflectVec.yz);\n        return cubeUV.build(builder);\n      }\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(ReflectNode.prototype), \"serialize\", this).call(this, data);\n      data.scope = this.scope;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(ReflectNode.prototype), \"deserialize\", this).call(this, data);\n      this.scope = data.scope;\n    }\n  }]);\n  return ReflectNode;\n}(Node);\n_defineProperty(ReflectNode, \"VECTOR\", 'vector');\n_defineProperty(ReflectNode, \"CUBE\", 'cube');\nexport default ReflectNode;","map":{"version":3,"names":["_defineProperty","Node","normalize","sub","positionWorld","cameraPosition","reflect","normalWorld","nodeObject","join","negate","ReflectNode","scope","CUBE","builder","VECTOR","cameraToFrag","reflectVec","build","cubeUV","x","yz","data"],"sources":["/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/three-stdlib/nodes/accessors/ReflectNode.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport { normalize, sub, positionWorld, cameraPosition, reflect, normalWorld, nodeObject, join, negate } from '../ShaderNode.js';\n\nclass ReflectNode extends Node {\n  constructor(scope = ReflectNode.CUBE) {\n    super('vec3');\n    this.scope = scope;\n  }\n\n  getHash() {\n    return `reflect-${this.scope}`;\n  }\n\n  generate(builder) {\n    const scope = this.scope;\n\n    if (scope === ReflectNode.VECTOR) {\n      const cameraToFrag = normalize(sub(positionWorld, cameraPosition));\n      const reflectVec = reflect(cameraToFrag, normalWorld);\n      return reflectVec.build(builder);\n    } else if (scope === ReflectNode.CUBE) {\n      const reflectVec = nodeObject(new ReflectNode(ReflectNode.VECTOR));\n      const cubeUV = join(negate(reflectVec.x), reflectVec.yz);\n      return cubeUV.build(builder);\n    }\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n  }\n\n}\n\n_defineProperty(ReflectNode, \"VECTOR\", 'vector');\n\n_defineProperty(ReflectNode, \"CUBE\", 'cube');\n\nexport default ReflectNode;\n"],"mappings":";;;;;;AAAA,OAAOA,eAAe,MAAM,2CAA2C;AACvE,OAAOC,IAAI,MAAM,iBAAiB;AAClC,SAASC,SAAS,EAAEC,GAAG,EAAEC,aAAa,EAAEC,cAAc,EAAEC,OAAO,EAAEC,WAAW,EAAEC,UAAU,EAAEC,IAAI,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,IAE3HC,WAAW;EAAA;EAAA;EACf,uBAAsC;IAAA;IAAA,IAA1BC,KAAK,uEAAGD,WAAW,CAACE,IAAI;IAAA;IAClC,0BAAM,MAAM;IACZ,MAAKD,KAAK,GAAGA,KAAK;IAAC;EACrB;EAAC;IAAA;IAAA,OAED,mBAAU;MACR,yBAAkB,IAAI,CAACA,KAAK;IAC9B;EAAC;IAAA;IAAA,OAED,kBAASE,OAAO,EAAE;MAChB,IAAMF,KAAK,GAAG,IAAI,CAACA,KAAK;MAExB,IAAIA,KAAK,KAAKD,WAAW,CAACI,MAAM,EAAE;QAChC,IAAMC,YAAY,GAAGd,SAAS,CAACC,GAAG,CAACC,aAAa,EAAEC,cAAc,CAAC,CAAC;QAClE,IAAMY,UAAU,GAAGX,OAAO,CAACU,YAAY,EAAET,WAAW,CAAC;QACrD,OAAOU,UAAU,CAACC,KAAK,CAACJ,OAAO,CAAC;MAClC,CAAC,MAAM,IAAIF,KAAK,KAAKD,WAAW,CAACE,IAAI,EAAE;QACrC,IAAMI,WAAU,GAAGT,UAAU,CAAC,IAAIG,WAAW,CAACA,WAAW,CAACI,MAAM,CAAC,CAAC;QAClE,IAAMI,MAAM,GAAGV,IAAI,CAACC,MAAM,CAACO,WAAU,CAACG,CAAC,CAAC,EAAEH,WAAU,CAACI,EAAE,CAAC;QACxD,OAAOF,MAAM,CAACD,KAAK,CAACJ,OAAO,CAAC;MAC9B;IACF;EAAC;IAAA;IAAA,OAED,mBAAUQ,IAAI,EAAE;MACd,2EAAgBA,IAAI;MACpBA,IAAI,CAACV,KAAK,GAAG,IAAI,CAACA,KAAK;IACzB;EAAC;IAAA;IAAA,OAED,qBAAYU,IAAI,EAAE;MAChB,6EAAkBA,IAAI;MACtB,IAAI,CAACV,KAAK,GAAGU,IAAI,CAACV,KAAK;IACzB;EAAC;EAAA;AAAA,EAhCuBX,IAAI;AAoC9BD,eAAe,CAACW,WAAW,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAEhDX,eAAe,CAACW,WAAW,EAAE,MAAM,EAAE,MAAM,CAAC;AAE5C,eAAeA,WAAW"},"metadata":{},"sourceType":"module"}