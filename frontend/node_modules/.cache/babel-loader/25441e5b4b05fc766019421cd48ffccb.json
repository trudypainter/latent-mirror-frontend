{"ast":null,"code":"import _objectSpread from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"scale\", \"frames\", \"opacity\", \"width\", \"height\", \"blur\", \"far\", \"resolution\", \"smooth\", \"color\", \"depthWrite\", \"renderOrder\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { HorizontalBlurShader, VerticalBlurShader } from 'three-stdlib';\nvar ContactShadows = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$scale = _ref.scale,\n    scale = _ref$scale === void 0 ? 10 : _ref$scale,\n    _ref$frames = _ref.frames,\n    frames = _ref$frames === void 0 ? Infinity : _ref$frames,\n    _ref$opacity = _ref.opacity,\n    opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,\n    _ref$width = _ref.width,\n    width = _ref$width === void 0 ? 1 : _ref$width,\n    _ref$height = _ref.height,\n    height = _ref$height === void 0 ? 1 : _ref$height,\n    _ref$blur = _ref.blur,\n    blur = _ref$blur === void 0 ? 1 : _ref$blur,\n    _ref$far = _ref.far,\n    far = _ref$far === void 0 ? 10 : _ref$far,\n    _ref$resolution = _ref.resolution,\n    resolution = _ref$resolution === void 0 ? 512 : _ref$resolution,\n    _ref$smooth = _ref.smooth,\n    smooth = _ref$smooth === void 0 ? true : _ref$smooth,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? '#000000' : _ref$color,\n    _ref$depthWrite = _ref.depthWrite,\n    depthWrite = _ref$depthWrite === void 0 ? false : _ref$depthWrite,\n    renderOrder = _ref.renderOrder,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var scene = useThree(function (state) {\n    return state.scene;\n  });\n  var gl = useThree(function (state) {\n    return state.gl;\n  });\n  var shadowCamera = React.useRef(null);\n  width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\n  height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\n  var _React$useMemo = React.useMemo(function () {\n      var renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);\n      var renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);\n      renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n      var planeGeometry = new THREE.PlaneGeometry(width, height).rotateX(Math.PI / 2);\n      var blurPlane = new THREE.Mesh(planeGeometry);\n      var depthMaterial = new THREE.MeshDepthMaterial();\n      depthMaterial.depthTest = depthMaterial.depthWrite = false;\n      depthMaterial.onBeforeCompile = function (shader) {\n        shader.uniforms = _objectSpread(_objectSpread({}, shader.uniforms), {}, {\n          ucolor: {\n            value: new THREE.Color(color)\n          }\n        });\n        shader.fragmentShader = shader.fragmentShader.replace(\"void main() {\", //\n        \"uniform vec3 ucolor;\\n           void main() {\\n          \");\n        shader.fragmentShader = shader.fragmentShader.replace('vec4( vec3( 1.0 - fragCoordZ ), opacity );',\n        // Colorize the shadow, multiply by the falloff so that the center can remain darker\n        'vec4( ucolor * fragCoordZ * 2.0, ( 1.0 - fragCoordZ ) * 1.0 );');\n      };\n      var horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader);\n      var verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader);\n      verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n      return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\n    }, [resolution, width, height, scale, color]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 7),\n    renderTarget = _React$useMemo2[0],\n    planeGeometry = _React$useMemo2[1],\n    depthMaterial = _React$useMemo2[2],\n    blurPlane = _React$useMemo2[3],\n    horizontalBlurMaterial = _React$useMemo2[4],\n    verticalBlurMaterial = _React$useMemo2[5],\n    renderTargetBlur = _React$useMemo2[6];\n  var blurShadows = function blurShadows(blur) {\n    blurPlane.visible = true;\n    blurPlane.material = horizontalBlurMaterial;\n    horizontalBlurMaterial.uniforms.tDiffuse.value = renderTarget.texture;\n    horizontalBlurMaterial.uniforms.h.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTargetBlur);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.material = verticalBlurMaterial;\n    verticalBlurMaterial.uniforms.tDiffuse.value = renderTargetBlur.texture;\n    verticalBlurMaterial.uniforms.v.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTarget);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.visible = false;\n  };\n  var count = 0;\n  useFrame(function () {\n    if (shadowCamera.current && (frames === Infinity || count < frames)) {\n      var initialBackground = scene.background;\n      scene.background = null;\n      var initialOverrideMaterial = scene.overrideMaterial;\n      scene.overrideMaterial = depthMaterial;\n      gl.setRenderTarget(renderTarget);\n      gl.render(scene, shadowCamera.current);\n      scene.overrideMaterial = initialOverrideMaterial;\n      blurShadows(blur);\n      if (smooth) blurShadows(blur * 0.4);\n      gl.setRenderTarget(null);\n      scene.background = initialBackground;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    \"rotation-x\": Math.PI / 2\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    renderOrder: renderOrder,\n    geometry: planeGeometry,\n    scale: [1, -1, 1],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    map: renderTarget.texture,\n    \"map-encoding\": gl.outputEncoding,\n    transparent: true,\n    opacity: opacity,\n    depthWrite: depthWrite\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: shadowCamera,\n    args: [-width / 2, width / 2, height / 2, -height / 2, 0, far]\n  }));\n});\nexport { ContactShadows };","map":{"version":3,"names":["_extends","React","THREE","useThree","useFrame","HorizontalBlurShader","VerticalBlurShader","ContactShadows","forwardRef","ref","scale","frames","Infinity","opacity","width","height","blur","far","resolution","smooth","color","depthWrite","renderOrder","props","scene","state","gl","shadowCamera","useRef","Array","isArray","useMemo","renderTarget","WebGLRenderTarget","renderTargetBlur","texture","generateMipmaps","planeGeometry","PlaneGeometry","rotateX","Math","PI","blurPlane","Mesh","depthMaterial","MeshDepthMaterial","depthTest","onBeforeCompile","shader","uniforms","ucolor","value","Color","fragmentShader","replace","horizontalBlurMaterial","ShaderMaterial","verticalBlurMaterial","blurShadows","visible","material","tDiffuse","h","setRenderTarget","render","current","v","count","initialBackground","background","initialOverrideMaterial","overrideMaterial","createElement","geometry","rotation","map","outputEncoding","transparent","args"],"sources":["/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@react-three/drei/core/ContactShadows.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { HorizontalBlurShader, VerticalBlurShader } from 'three-stdlib';\n\nconst ContactShadows = /*#__PURE__*/React.forwardRef(({\n  scale = 10,\n  frames = Infinity,\n  opacity = 1,\n  width = 1,\n  height = 1,\n  blur = 1,\n  far = 10,\n  resolution = 512,\n  smooth = true,\n  color = '#000000',\n  depthWrite = false,\n  renderOrder,\n  ...props\n}, ref) => {\n  const scene = useThree(state => state.scene);\n  const gl = useThree(state => state.gl);\n  const shadowCamera = React.useRef(null);\n  width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\n  height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\n  const [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur] = React.useMemo(() => {\n    const renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);\n    const renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);\n    renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n    const planeGeometry = new THREE.PlaneGeometry(width, height).rotateX(Math.PI / 2);\n    const blurPlane = new THREE.Mesh(planeGeometry);\n    const depthMaterial = new THREE.MeshDepthMaterial();\n    depthMaterial.depthTest = depthMaterial.depthWrite = false;\n\n    depthMaterial.onBeforeCompile = shader => {\n      shader.uniforms = { ...shader.uniforms,\n        ucolor: {\n          value: new THREE.Color(color)\n        }\n      };\n      shader.fragmentShader = shader.fragmentShader.replace(`void main() {`, //\n      `uniform vec3 ucolor;\n           void main() {\n          `);\n      shader.fragmentShader = shader.fragmentShader.replace('vec4( vec3( 1.0 - fragCoordZ ), opacity );', // Colorize the shadow, multiply by the falloff so that the center can remain darker\n      'vec4( ucolor * fragCoordZ * 2.0, ( 1.0 - fragCoordZ ) * 1.0 );');\n    };\n\n    const horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader);\n    const verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n    return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\n  }, [resolution, width, height, scale, color]);\n\n  const blurShadows = blur => {\n    blurPlane.visible = true;\n    blurPlane.material = horizontalBlurMaterial;\n    horizontalBlurMaterial.uniforms.tDiffuse.value = renderTarget.texture;\n    horizontalBlurMaterial.uniforms.h.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTargetBlur);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.material = verticalBlurMaterial;\n    verticalBlurMaterial.uniforms.tDiffuse.value = renderTargetBlur.texture;\n    verticalBlurMaterial.uniforms.v.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTarget);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.visible = false;\n  };\n\n  let count = 0;\n  useFrame(() => {\n    if (shadowCamera.current && (frames === Infinity || count < frames)) {\n      const initialBackground = scene.background;\n      scene.background = null;\n      const initialOverrideMaterial = scene.overrideMaterial;\n      scene.overrideMaterial = depthMaterial;\n      gl.setRenderTarget(renderTarget);\n      gl.render(scene, shadowCamera.current);\n      scene.overrideMaterial = initialOverrideMaterial;\n      blurShadows(blur);\n      if (smooth) blurShadows(blur * 0.4);\n      gl.setRenderTarget(null);\n      scene.background = initialBackground;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    \"rotation-x\": Math.PI / 2\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    renderOrder: renderOrder,\n    geometry: planeGeometry,\n    scale: [1, -1, 1],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    map: renderTarget.texture,\n    \"map-encoding\": gl.outputEncoding,\n    transparent: true,\n    opacity: opacity,\n    depthWrite: depthWrite\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: shadowCamera,\n    args: [-width / 2, width / 2, height / 2, -height / 2, 0, far]\n  }));\n});\n\nexport { ContactShadows };\n"],"mappings":";;;;AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,oBAAoB;AACvD,SAASC,oBAAoB,EAAEC,kBAAkB,QAAQ,cAAc;AAEvE,IAAMC,cAAc,GAAG,aAAaN,KAAK,CAACO,UAAU,CAAC,gBAclDC,GAAG,EAAK;EAAA,sBAbTC,KAAK;IAALA,KAAK,2BAAG,EAAE;IAAA,mBACVC,MAAM;IAANA,MAAM,4BAAGC,QAAQ;IAAA,oBACjBC,OAAO;IAAPA,OAAO,6BAAG,CAAC;IAAA,kBACXC,KAAK;IAALA,KAAK,2BAAG,CAAC;IAAA,mBACTC,MAAM;IAANA,MAAM,4BAAG,CAAC;IAAA,iBACVC,IAAI;IAAJA,IAAI,0BAAG,CAAC;IAAA,gBACRC,GAAG;IAAHA,GAAG,yBAAG,EAAE;IAAA,uBACRC,UAAU;IAAVA,UAAU,gCAAG,GAAG;IAAA,mBAChBC,MAAM;IAANA,MAAM,4BAAG,IAAI;IAAA,kBACbC,KAAK;IAALA,KAAK,2BAAG,SAAS;IAAA,uBACjBC,UAAU;IAAVA,UAAU,gCAAG,KAAK;IAClBC,WAAW,QAAXA,WAAW;IACRC,KAAK;EAER,IAAMC,KAAK,GAAGrB,QAAQ,CAAC,UAAAsB,KAAK;IAAA,OAAIA,KAAK,CAACD,KAAK;EAAA,EAAC;EAC5C,IAAME,EAAE,GAAGvB,QAAQ,CAAC,UAAAsB,KAAK;IAAA,OAAIA,KAAK,CAACC,EAAE;EAAA,EAAC;EACtC,IAAMC,YAAY,GAAG1B,KAAK,CAAC2B,MAAM,CAAC,IAAI,CAAC;EACvCd,KAAK,GAAGA,KAAK,IAAIe,KAAK,CAACC,OAAO,CAACpB,KAAK,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,IAAI,CAAC,CAAC;EAC9DK,MAAM,GAAGA,MAAM,IAAIc,KAAK,CAACC,OAAO,CAACpB,KAAK,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,IAAI,CAAC,CAAC;EAChE,qBAAgIT,KAAK,CAAC8B,OAAO,CAAC,YAAM;MAClJ,IAAMC,YAAY,GAAG,IAAI9B,KAAK,CAAC+B,iBAAiB,CAACf,UAAU,EAAEA,UAAU,CAAC;MACxE,IAAMgB,gBAAgB,GAAG,IAAIhC,KAAK,CAAC+B,iBAAiB,CAACf,UAAU,EAAEA,UAAU,CAAC;MAC5EgB,gBAAgB,CAACC,OAAO,CAACC,eAAe,GAAGJ,YAAY,CAACG,OAAO,CAACC,eAAe,GAAG,KAAK;MACvF,IAAMC,aAAa,GAAG,IAAInC,KAAK,CAACoC,aAAa,CAACxB,KAAK,EAAEC,MAAM,CAAC,CAACwB,OAAO,CAACC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC;MACjF,IAAMC,SAAS,GAAG,IAAIxC,KAAK,CAACyC,IAAI,CAACN,aAAa,CAAC;MAC/C,IAAMO,aAAa,GAAG,IAAI1C,KAAK,CAAC2C,iBAAiB,EAAE;MACnDD,aAAa,CAACE,SAAS,GAAGF,aAAa,CAACvB,UAAU,GAAG,KAAK;MAE1DuB,aAAa,CAACG,eAAe,GAAG,UAAAC,MAAM,EAAI;QACxCA,MAAM,CAACC,QAAQ,mCAAQD,MAAM,CAACC,QAAQ;UACpCC,MAAM,EAAE;YACNC,KAAK,EAAE,IAAIjD,KAAK,CAACkD,KAAK,CAAChC,KAAK;UAC9B;QAAC,EACF;QACD4B,MAAM,CAACK,cAAc,GAAGL,MAAM,CAACK,cAAc,CAACC,OAAO,kBAAkB;QAAA,6DAGjE;QACNN,MAAM,CAACK,cAAc,GAAGL,MAAM,CAACK,cAAc,CAACC,OAAO,CAAC,4CAA4C;QAAE;QACpG,gEAAgE,CAAC;MACnE,CAAC;MAED,IAAMC,sBAAsB,GAAG,IAAIrD,KAAK,CAACsD,cAAc,CAACnD,oBAAoB,CAAC;MAC7E,IAAMoD,oBAAoB,GAAG,IAAIvD,KAAK,CAACsD,cAAc,CAAClD,kBAAkB,CAAC;MACzEmD,oBAAoB,CAACX,SAAS,GAAGS,sBAAsB,CAACT,SAAS,GAAG,KAAK;MACzE,OAAO,CAACd,YAAY,EAAEK,aAAa,EAAEO,aAAa,EAAEF,SAAS,EAAEa,sBAAsB,EAAEE,oBAAoB,EAAEvB,gBAAgB,CAAC;IAChI,CAAC,EAAE,CAAChB,UAAU,EAAEJ,KAAK,EAAEC,MAAM,EAAEL,KAAK,EAAEU,KAAK,CAAC,CAAC;IAAA;IA3BtCY,YAAY;IAAEK,aAAa;IAAEO,aAAa;IAAEF,SAAS;IAAEa,sBAAsB;IAAEE,oBAAoB;IAAEvB,gBAAgB;EA6B5H,IAAMwB,WAAW,GAAG,SAAdA,WAAW,CAAG1C,IAAI,EAAI;IAC1B0B,SAAS,CAACiB,OAAO,GAAG,IAAI;IACxBjB,SAAS,CAACkB,QAAQ,GAAGL,sBAAsB;IAC3CA,sBAAsB,CAACN,QAAQ,CAACY,QAAQ,CAACV,KAAK,GAAGnB,YAAY,CAACG,OAAO;IACrEoB,sBAAsB,CAACN,QAAQ,CAACa,CAAC,CAACX,KAAK,GAAGnC,IAAI,GAAG,CAAC,GAAG,GAAG;IACxDU,EAAE,CAACqC,eAAe,CAAC7B,gBAAgB,CAAC;IACpCR,EAAE,CAACsC,MAAM,CAACtB,SAAS,EAAEf,YAAY,CAACsC,OAAO,CAAC;IAC1CvB,SAAS,CAACkB,QAAQ,GAAGH,oBAAoB;IACzCA,oBAAoB,CAACR,QAAQ,CAACY,QAAQ,CAACV,KAAK,GAAGjB,gBAAgB,CAACC,OAAO;IACvEsB,oBAAoB,CAACR,QAAQ,CAACiB,CAAC,CAACf,KAAK,GAAGnC,IAAI,GAAG,CAAC,GAAG,GAAG;IACtDU,EAAE,CAACqC,eAAe,CAAC/B,YAAY,CAAC;IAChCN,EAAE,CAACsC,MAAM,CAACtB,SAAS,EAAEf,YAAY,CAACsC,OAAO,CAAC;IAC1CvB,SAAS,CAACiB,OAAO,GAAG,KAAK;EAC3B,CAAC;EAED,IAAIQ,KAAK,GAAG,CAAC;EACb/D,QAAQ,CAAC,YAAM;IACb,IAAIuB,YAAY,CAACsC,OAAO,KAAKtD,MAAM,KAAKC,QAAQ,IAAIuD,KAAK,GAAGxD,MAAM,CAAC,EAAE;MACnE,IAAMyD,iBAAiB,GAAG5C,KAAK,CAAC6C,UAAU;MAC1C7C,KAAK,CAAC6C,UAAU,GAAG,IAAI;MACvB,IAAMC,uBAAuB,GAAG9C,KAAK,CAAC+C,gBAAgB;MACtD/C,KAAK,CAAC+C,gBAAgB,GAAG3B,aAAa;MACtClB,EAAE,CAACqC,eAAe,CAAC/B,YAAY,CAAC;MAChCN,EAAE,CAACsC,MAAM,CAACxC,KAAK,EAAEG,YAAY,CAACsC,OAAO,CAAC;MACtCzC,KAAK,CAAC+C,gBAAgB,GAAGD,uBAAuB;MAChDZ,WAAW,CAAC1C,IAAI,CAAC;MACjB,IAAIG,MAAM,EAAEuC,WAAW,CAAC1C,IAAI,GAAG,GAAG,CAAC;MACnCU,EAAE,CAACqC,eAAe,CAAC,IAAI,CAAC;MACxBvC,KAAK,CAAC6C,UAAU,GAAGD,iBAAiB;MACpCD,KAAK,EAAE;IACT;EACF,CAAC,CAAC;EACF,OAAO,aAAalE,KAAK,CAACuE,aAAa,CAAC,OAAO,EAAExE,QAAQ,CAAC;IACxD,YAAY,EAAEwC,IAAI,CAACC,EAAE,GAAG;EAC1B,CAAC,EAAElB,KAAK,EAAE;IACRd,GAAG,EAAEA;EACP,CAAC,CAAC,EAAE,aAAaR,KAAK,CAACuE,aAAa,CAAC,MAAM,EAAE;IAC3ClD,WAAW,EAAEA,WAAW;IACxBmD,QAAQ,EAAEpC,aAAa;IACvB3B,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACjBgE,QAAQ,EAAE,CAAC,CAAClC,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;EAC/B,CAAC,EAAE,aAAaxC,KAAK,CAACuE,aAAa,CAAC,mBAAmB,EAAE;IACvDG,GAAG,EAAE3C,YAAY,CAACG,OAAO;IACzB,cAAc,EAAET,EAAE,CAACkD,cAAc;IACjCC,WAAW,EAAE,IAAI;IACjBhE,OAAO,EAAEA,OAAO;IAChBQ,UAAU,EAAEA;EACd,CAAC,CAAC,CAAC,EAAE,aAAapB,KAAK,CAACuE,aAAa,CAAC,oBAAoB,EAAE;IAC1D/D,GAAG,EAAEkB,YAAY;IACjBmD,IAAI,EAAE,CAAC,CAAChE,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE,CAACA,MAAM,GAAG,CAAC,EAAE,CAAC,EAAEE,GAAG;EAC/D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,SAASV,cAAc"},"metadata":{},"sourceType":"module"}