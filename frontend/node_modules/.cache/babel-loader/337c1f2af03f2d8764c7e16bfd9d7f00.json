{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Loader, FileLoader, BufferGeometry, Float32BufferAttribute } from 'three';\nvar PDBLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(PDBLoader, _Loader);\n  var _super = _createSuper(PDBLoader);\n  function PDBLoader(manager) {\n    _classCallCheck(this, PDBLoader);\n    return _super.call(this, manager);\n  }\n  _createClass(PDBLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.setRequestHeader(scope.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(scope.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    } // Based on CanvasMol PDB parser\n  }, {\n    key: \"parse\",\n    value: function parse(text) {\n      function trim(text) {\n        return text.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n      }\n      function capitalize(text) {\n        return text.charAt(0).toUpperCase() + text.substr(1).toLowerCase();\n      }\n      function hash(s, e) {\n        return 's' + Math.min(s, e) + 'e' + Math.max(s, e);\n      }\n      function parseBond(start, length, satom, i) {\n        var eatom = parseInt(lines[i].substr(start, length));\n        if (eatom) {\n          var h = hash(satom, eatom);\n          if (_bhash[h] === undefined) {\n            _bonds.push([satom - 1, eatom - 1, 1]);\n            _bhash[h] = _bonds.length - 1;\n          }\n        }\n      }\n      function buildGeometry() {\n        var build = {\n          geometryAtoms: new BufferGeometry(),\n          geometryBonds: new BufferGeometry(),\n          json: {\n            atoms: atoms\n          }\n        };\n        var geometryAtoms = build.geometryAtoms;\n        var geometryBonds = build.geometryBonds;\n        var verticesAtoms = [];\n        var colorsAtoms = [];\n        var verticesBonds = []; // atoms\n\n        for (var i = 0, l = atoms.length; i < l; i++) {\n          var atom = atoms[i];\n          var x = atom[0];\n          var y = atom[1];\n          var z = atom[2];\n          verticesAtoms.push(x, y, z);\n          var r = atom[3][0] / 255;\n          var g = atom[3][1] / 255;\n          var b = atom[3][2] / 255;\n          colorsAtoms.push(r, g, b);\n        } // bonds\n\n        for (var _i = 0, _l = _bonds.length; _i < _l; _i++) {\n          var bond = _bonds[_i];\n          var start = bond[0];\n          var end = bond[1];\n          var startAtom = _atomMap[start];\n          var endAtom = _atomMap[end];\n          var _x = startAtom[0];\n          var _y = startAtom[1];\n          var _z = startAtom[2];\n          verticesBonds.push(_x, _y, _z);\n          _x = endAtom[0];\n          _y = endAtom[1];\n          _z = endAtom[2];\n          verticesBonds.push(_x, _y, _z);\n        } // build geometry\n\n        geometryAtoms.setAttribute('position', new Float32BufferAttribute(verticesAtoms, 3));\n        geometryAtoms.setAttribute('color', new Float32BufferAttribute(colorsAtoms, 3));\n        geometryBonds.setAttribute('position', new Float32BufferAttribute(verticesBonds, 3));\n        return build;\n      }\n      var CPK = {\n        h: [255, 255, 255],\n        he: [217, 255, 255],\n        li: [204, 128, 255],\n        be: [194, 255, 0],\n        b: [255, 181, 181],\n        c: [144, 144, 144],\n        n: [48, 80, 248],\n        o: [255, 13, 13],\n        f: [144, 224, 80],\n        ne: [179, 227, 245],\n        na: [171, 92, 242],\n        mg: [138, 255, 0],\n        al: [191, 166, 166],\n        si: [240, 200, 160],\n        p: [255, 128, 0],\n        s: [255, 255, 48],\n        cl: [31, 240, 31],\n        ar: [128, 209, 227],\n        k: [143, 64, 212],\n        ca: [61, 255, 0],\n        sc: [230, 230, 230],\n        ti: [191, 194, 199],\n        v: [166, 166, 171],\n        cr: [138, 153, 199],\n        mn: [156, 122, 199],\n        fe: [224, 102, 51],\n        co: [240, 144, 160],\n        ni: [80, 208, 80],\n        cu: [200, 128, 51],\n        zn: [125, 128, 176],\n        ga: [194, 143, 143],\n        ge: [102, 143, 143],\n        as: [189, 128, 227],\n        se: [255, 161, 0],\n        br: [166, 41, 41],\n        kr: [92, 184, 209],\n        rb: [112, 46, 176],\n        sr: [0, 255, 0],\n        y: [148, 255, 255],\n        zr: [148, 224, 224],\n        nb: [115, 194, 201],\n        mo: [84, 181, 181],\n        tc: [59, 158, 158],\n        ru: [36, 143, 143],\n        rh: [10, 125, 140],\n        pd: [0, 105, 133],\n        ag: [192, 192, 192],\n        cd: [255, 217, 143],\n        in: [166, 117, 115],\n        sn: [102, 128, 128],\n        sb: [158, 99, 181],\n        te: [212, 122, 0],\n        i: [148, 0, 148],\n        xe: [66, 158, 176],\n        cs: [87, 23, 143],\n        ba: [0, 201, 0],\n        la: [112, 212, 255],\n        ce: [255, 255, 199],\n        pr: [217, 255, 199],\n        nd: [199, 255, 199],\n        pm: [163, 255, 199],\n        sm: [143, 255, 199],\n        eu: [97, 255, 199],\n        gd: [69, 255, 199],\n        tb: [48, 255, 199],\n        dy: [31, 255, 199],\n        ho: [0, 255, 156],\n        er: [0, 230, 117],\n        tm: [0, 212, 82],\n        yb: [0, 191, 56],\n        lu: [0, 171, 36],\n        hf: [77, 194, 255],\n        ta: [77, 166, 255],\n        w: [33, 148, 214],\n        re: [38, 125, 171],\n        os: [38, 102, 150],\n        ir: [23, 84, 135],\n        pt: [208, 208, 224],\n        au: [255, 209, 35],\n        hg: [184, 184, 208],\n        tl: [166, 84, 77],\n        pb: [87, 89, 97],\n        bi: [158, 79, 181],\n        po: [171, 92, 0],\n        at: [117, 79, 69],\n        rn: [66, 130, 150],\n        fr: [66, 0, 102],\n        ra: [0, 125, 0],\n        ac: [112, 171, 250],\n        th: [0, 186, 255],\n        pa: [0, 161, 255],\n        u: [0, 143, 255],\n        np: [0, 128, 255],\n        pu: [0, 107, 255],\n        am: [84, 92, 242],\n        cm: [120, 92, 227],\n        bk: [138, 79, 227],\n        cf: [161, 54, 212],\n        es: [179, 31, 212],\n        fm: [179, 31, 186],\n        md: [179, 13, 166],\n        no: [189, 13, 135],\n        lr: [199, 0, 102],\n        rf: [204, 0, 89],\n        db: [209, 0, 79],\n        sg: [217, 0, 69],\n        bh: [224, 0, 56],\n        hs: [230, 0, 46],\n        mt: [235, 0, 38],\n        ds: [235, 0, 38],\n        rg: [235, 0, 38],\n        cn: [235, 0, 38],\n        uut: [235, 0, 38],\n        uuq: [235, 0, 38],\n        uup: [235, 0, 38],\n        uuh: [235, 0, 38],\n        uus: [235, 0, 38],\n        uuo: [235, 0, 38]\n      };\n      var atoms = [];\n      var _bonds = [];\n      var _bhash = {};\n      var _atomMap = {}; // parse\n\n      var lines = text.split('\\n');\n      for (var i = 0, l = lines.length; i < l; i++) {\n        if (lines[i].substr(0, 4) === 'ATOM' || lines[i].substr(0, 6) === 'HETATM') {\n          var x = parseFloat(lines[i].substr(30, 7));\n          var y = parseFloat(lines[i].substr(38, 7));\n          var z = parseFloat(lines[i].substr(46, 7));\n          var index = parseInt(lines[i].substr(6, 5)) - 1;\n          var e = trim(lines[i].substr(76, 2)).toLowerCase();\n          if (e === '') {\n            e = trim(lines[i].substr(12, 2)).toLowerCase();\n          }\n          var atomData = [x, y, z, CPK[e], capitalize(e)];\n          atoms.push(atomData);\n          _atomMap[index] = atomData;\n        } else if (lines[i].substr(0, 6) === 'CONECT') {\n          var satom = parseInt(lines[i].substr(6, 5));\n          parseBond(11, 5, satom, i);\n          parseBond(16, 5, satom, i);\n          parseBond(21, 5, satom, i);\n          parseBond(26, 5, satom, i);\n        }\n      } // build and return geometry\n\n      return buildGeometry();\n    }\n  }]);\n  return PDBLoader;\n}(Loader);\nexport { PDBLoader };","map":{"version":3,"names":["Loader","FileLoader","BufferGeometry","Float32BufferAttribute","PDBLoader","manager","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","text","parse","e","console","error","itemError","trim","replace","capitalize","charAt","toUpperCase","substr","toLowerCase","hash","s","Math","min","max","parseBond","start","length","satom","i","eatom","parseInt","lines","h","_bhash","undefined","_bonds","push","buildGeometry","build","geometryAtoms","geometryBonds","json","atoms","verticesAtoms","colorsAtoms","verticesBonds","l","atom","x","y","z","r","g","b","bond","end","startAtom","_atomMap","endAtom","setAttribute","CPK","he","li","be","c","n","o","f","ne","na","mg","al","si","p","cl","ar","k","ca","sc","ti","v","cr","mn","fe","co","ni","cu","zn","ga","ge","as","se","br","kr","rb","sr","zr","nb","mo","tc","ru","rh","pd","ag","cd","in","sn","sb","te","xe","cs","ba","la","ce","pr","nd","pm","sm","eu","gd","tb","dy","ho","er","tm","yb","lu","hf","ta","w","re","os","ir","pt","au","hg","tl","pb","bi","po","at","rn","fr","ra","ac","th","pa","u","np","pu","am","cm","bk","cf","es","fm","md","no","lr","rf","db","sg","bh","hs","mt","ds","rg","cn","uut","uuq","uup","uuh","uus","uuo","split","parseFloat","index","atomData"],"sources":["/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/three-stdlib/loaders/PDBLoader.js"],"sourcesContent":["import { Loader, FileLoader, BufferGeometry, Float32BufferAttribute } from 'three';\n\nclass PDBLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  } // Based on CanvasMol PDB parser\n\n\n  parse(text) {\n    function trim(text) {\n      return text.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function capitalize(text) {\n      return text.charAt(0).toUpperCase() + text.substr(1).toLowerCase();\n    }\n\n    function hash(s, e) {\n      return 's' + Math.min(s, e) + 'e' + Math.max(s, e);\n    }\n\n    function parseBond(start, length, satom, i) {\n      const eatom = parseInt(lines[i].substr(start, length));\n\n      if (eatom) {\n        const h = hash(satom, eatom);\n\n        if (_bhash[h] === undefined) {\n          _bonds.push([satom - 1, eatom - 1, 1]);\n\n          _bhash[h] = _bonds.length - 1;\n        }\n      }\n    }\n\n    function buildGeometry() {\n      const build = {\n        geometryAtoms: new BufferGeometry(),\n        geometryBonds: new BufferGeometry(),\n        json: {\n          atoms: atoms\n        }\n      };\n      const geometryAtoms = build.geometryAtoms;\n      const geometryBonds = build.geometryBonds;\n      const verticesAtoms = [];\n      const colorsAtoms = [];\n      const verticesBonds = []; // atoms\n\n      for (let i = 0, l = atoms.length; i < l; i++) {\n        const atom = atoms[i];\n        const x = atom[0];\n        const y = atom[1];\n        const z = atom[2];\n        verticesAtoms.push(x, y, z);\n        const r = atom[3][0] / 255;\n        const g = atom[3][1] / 255;\n        const b = atom[3][2] / 255;\n        colorsAtoms.push(r, g, b);\n      } // bonds\n\n\n      for (let i = 0, l = _bonds.length; i < l; i++) {\n        const bond = _bonds[i];\n        const start = bond[0];\n        const end = bond[1];\n        const startAtom = _atomMap[start];\n        const endAtom = _atomMap[end];\n        let x = startAtom[0];\n        let y = startAtom[1];\n        let z = startAtom[2];\n        verticesBonds.push(x, y, z);\n        x = endAtom[0];\n        y = endAtom[1];\n        z = endAtom[2];\n        verticesBonds.push(x, y, z);\n      } // build geometry\n\n\n      geometryAtoms.setAttribute('position', new Float32BufferAttribute(verticesAtoms, 3));\n      geometryAtoms.setAttribute('color', new Float32BufferAttribute(colorsAtoms, 3));\n      geometryBonds.setAttribute('position', new Float32BufferAttribute(verticesBonds, 3));\n      return build;\n    }\n\n    const CPK = {\n      h: [255, 255, 255],\n      he: [217, 255, 255],\n      li: [204, 128, 255],\n      be: [194, 255, 0],\n      b: [255, 181, 181],\n      c: [144, 144, 144],\n      n: [48, 80, 248],\n      o: [255, 13, 13],\n      f: [144, 224, 80],\n      ne: [179, 227, 245],\n      na: [171, 92, 242],\n      mg: [138, 255, 0],\n      al: [191, 166, 166],\n      si: [240, 200, 160],\n      p: [255, 128, 0],\n      s: [255, 255, 48],\n      cl: [31, 240, 31],\n      ar: [128, 209, 227],\n      k: [143, 64, 212],\n      ca: [61, 255, 0],\n      sc: [230, 230, 230],\n      ti: [191, 194, 199],\n      v: [166, 166, 171],\n      cr: [138, 153, 199],\n      mn: [156, 122, 199],\n      fe: [224, 102, 51],\n      co: [240, 144, 160],\n      ni: [80, 208, 80],\n      cu: [200, 128, 51],\n      zn: [125, 128, 176],\n      ga: [194, 143, 143],\n      ge: [102, 143, 143],\n      as: [189, 128, 227],\n      se: [255, 161, 0],\n      br: [166, 41, 41],\n      kr: [92, 184, 209],\n      rb: [112, 46, 176],\n      sr: [0, 255, 0],\n      y: [148, 255, 255],\n      zr: [148, 224, 224],\n      nb: [115, 194, 201],\n      mo: [84, 181, 181],\n      tc: [59, 158, 158],\n      ru: [36, 143, 143],\n      rh: [10, 125, 140],\n      pd: [0, 105, 133],\n      ag: [192, 192, 192],\n      cd: [255, 217, 143],\n      in: [166, 117, 115],\n      sn: [102, 128, 128],\n      sb: [158, 99, 181],\n      te: [212, 122, 0],\n      i: [148, 0, 148],\n      xe: [66, 158, 176],\n      cs: [87, 23, 143],\n      ba: [0, 201, 0],\n      la: [112, 212, 255],\n      ce: [255, 255, 199],\n      pr: [217, 255, 199],\n      nd: [199, 255, 199],\n      pm: [163, 255, 199],\n      sm: [143, 255, 199],\n      eu: [97, 255, 199],\n      gd: [69, 255, 199],\n      tb: [48, 255, 199],\n      dy: [31, 255, 199],\n      ho: [0, 255, 156],\n      er: [0, 230, 117],\n      tm: [0, 212, 82],\n      yb: [0, 191, 56],\n      lu: [0, 171, 36],\n      hf: [77, 194, 255],\n      ta: [77, 166, 255],\n      w: [33, 148, 214],\n      re: [38, 125, 171],\n      os: [38, 102, 150],\n      ir: [23, 84, 135],\n      pt: [208, 208, 224],\n      au: [255, 209, 35],\n      hg: [184, 184, 208],\n      tl: [166, 84, 77],\n      pb: [87, 89, 97],\n      bi: [158, 79, 181],\n      po: [171, 92, 0],\n      at: [117, 79, 69],\n      rn: [66, 130, 150],\n      fr: [66, 0, 102],\n      ra: [0, 125, 0],\n      ac: [112, 171, 250],\n      th: [0, 186, 255],\n      pa: [0, 161, 255],\n      u: [0, 143, 255],\n      np: [0, 128, 255],\n      pu: [0, 107, 255],\n      am: [84, 92, 242],\n      cm: [120, 92, 227],\n      bk: [138, 79, 227],\n      cf: [161, 54, 212],\n      es: [179, 31, 212],\n      fm: [179, 31, 186],\n      md: [179, 13, 166],\n      no: [189, 13, 135],\n      lr: [199, 0, 102],\n      rf: [204, 0, 89],\n      db: [209, 0, 79],\n      sg: [217, 0, 69],\n      bh: [224, 0, 56],\n      hs: [230, 0, 46],\n      mt: [235, 0, 38],\n      ds: [235, 0, 38],\n      rg: [235, 0, 38],\n      cn: [235, 0, 38],\n      uut: [235, 0, 38],\n      uuq: [235, 0, 38],\n      uup: [235, 0, 38],\n      uuh: [235, 0, 38],\n      uus: [235, 0, 38],\n      uuo: [235, 0, 38]\n    };\n    const atoms = [];\n    const _bonds = [];\n    const _bhash = {};\n    const _atomMap = {}; // parse\n\n    const lines = text.split('\\n');\n\n    for (let i = 0, l = lines.length; i < l; i++) {\n      if (lines[i].substr(0, 4) === 'ATOM' || lines[i].substr(0, 6) === 'HETATM') {\n        const x = parseFloat(lines[i].substr(30, 7));\n        const y = parseFloat(lines[i].substr(38, 7));\n        const z = parseFloat(lines[i].substr(46, 7));\n        const index = parseInt(lines[i].substr(6, 5)) - 1;\n        let e = trim(lines[i].substr(76, 2)).toLowerCase();\n\n        if (e === '') {\n          e = trim(lines[i].substr(12, 2)).toLowerCase();\n        }\n\n        const atomData = [x, y, z, CPK[e], capitalize(e)];\n        atoms.push(atomData);\n        _atomMap[index] = atomData;\n      } else if (lines[i].substr(0, 6) === 'CONECT') {\n        const satom = parseInt(lines[i].substr(6, 5));\n        parseBond(11, 5, satom, i);\n        parseBond(16, 5, satom, i);\n        parseBond(21, 5, satom, i);\n        parseBond(26, 5, satom, i);\n      }\n    } // build and return geometry\n\n\n    return buildGeometry();\n  }\n\n}\n\nexport { PDBLoader };\n"],"mappings":"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AG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;QAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;QACjBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;QAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACjBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;QACjBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QACf9C,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAClB+C,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QACjBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACjBhF,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;QAChBiF,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QACjBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QACfC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QACjBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QACjBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;QAChBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;QAChBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;QAChBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAClBC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QACjBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QACjBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;QAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;QACjBC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;QAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;QACjBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC;QAChBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QACfC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACnBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QACjBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QACjBC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QAChBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QACjBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QACjBC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QACjBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;QACjBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAChBC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACjBC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACjBC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACjBC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACjBC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACjBC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;MAClB,CAAC;MACD,IAAMnI,KAAK,GAAG,EAAE;MAChB,IAAMP,MAAM,GAAG,EAAE;MACjB,IAAMF,MAAM,GAAG,CAAC,CAAC;MACjB,IAAMwB,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;;MAErB,IAAM1B,KAAK,GAAGzB,IAAI,CAACwK,KAAK,CAAC,IAAI,CAAC;MAE9B,KAAK,IAAIlJ,CAAC,GAAG,CAAC,EAAEkB,CAAC,GAAGf,KAAK,CAACL,MAAM,EAAEE,CAAC,GAAGkB,CAAC,EAAElB,CAAC,EAAE,EAAE;QAC5C,IAAIG,KAAK,CAACH,CAAC,CAAC,CAACX,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,MAAM,IAAIc,KAAK,CAACH,CAAC,CAAC,CAACX,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,QAAQ,EAAE;UAC1E,IAAM+B,CAAC,GAAG+H,UAAU,CAAChJ,KAAK,CAACH,CAAC,CAAC,CAACX,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;UAC5C,IAAMgC,CAAC,GAAG8H,UAAU,CAAChJ,KAAK,CAACH,CAAC,CAAC,CAACX,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;UAC5C,IAAMiC,CAAC,GAAG6H,UAAU,CAAChJ,KAAK,CAACH,CAAC,CAAC,CAACX,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;UAC5C,IAAM+J,KAAK,GAAGlJ,QAAQ,CAACC,KAAK,CAACH,CAAC,CAAC,CAACX,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;UACjD,IAAIT,CAAC,GAAGI,IAAI,CAACmB,KAAK,CAACH,CAAC,CAAC,CAACX,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE;UAElD,IAAIV,CAAC,KAAK,EAAE,EAAE;YACZA,CAAC,GAAGI,IAAI,CAACmB,KAAK,CAACH,CAAC,CAAC,CAACX,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE;UAChD;UAEA,IAAM+J,QAAQ,GAAG,CAACjI,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEU,GAAG,CAACpD,CAAC,CAAC,EAAEM,UAAU,CAACN,CAAC,CAAC,CAAC;UACjDkC,KAAK,CAACN,IAAI,CAAC6I,QAAQ,CAAC;UACpBxH,QAAQ,CAACuH,KAAK,CAAC,GAAGC,QAAQ;QAC5B,CAAC,MAAM,IAAIlJ,KAAK,CAACH,CAAC,CAAC,CAACX,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,QAAQ,EAAE;UAC7C,IAAMU,KAAK,GAAGG,QAAQ,CAACC,KAAK,CAACH,CAAC,CAAC,CAACX,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UAC7CO,SAAS,CAAC,EAAE,EAAE,CAAC,EAAEG,KAAK,EAAEC,CAAC,CAAC;UAC1BJ,SAAS,CAAC,EAAE,EAAE,CAAC,EAAEG,KAAK,EAAEC,CAAC,CAAC;UAC1BJ,SAAS,CAAC,EAAE,EAAE,CAAC,EAAEG,KAAK,EAAEC,CAAC,CAAC;UAC1BJ,SAAS,CAAC,EAAE,EAAE,CAAC,EAAEG,KAAK,EAAEC,CAAC,CAAC;QAC5B;MACF,CAAC,CAAC;;MAGF,OAAOS,aAAa,EAAE;IACxB;EAAC;EAAA;AAAA,EAjQqBlD,MAAM;AAqQ9B,SAASI,SAAS"},"metadata":{},"sourceType":"module"}