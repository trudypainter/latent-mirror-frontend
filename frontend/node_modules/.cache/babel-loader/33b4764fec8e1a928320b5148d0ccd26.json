{"ast":null,"code":"import _regeneratorRuntime from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { clamp, euclideanModulo, lerp } from './MathUtils.js';\nimport { ColorManagement, SRGBToLinear, LinearToSRGB } from './ColorManagement.js';\nimport { SRGBColorSpace, LinearSRGBColorSpace } from '../constants.js';\nvar _colorKeywords = {\n  'aliceblue': 0xF0F8FF,\n  'antiquewhite': 0xFAEBD7,\n  'aqua': 0x00FFFF,\n  'aquamarine': 0x7FFFD4,\n  'azure': 0xF0FFFF,\n  'beige': 0xF5F5DC,\n  'bisque': 0xFFE4C4,\n  'black': 0x000000,\n  'blanchedalmond': 0xFFEBCD,\n  'blue': 0x0000FF,\n  'blueviolet': 0x8A2BE2,\n  'brown': 0xA52A2A,\n  'burlywood': 0xDEB887,\n  'cadetblue': 0x5F9EA0,\n  'chartreuse': 0x7FFF00,\n  'chocolate': 0xD2691E,\n  'coral': 0xFF7F50,\n  'cornflowerblue': 0x6495ED,\n  'cornsilk': 0xFFF8DC,\n  'crimson': 0xDC143C,\n  'cyan': 0x00FFFF,\n  'darkblue': 0x00008B,\n  'darkcyan': 0x008B8B,\n  'darkgoldenrod': 0xB8860B,\n  'darkgray': 0xA9A9A9,\n  'darkgreen': 0x006400,\n  'darkgrey': 0xA9A9A9,\n  'darkkhaki': 0xBDB76B,\n  'darkmagenta': 0x8B008B,\n  'darkolivegreen': 0x556B2F,\n  'darkorange': 0xFF8C00,\n  'darkorchid': 0x9932CC,\n  'darkred': 0x8B0000,\n  'darksalmon': 0xE9967A,\n  'darkseagreen': 0x8FBC8F,\n  'darkslateblue': 0x483D8B,\n  'darkslategray': 0x2F4F4F,\n  'darkslategrey': 0x2F4F4F,\n  'darkturquoise': 0x00CED1,\n  'darkviolet': 0x9400D3,\n  'deeppink': 0xFF1493,\n  'deepskyblue': 0x00BFFF,\n  'dimgray': 0x696969,\n  'dimgrey': 0x696969,\n  'dodgerblue': 0x1E90FF,\n  'firebrick': 0xB22222,\n  'floralwhite': 0xFFFAF0,\n  'forestgreen': 0x228B22,\n  'fuchsia': 0xFF00FF,\n  'gainsboro': 0xDCDCDC,\n  'ghostwhite': 0xF8F8FF,\n  'gold': 0xFFD700,\n  'goldenrod': 0xDAA520,\n  'gray': 0x808080,\n  'green': 0x008000,\n  'greenyellow': 0xADFF2F,\n  'grey': 0x808080,\n  'honeydew': 0xF0FFF0,\n  'hotpink': 0xFF69B4,\n  'indianred': 0xCD5C5C,\n  'indigo': 0x4B0082,\n  'ivory': 0xFFFFF0,\n  'khaki': 0xF0E68C,\n  'lavender': 0xE6E6FA,\n  'lavenderblush': 0xFFF0F5,\n  'lawngreen': 0x7CFC00,\n  'lemonchiffon': 0xFFFACD,\n  'lightblue': 0xADD8E6,\n  'lightcoral': 0xF08080,\n  'lightcyan': 0xE0FFFF,\n  'lightgoldenrodyellow': 0xFAFAD2,\n  'lightgray': 0xD3D3D3,\n  'lightgreen': 0x90EE90,\n  'lightgrey': 0xD3D3D3,\n  'lightpink': 0xFFB6C1,\n  'lightsalmon': 0xFFA07A,\n  'lightseagreen': 0x20B2AA,\n  'lightskyblue': 0x87CEFA,\n  'lightslategray': 0x778899,\n  'lightslategrey': 0x778899,\n  'lightsteelblue': 0xB0C4DE,\n  'lightyellow': 0xFFFFE0,\n  'lime': 0x00FF00,\n  'limegreen': 0x32CD32,\n  'linen': 0xFAF0E6,\n  'magenta': 0xFF00FF,\n  'maroon': 0x800000,\n  'mediumaquamarine': 0x66CDAA,\n  'mediumblue': 0x0000CD,\n  'mediumorchid': 0xBA55D3,\n  'mediumpurple': 0x9370DB,\n  'mediumseagreen': 0x3CB371,\n  'mediumslateblue': 0x7B68EE,\n  'mediumspringgreen': 0x00FA9A,\n  'mediumturquoise': 0x48D1CC,\n  'mediumvioletred': 0xC71585,\n  'midnightblue': 0x191970,\n  'mintcream': 0xF5FFFA,\n  'mistyrose': 0xFFE4E1,\n  'moccasin': 0xFFE4B5,\n  'navajowhite': 0xFFDEAD,\n  'navy': 0x000080,\n  'oldlace': 0xFDF5E6,\n  'olive': 0x808000,\n  'olivedrab': 0x6B8E23,\n  'orange': 0xFFA500,\n  'orangered': 0xFF4500,\n  'orchid': 0xDA70D6,\n  'palegoldenrod': 0xEEE8AA,\n  'palegreen': 0x98FB98,\n  'paleturquoise': 0xAFEEEE,\n  'palevioletred': 0xDB7093,\n  'papayawhip': 0xFFEFD5,\n  'peachpuff': 0xFFDAB9,\n  'peru': 0xCD853F,\n  'pink': 0xFFC0CB,\n  'plum': 0xDDA0DD,\n  'powderblue': 0xB0E0E6,\n  'purple': 0x800080,\n  'rebeccapurple': 0x663399,\n  'red': 0xFF0000,\n  'rosybrown': 0xBC8F8F,\n  'royalblue': 0x4169E1,\n  'saddlebrown': 0x8B4513,\n  'salmon': 0xFA8072,\n  'sandybrown': 0xF4A460,\n  'seagreen': 0x2E8B57,\n  'seashell': 0xFFF5EE,\n  'sienna': 0xA0522D,\n  'silver': 0xC0C0C0,\n  'skyblue': 0x87CEEB,\n  'slateblue': 0x6A5ACD,\n  'slategray': 0x708090,\n  'slategrey': 0x708090,\n  'snow': 0xFFFAFA,\n  'springgreen': 0x00FF7F,\n  'steelblue': 0x4682B4,\n  'tan': 0xD2B48C,\n  'teal': 0x008080,\n  'thistle': 0xD8BFD8,\n  'tomato': 0xFF6347,\n  'turquoise': 0x40E0D0,\n  'violet': 0xEE82EE,\n  'wheat': 0xF5DEB3,\n  'white': 0xFFFFFF,\n  'whitesmoke': 0xF5F5F5,\n  'yellow': 0xFFFF00,\n  'yellowgreen': 0x9ACD32\n};\nvar _rgb = {\n  r: 0,\n  g: 0,\n  b: 0\n};\nvar _hslA = {\n  h: 0,\n  s: 0,\n  l: 0\n};\nvar _hslB = {\n  h: 0,\n  s: 0,\n  l: 0\n};\nfunction hue2rgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n  return p;\n}\nfunction toComponents(source, target) {\n  target.r = source.r;\n  target.g = source.g;\n  target.b = source.b;\n  return target;\n}\nvar Color = /*#__PURE__*/function (_Symbol$iterator) {\n  function Color(r, g, b) {\n    _classCallCheck(this, Color);\n    this.isColor = true;\n    this.r = 1;\n    this.g = 1;\n    this.b = 1;\n    if (g === undefined && b === undefined) {\n      // r is THREE.Color, hex or string\n      return this.set(r);\n    }\n    return this.setRGB(r, g, b);\n  }\n  _createClass(Color, [{\n    key: \"set\",\n    value: function set(value) {\n      if (value && value.isColor) {\n        this.copy(value);\n      } else if (typeof value === 'number') {\n        this.setHex(value);\n      } else if (typeof value === 'string') {\n        this.setStyle(value);\n      }\n      return this;\n    }\n  }, {\n    key: \"setScalar\",\n    value: function setScalar(scalar) {\n      this.r = scalar;\n      this.g = scalar;\n      this.b = scalar;\n      return this;\n    }\n  }, {\n    key: \"setHex\",\n    value: function setHex(hex) {\n      var colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SRGBColorSpace;\n      hex = Math.floor(hex);\n      this.r = (hex >> 16 & 255) / 255;\n      this.g = (hex >> 8 & 255) / 255;\n      this.b = (hex & 255) / 255;\n      ColorManagement.toWorkingColorSpace(this, colorSpace);\n      return this;\n    }\n  }, {\n    key: \"setRGB\",\n    value: function setRGB(r, g, b) {\n      var colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : LinearSRGBColorSpace;\n      this.r = r;\n      this.g = g;\n      this.b = b;\n      ColorManagement.toWorkingColorSpace(this, colorSpace);\n      return this;\n    }\n  }, {\n    key: \"setHSL\",\n    value: function setHSL(h, s, l) {\n      var colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : LinearSRGBColorSpace;\n      // h,s,l ranges are in 0.0 - 1.0\n      h = euclideanModulo(h, 1);\n      s = clamp(s, 0, 1);\n      l = clamp(l, 0, 1);\n      if (s === 0) {\n        this.r = this.g = this.b = l;\n      } else {\n        var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n        var q = 2 * l - p;\n        this.r = hue2rgb(q, p, h + 1 / 3);\n        this.g = hue2rgb(q, p, h);\n        this.b = hue2rgb(q, p, h - 1 / 3);\n      }\n      ColorManagement.toWorkingColorSpace(this, colorSpace);\n      return this;\n    }\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(style) {\n      var colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SRGBColorSpace;\n      function handleAlpha(string) {\n        if (string === undefined) return;\n        if (parseFloat(string) < 1) {\n          console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n        }\n      }\n      var m;\n      if (m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)) {\n        // rgb / hsl\n\n        var color;\n        var name = m[1];\n        var components = m[2];\n        switch (name) {\n          case 'rgb':\n          case 'rgba':\n            if (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              // rgb(255,0,0) rgba(255,0,0,0.5)\n              this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n              this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n              this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n              ColorManagement.toWorkingColorSpace(this, colorSpace);\n              handleAlpha(color[4]);\n              return this;\n            }\n            if (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n              this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n              this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n              this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n              ColorManagement.toWorkingColorSpace(this, colorSpace);\n              handleAlpha(color[4]);\n              return this;\n            }\n            break;\n          case 'hsl':\n          case 'hsla':\n            if (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n              var h = parseFloat(color[1]) / 360;\n              var s = parseFloat(color[2]) / 100;\n              var l = parseFloat(color[3]) / 100;\n              handleAlpha(color[4]);\n              return this.setHSL(h, s, l, colorSpace);\n            }\n            break;\n        }\n      } else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n        // hex color\n\n        var hex = m[1];\n        var size = hex.length;\n        if (size === 3) {\n          // #ff0\n          this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n          this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n          this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n          ColorManagement.toWorkingColorSpace(this, colorSpace);\n          return this;\n        } else if (size === 6) {\n          // #ff0000\n          this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n          this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n          this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n          ColorManagement.toWorkingColorSpace(this, colorSpace);\n          return this;\n        }\n      }\n      if (style && style.length > 0) {\n        return this.setColorName(style, colorSpace);\n      }\n      return this;\n    }\n  }, {\n    key: \"setColorName\",\n    value: function setColorName(style) {\n      var colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SRGBColorSpace;\n      // color keywords\n      var hex = _colorKeywords[style.toLowerCase()];\n      if (hex !== undefined) {\n        // red\n        this.setHex(hex, colorSpace);\n      } else {\n        // unknown color\n        console.warn('THREE.Color: Unknown color ' + style);\n      }\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this.r, this.g, this.b);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(color) {\n      this.r = color.r;\n      this.g = color.g;\n      this.b = color.b;\n      return this;\n    }\n  }, {\n    key: \"copySRGBToLinear\",\n    value: function copySRGBToLinear(color) {\n      this.r = SRGBToLinear(color.r);\n      this.g = SRGBToLinear(color.g);\n      this.b = SRGBToLinear(color.b);\n      return this;\n    }\n  }, {\n    key: \"copyLinearToSRGB\",\n    value: function copyLinearToSRGB(color) {\n      this.r = LinearToSRGB(color.r);\n      this.g = LinearToSRGB(color.g);\n      this.b = LinearToSRGB(color.b);\n      return this;\n    }\n  }, {\n    key: \"convertSRGBToLinear\",\n    value: function convertSRGBToLinear() {\n      this.copySRGBToLinear(this);\n      return this;\n    }\n  }, {\n    key: \"convertLinearToSRGB\",\n    value: function convertLinearToSRGB() {\n      this.copyLinearToSRGB(this);\n      return this;\n    }\n  }, {\n    key: \"getHex\",\n    value: function getHex() {\n      var colorSpace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SRGBColorSpace;\n      ColorManagement.fromWorkingColorSpace(toComponents(this, _rgb), colorSpace);\n      return clamp(_rgb.r * 255, 0, 255) << 16 ^ clamp(_rgb.g * 255, 0, 255) << 8 ^ clamp(_rgb.b * 255, 0, 255) << 0;\n    }\n  }, {\n    key: \"getHexString\",\n    value: function getHexString() {\n      var colorSpace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SRGBColorSpace;\n      return ('000000' + this.getHex(colorSpace).toString(16)).slice(-6);\n    }\n  }, {\n    key: \"getHSL\",\n    value: function getHSL(target) {\n      var colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : LinearSRGBColorSpace;\n      // h,s,l ranges are in 0.0 - 1.0\n\n      ColorManagement.fromWorkingColorSpace(toComponents(this, _rgb), colorSpace);\n      var r = _rgb.r,\n        g = _rgb.g,\n        b = _rgb.b;\n      var max = Math.max(r, g, b);\n      var min = Math.min(r, g, b);\n      var hue, saturation;\n      var lightness = (min + max) / 2.0;\n      if (min === max) {\n        hue = 0;\n        saturation = 0;\n      } else {\n        var delta = max - min;\n        saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n        switch (max) {\n          case r:\n            hue = (g - b) / delta + (g < b ? 6 : 0);\n            break;\n          case g:\n            hue = (b - r) / delta + 2;\n            break;\n          case b:\n            hue = (r - g) / delta + 4;\n            break;\n        }\n        hue /= 6;\n      }\n      target.h = hue;\n      target.s = saturation;\n      target.l = lightness;\n      return target;\n    }\n  }, {\n    key: \"getRGB\",\n    value: function getRGB(target) {\n      var colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : LinearSRGBColorSpace;\n      ColorManagement.fromWorkingColorSpace(toComponents(this, _rgb), colorSpace);\n      target.r = _rgb.r;\n      target.g = _rgb.g;\n      target.b = _rgb.b;\n      return target;\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle() {\n      var colorSpace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SRGBColorSpace;\n      ColorManagement.fromWorkingColorSpace(toComponents(this, _rgb), colorSpace);\n      if (colorSpace !== SRGBColorSpace) {\n        // Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n        return \"color(\".concat(colorSpace, \" \").concat(_rgb.r, \" \").concat(_rgb.g, \" \").concat(_rgb.b, \")\");\n      }\n      return \"rgb(\".concat(_rgb.r * 255 | 0, \",\").concat(_rgb.g * 255 | 0, \",\").concat(_rgb.b * 255 | 0, \")\");\n    }\n  }, {\n    key: \"offsetHSL\",\n    value: function offsetHSL(h, s, l) {\n      this.getHSL(_hslA);\n      _hslA.h += h;\n      _hslA.s += s;\n      _hslA.l += l;\n      this.setHSL(_hslA.h, _hslA.s, _hslA.l);\n      return this;\n    }\n  }, {\n    key: \"add\",\n    value: function add(color) {\n      this.r += color.r;\n      this.g += color.g;\n      this.b += color.b;\n      return this;\n    }\n  }, {\n    key: \"addColors\",\n    value: function addColors(color1, color2) {\n      this.r = color1.r + color2.r;\n      this.g = color1.g + color2.g;\n      this.b = color1.b + color2.b;\n      return this;\n    }\n  }, {\n    key: \"addScalar\",\n    value: function addScalar(s) {\n      this.r += s;\n      this.g += s;\n      this.b += s;\n      return this;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(color) {\n      this.r = Math.max(0, this.r - color.r);\n      this.g = Math.max(0, this.g - color.g);\n      this.b = Math.max(0, this.b - color.b);\n      return this;\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(color) {\n      this.r *= color.r;\n      this.g *= color.g;\n      this.b *= color.b;\n      return this;\n    }\n  }, {\n    key: \"multiplyScalar\",\n    value: function multiplyScalar(s) {\n      this.r *= s;\n      this.g *= s;\n      this.b *= s;\n      return this;\n    }\n  }, {\n    key: \"lerp\",\n    value: function lerp(color, alpha) {\n      this.r += (color.r - this.r) * alpha;\n      this.g += (color.g - this.g) * alpha;\n      this.b += (color.b - this.b) * alpha;\n      return this;\n    }\n  }, {\n    key: \"lerpColors\",\n    value: function lerpColors(color1, color2, alpha) {\n      this.r = color1.r + (color2.r - color1.r) * alpha;\n      this.g = color1.g + (color2.g - color1.g) * alpha;\n      this.b = color1.b + (color2.b - color1.b) * alpha;\n      return this;\n    }\n  }, {\n    key: \"lerpHSL\",\n    value: function lerpHSL(color, alpha) {\n      this.getHSL(_hslA);\n      color.getHSL(_hslB);\n      var h = lerp(_hslA.h, _hslB.h, alpha);\n      var s = lerp(_hslA.s, _hslB.s, alpha);\n      var l = lerp(_hslA.l, _hslB.l, alpha);\n      this.setHSL(h, s, l);\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(c) {\n      return c.r === this.r && c.g === this.g && c.b === this.b;\n    }\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(array) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      this.r = array[offset];\n      this.g = array[offset + 1];\n      this.b = array[offset + 2];\n      return this;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      array[offset] = this.r;\n      array[offset + 1] = this.g;\n      array[offset + 2] = this.b;\n      return array;\n    }\n  }, {\n    key: \"fromBufferAttribute\",\n    value: function fromBufferAttribute(attribute, index) {\n      this.r = attribute.getX(index);\n      this.g = attribute.getY(index);\n      this.b = attribute.getZ(index);\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.getHex();\n    }\n  }, {\n    key: _Symbol$iterator,\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function value() {\n      return _regeneratorRuntime().wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.r;\n            case 2:\n              _context.next = 4;\n              return this.g;\n            case 4:\n              _context.next = 6;\n              return this.b;\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this);\n    })\n  }]);\n  return Color;\n}(Symbol.iterator);\nColor.NAMES = _colorKeywords;\nexport { Color, SRGBToLinear };","map":{"version":3,"names":["clamp","euclideanModulo","lerp","ColorManagement","SRGBToLinear","LinearToSRGB","SRGBColorSpace","LinearSRGBColorSpace","_colorKeywords","_rgb","r","g","b","_hslA","h","s","l","_hslB","hue2rgb","p","q","t","toComponents","source","target","Color","isColor","undefined","set","setRGB","value","copy","setHex","setStyle","scalar","hex","colorSpace","Math","floor","toWorkingColorSpace","style","handleAlpha","string","parseFloat","console","warn","m","exec","color","name","components","min","parseInt","setHSL","size","length","charAt","setColorName","toLowerCase","constructor","copySRGBToLinear","copyLinearToSRGB","fromWorkingColorSpace","getHex","toString","slice","max","hue","saturation","lightness","delta","getHSL","color1","color2","alpha","c","array","offset","attribute","index","getX","getY","getZ","Symbol","iterator","NAMES"],"sources":["/Users/trudypainter/Desktop/latent-2/frontend/node_modules/three/src/math/Color.js"],"sourcesContent":["import { clamp, euclideanModulo, lerp } from './MathUtils.js';\nimport { ColorManagement, SRGBToLinear, LinearToSRGB } from './ColorManagement.js';\nimport { SRGBColorSpace, LinearSRGBColorSpace } from '../constants.js';\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _rgb = { r: 0, g: 0, b: 0 };\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction toComponents( source, target ) {\n\n\ttarget.r = source.r;\n\ttarget.g = source.g;\n\ttarget.b = source.b;\n\n\treturn target;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseFloat( color[ 2 ] ) / 100;\n\t\t\t\t\t\tconst l = parseFloat( color[ 3 ] ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l, colorSpace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\treturn clamp( _rgb.r * 255, 0, 255 ) << 16 ^ clamp( _rgb.g * 255, 0, 255 ) << 8 ^ clamp( _rgb.b * 255, 0, 255 ) << 0;\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tconst r = _rgb.r, g = _rgb.g, b = _rgb.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\ttarget.r = _rgb.r;\n\t\ttarget.g = _rgb.g;\n\t\ttarget.b = _rgb.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ _rgb.r } ${ _rgb.g } ${ _rgb.b })`;\n\n\t\t}\n\n\t\treturn `rgb(${( _rgb.r * 255 ) | 0},${( _rgb.g * 255 ) | 0},${( _rgb.b * 255 ) | 0})`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nexport { Color, SRGBToLinear };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}