{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { NodeUpdateType } from './constants.js';\nvar NodeFrame = /*#__PURE__*/function () {\n  function NodeFrame() {\n    _classCallCheck(this, NodeFrame);\n    this.time = 0;\n    this.deltaTime = 0;\n    this.frameId = 0;\n    this.startTime = null;\n    this.updateMap = new WeakMap();\n    this.renderer = null;\n    this.material = null;\n    this.camera = null;\n    this.object = null;\n  }\n  _createClass(NodeFrame, [{\n    key: \"updateNode\",\n    value: function updateNode(node) {\n      if (node.updateType === NodeUpdateType.Frame) {\n        if (this.updateMap.get(node) !== this.frameId) {\n          this.updateMap.set(node, this.frameId);\n          node.update(this);\n        }\n      } else if (node.updateType === NodeUpdateType.Object) {\n        node.update(this);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.frameId++;\n      if (this.lastTime === undefined) this.lastTime = performance.now();\n      this.deltaTime = (performance.now() - this.lastTime) / 1000;\n      this.lastTime = performance.now();\n      this.time += this.deltaTime;\n    }\n  }]);\n  return NodeFrame;\n}();\nexport default NodeFrame;","map":{"version":3,"names":["NodeUpdateType","NodeFrame","time","deltaTime","frameId","startTime","updateMap","WeakMap","renderer","material","camera","object","node","updateType","Frame","get","set","update","Object","lastTime","undefined","performance","now"],"sources":["/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/three-stdlib/nodes/core/NodeFrame.js"],"sourcesContent":["import { NodeUpdateType } from './constants.js';\n\nclass NodeFrame {\n  constructor() {\n    this.time = 0;\n    this.deltaTime = 0;\n    this.frameId = 0;\n    this.startTime = null;\n    this.updateMap = new WeakMap();\n    this.renderer = null;\n    this.material = null;\n    this.camera = null;\n    this.object = null;\n  }\n\n  updateNode(node) {\n    if (node.updateType === NodeUpdateType.Frame) {\n      if (this.updateMap.get(node) !== this.frameId) {\n        this.updateMap.set(node, this.frameId);\n        node.update(this);\n      }\n    } else if (node.updateType === NodeUpdateType.Object) {\n      node.update(this);\n    }\n  }\n\n  update() {\n    this.frameId++;\n    if (this.lastTime === undefined) this.lastTime = performance.now();\n    this.deltaTime = (performance.now() - this.lastTime) / 1000;\n    this.lastTime = performance.now();\n    this.time += this.deltaTime;\n  }\n\n}\n\nexport default NodeFrame;\n"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,gBAAgB;AAAC,IAE1CC,SAAS;EACb,qBAAc;IAAA;IACZ,IAAI,CAACC,IAAI,GAAG,CAAC;IACb,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,SAAS,GAAG,IAAIC,OAAO,EAAE;IAC9B,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,MAAM,GAAG,IAAI;EACpB;EAAC;IAAA;IAAA,OAED,oBAAWC,IAAI,EAAE;MACf,IAAIA,IAAI,CAACC,UAAU,KAAKb,cAAc,CAACc,KAAK,EAAE;QAC5C,IAAI,IAAI,CAACR,SAAS,CAACS,GAAG,CAACH,IAAI,CAAC,KAAK,IAAI,CAACR,OAAO,EAAE;UAC7C,IAAI,CAACE,SAAS,CAACU,GAAG,CAACJ,IAAI,EAAE,IAAI,CAACR,OAAO,CAAC;UACtCQ,IAAI,CAACK,MAAM,CAAC,IAAI,CAAC;QACnB;MACF,CAAC,MAAM,IAAIL,IAAI,CAACC,UAAU,KAAKb,cAAc,CAACkB,MAAM,EAAE;QACpDN,IAAI,CAACK,MAAM,CAAC,IAAI,CAAC;MACnB;IACF;EAAC;IAAA;IAAA,OAED,kBAAS;MACP,IAAI,CAACb,OAAO,EAAE;MACd,IAAI,IAAI,CAACe,QAAQ,KAAKC,SAAS,EAAE,IAAI,CAACD,QAAQ,GAAGE,WAAW,CAACC,GAAG,EAAE;MAClE,IAAI,CAACnB,SAAS,GAAG,CAACkB,WAAW,CAACC,GAAG,EAAE,GAAG,IAAI,CAACH,QAAQ,IAAI,IAAI;MAC3D,IAAI,CAACA,QAAQ,GAAGE,WAAW,CAACC,GAAG,EAAE;MACjC,IAAI,CAACpB,IAAI,IAAI,IAAI,CAACC,SAAS;IAC7B;EAAC;EAAA;AAAA;AAIH,eAAeF,SAAS"},"metadata":{},"sourceType":"module"}