{"ast":null,"code":"import _defineProperty from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _FN;\nimport { SRGBColorSpace, LinearSRGBColorSpace } from '../constants.js';\nexport function SRGBToLinear(c) {\n  return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n}\nexport function LinearToSRGB(c) {\n  return c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n}\n\n// JavaScript RGB-to-RGB transforms, defined as\n// FN[InputColorSpace][OutputColorSpace] callback functions.\nvar FN = (_FN = {}, _defineProperty(_FN, SRGBColorSpace, _defineProperty({}, LinearSRGBColorSpace, SRGBToLinear)), _defineProperty(_FN, LinearSRGBColorSpace, _defineProperty({}, SRGBColorSpace, LinearToSRGB)), _FN);\nexport var ColorManagement = {\n  legacyMode: true,\n  get workingColorSpace() {\n    return LinearSRGBColorSpace;\n  },\n  set workingColorSpace(colorSpace) {\n    console.warn('THREE.ColorManagement: .workingColorSpace is readonly.');\n  },\n  convert: function convert(color, sourceColorSpace, targetColorSpace) {\n    if (this.legacyMode || sourceColorSpace === targetColorSpace || !sourceColorSpace || !targetColorSpace) {\n      return color;\n    }\n    if (FN[sourceColorSpace] && FN[sourceColorSpace][targetColorSpace] !== undefined) {\n      var fn = FN[sourceColorSpace][targetColorSpace];\n      color.r = fn(color.r);\n      color.g = fn(color.g);\n      color.b = fn(color.b);\n      return color;\n    }\n    throw new Error('Unsupported color space conversion.');\n  },\n  fromWorkingColorSpace: function fromWorkingColorSpace(color, targetColorSpace) {\n    return this.convert(color, this.workingColorSpace, targetColorSpace);\n  },\n  toWorkingColorSpace: function toWorkingColorSpace(color, sourceColorSpace) {\n    return this.convert(color, sourceColorSpace, this.workingColorSpace);\n  }\n};","map":{"version":3,"names":["SRGBColorSpace","LinearSRGBColorSpace","SRGBToLinear","c","Math","pow","LinearToSRGB","FN","ColorManagement","legacyMode","workingColorSpace","colorSpace","console","warn","convert","color","sourceColorSpace","targetColorSpace","undefined","fn","r","g","b","Error","fromWorkingColorSpace","toWorkingColorSpace"],"sources":["/Users/trudypainter/Desktop/latent-2/frontend/node_modules/three/src/math/ColorManagement.js"],"sourcesContent":["import { SRGBColorSpace, LinearSRGBColorSpace } from '../constants.js';\n\nexport function SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nexport function LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n// JavaScript RGB-to-RGB transforms, defined as\n// FN[InputColorSpace][OutputColorSpace] callback functions.\nconst FN = {\n\t[ SRGBColorSpace ]: { [ LinearSRGBColorSpace ]: SRGBToLinear },\n\t[ LinearSRGBColorSpace ]: { [ SRGBColorSpace ]: LinearToSRGB },\n};\n\nexport const ColorManagement = {\n\n\tlegacyMode: true,\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.legacyMode || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tif ( FN[ sourceColorSpace ] && FN[ sourceColorSpace ][ targetColorSpace ] !== undefined ) {\n\n\t\t\tconst fn = FN[ sourceColorSpace ][ targetColorSpace ];\n\n\t\t\tcolor.r = fn( color.r );\n\t\t\tcolor.g = fn( color.g );\n\t\t\tcolor.b = fn( color.b );\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tthrow new Error( 'Unsupported color space conversion.' );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n"],"mappings":";;AAAA,SAASA,cAAc,EAAEC,oBAAoB,QAAQ,iBAAiB;AAEtE,OAAO,SAASC,YAAY,CAAEC,CAAC,EAAG;EAEjC,OAASA,CAAC,GAAG,OAAO,GAAKA,CAAC,GAAG,YAAY,GAAGC,IAAI,CAACC,GAAG,CAAEF,CAAC,GAAG,YAAY,GAAG,YAAY,EAAE,GAAG,CAAE;AAE7F;AAEA,OAAO,SAASG,YAAY,CAAEH,CAAC,EAAG;EAEjC,OAASA,CAAC,GAAG,SAAS,GAAKA,CAAC,GAAG,KAAK,GAAG,KAAK,GAAKC,IAAI,CAACC,GAAG,CAAEF,CAAC,EAAE,OAAO,CAAI,GAAG,KAAK;AAElF;;AAEA;AACA;AACA,IAAMI,EAAE,mCACLP,cAAc,sBAAQC,oBAAoB,EAAIC,YAAY,yBAC1DD,oBAAoB,sBAAQD,cAAc,EAAIM,YAAY,QAC5D;AAED,OAAO,IAAME,eAAe,GAAG;EAE9BC,UAAU,EAAE,IAAI;EAEhB,IAAIC,iBAAiB,GAAG;IAEvB,OAAOT,oBAAoB;EAE5B,CAAC;EAED,IAAIS,iBAAiB,CAAEC,UAAU,EAAG;IAEnCC,OAAO,CAACC,IAAI,CAAE,wDAAwD,CAAE;EAEzE,CAAC;EAEDC,OAAO,EAAE,iBAAWC,KAAK,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAG;IAE/D,IAAK,IAAI,CAACR,UAAU,IAAIO,gBAAgB,KAAKC,gBAAgB,IAAI,CAAED,gBAAgB,IAAI,CAAEC,gBAAgB,EAAG;MAE3G,OAAOF,KAAK;IAEb;IAEA,IAAKR,EAAE,CAAES,gBAAgB,CAAE,IAAIT,EAAE,CAAES,gBAAgB,CAAE,CAAEC,gBAAgB,CAAE,KAAKC,SAAS,EAAG;MAEzF,IAAMC,EAAE,GAAGZ,EAAE,CAAES,gBAAgB,CAAE,CAAEC,gBAAgB,CAAE;MAErDF,KAAK,CAACK,CAAC,GAAGD,EAAE,CAAEJ,KAAK,CAACK,CAAC,CAAE;MACvBL,KAAK,CAACM,CAAC,GAAGF,EAAE,CAAEJ,KAAK,CAACM,CAAC,CAAE;MACvBN,KAAK,CAACO,CAAC,GAAGH,EAAE,CAAEJ,KAAK,CAACO,CAAC,CAAE;MAEvB,OAAOP,KAAK;IAEb;IAEA,MAAM,IAAIQ,KAAK,CAAE,qCAAqC,CAAE;EAEzD,CAAC;EAEDC,qBAAqB,EAAE,+BAAWT,KAAK,EAAEE,gBAAgB,EAAG;IAE3D,OAAO,IAAI,CAACH,OAAO,CAAEC,KAAK,EAAE,IAAI,CAACL,iBAAiB,EAAEO,gBAAgB,CAAE;EAEvE,CAAC;EAEDQ,mBAAmB,EAAE,6BAAWV,KAAK,EAAEC,gBAAgB,EAAG;IAEzD,OAAO,IAAI,CAACF,OAAO,CAAEC,KAAK,EAAEC,gBAAgB,EAAE,IAAI,CAACN,iBAAiB,CAAE;EAEvE;AAED,CAAC"},"metadata":{},"sourceType":"module"}