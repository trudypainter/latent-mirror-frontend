{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Pass } from './Pass.js';\nvar MaskPass = /*#__PURE__*/function (_Pass) {\n  _inherits(MaskPass, _Pass);\n  var _super = _createSuper(MaskPass);\n  function MaskPass(scene, camera) {\n    var _this;\n    _classCallCheck(this, MaskPass);\n    _this = _super.call(this);\n    _defineProperty(_assertThisInitialized(_this), \"scene\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"camera\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"inverse\", void 0);\n    _this.scene = scene;\n    _this.camera = camera;\n    _this.clear = true;\n    _this.needsSwap = false;\n    _this.inverse = false;\n    return _this;\n  }\n  _createClass(MaskPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      var context = renderer.getContext();\n      var state = renderer.state; // don't update color or depth\n\n      state.buffers.color.setMask(false);\n      state.buffers.depth.setMask(false); // lock buffers\n\n      state.buffers.color.setLocked(true);\n      state.buffers.depth.setLocked(true); // set up stencil\n\n      var writeValue, clearValue;\n      if (this.inverse) {\n        writeValue = 0;\n        clearValue = 1;\n      } else {\n        writeValue = 1;\n        clearValue = 0;\n      }\n      state.buffers.stencil.setTest(true);\n      state.buffers.stencil.setOp(context.REPLACE, context.REPLACE, context.REPLACE);\n      state.buffers.stencil.setFunc(context.ALWAYS, writeValue, 0xffffffff);\n      state.buffers.stencil.setClear(clearValue);\n      state.buffers.stencil.setLocked(true); // draw into the stencil buffer\n\n      renderer.setRenderTarget(readBuffer);\n      if (this.clear) renderer.clear();\n      renderer.render(this.scene, this.camera);\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      renderer.render(this.scene, this.camera); // unlock color and depth buffer for subsequent rendering\n\n      state.buffers.color.setLocked(false);\n      state.buffers.depth.setLocked(false); // only render where stencil is set to 1\n\n      state.buffers.stencil.setLocked(false);\n      state.buffers.stencil.setFunc(context.EQUAL, 1, 0xffffffff); // draw if == 1\n\n      state.buffers.stencil.setOp(context.KEEP, context.KEEP, context.KEEP);\n      state.buffers.stencil.setLocked(true);\n    }\n  }]);\n  return MaskPass;\n}(Pass);\nvar ClearMaskPass = /*#__PURE__*/function (_Pass2) {\n  _inherits(ClearMaskPass, _Pass2);\n  var _super2 = _createSuper(ClearMaskPass);\n  function ClearMaskPass() {\n    var _this2;\n    _classCallCheck(this, ClearMaskPass);\n    _this2 = _super2.call(this);\n    _this2.needsSwap = false;\n    return _this2;\n  }\n  _createClass(ClearMaskPass, [{\n    key: \"render\",\n    value: function render(renderer) {\n      renderer.state.buffers.stencil.setLocked(false);\n      renderer.state.buffers.stencil.setTest(false);\n    }\n  }]);\n  return ClearMaskPass;\n}(Pass);\nexport { ClearMaskPass, MaskPass };","map":{"version":3,"names":["_defineProperty","Pass","MaskPass","scene","camera","clear","needsSwap","inverse","renderer","writeBuffer","readBuffer","context","getContext","state","buffers","color","setMask","depth","setLocked","writeValue","clearValue","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","setRenderTarget","render","EQUAL","KEEP","ClearMaskPass"],"sources":["/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/three-stdlib/postprocessing/MaskPass.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Pass } from './Pass.js';\n\nclass MaskPass extends Pass {\n  constructor(scene, camera) {\n    super();\n\n    _defineProperty(this, \"scene\", void 0);\n\n    _defineProperty(this, \"camera\", void 0);\n\n    _defineProperty(this, \"inverse\", void 0);\n\n    this.scene = scene;\n    this.camera = camera;\n    this.clear = true;\n    this.needsSwap = false;\n    this.inverse = false;\n  }\n\n  render(renderer, writeBuffer, readBuffer) {\n    const context = renderer.getContext();\n    const state = renderer.state; // don't update color or depth\n\n    state.buffers.color.setMask(false);\n    state.buffers.depth.setMask(false); // lock buffers\n\n    state.buffers.color.setLocked(true);\n    state.buffers.depth.setLocked(true); // set up stencil\n\n    let writeValue, clearValue;\n\n    if (this.inverse) {\n      writeValue = 0;\n      clearValue = 1;\n    } else {\n      writeValue = 1;\n      clearValue = 0;\n    }\n\n    state.buffers.stencil.setTest(true);\n    state.buffers.stencil.setOp(context.REPLACE, context.REPLACE, context.REPLACE);\n    state.buffers.stencil.setFunc(context.ALWAYS, writeValue, 0xffffffff);\n    state.buffers.stencil.setClear(clearValue);\n    state.buffers.stencil.setLocked(true); // draw into the stencil buffer\n\n    renderer.setRenderTarget(readBuffer);\n    if (this.clear) renderer.clear();\n    renderer.render(this.scene, this.camera);\n    renderer.setRenderTarget(writeBuffer);\n    if (this.clear) renderer.clear();\n    renderer.render(this.scene, this.camera); // unlock color and depth buffer for subsequent rendering\n\n    state.buffers.color.setLocked(false);\n    state.buffers.depth.setLocked(false); // only render where stencil is set to 1\n\n    state.buffers.stencil.setLocked(false);\n    state.buffers.stencil.setFunc(context.EQUAL, 1, 0xffffffff); // draw if == 1\n\n    state.buffers.stencil.setOp(context.KEEP, context.KEEP, context.KEEP);\n    state.buffers.stencil.setLocked(true);\n  }\n\n}\n\nclass ClearMaskPass extends Pass {\n  constructor() {\n    super();\n    this.needsSwap = false;\n  }\n\n  render(renderer) {\n    renderer.state.buffers.stencil.setLocked(false);\n    renderer.state.buffers.stencil.setTest(false);\n  }\n\n}\n\nexport { ClearMaskPass, MaskPass };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}