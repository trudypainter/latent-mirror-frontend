{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Matrix4, Mesh, MeshBasicMaterial } from 'three';\n\n/**\n * A shadow Mesh that follows a shadow-casting Mesh in the scene, but is confined to a single plane.\n */\n\nvar _shadowMatrix = new Matrix4();\nvar ShadowMesh = /*#__PURE__*/function (_Mesh) {\n  _inherits(ShadowMesh, _Mesh);\n  var _super = _createSuper(ShadowMesh);\n  function ShadowMesh(mesh) {\n    var _this;\n    _classCallCheck(this, ShadowMesh);\n    var shadowMaterial = new MeshBasicMaterial({\n      color: 0x000000,\n      transparent: true,\n      opacity: 0.6,\n      depthWrite: false\n    });\n    _this = _super.call(this, mesh.geometry, shadowMaterial);\n    _this.meshMatrix = mesh.matrixWorld;\n    _this.frustumCulled = false;\n    _this.matrixAutoUpdate = false;\n    return _this;\n  }\n  _createClass(ShadowMesh, [{\n    key: \"update\",\n    value: function update(plane, lightPosition4D) {\n      // based on https://www.opengl.org/archives/resources/features/StencilTalk/tsld021.htm\n      var dot = plane.normal.x * lightPosition4D.x + plane.normal.y * lightPosition4D.y + plane.normal.z * lightPosition4D.z + -plane.constant * lightPosition4D.w;\n      var sme = _shadowMatrix.elements;\n      sme[0] = dot - lightPosition4D.x * plane.normal.x;\n      sme[4] = -lightPosition4D.x * plane.normal.y;\n      sme[8] = -lightPosition4D.x * plane.normal.z;\n      sme[12] = -lightPosition4D.x * -plane.constant;\n      sme[1] = -lightPosition4D.y * plane.normal.x;\n      sme[5] = dot - lightPosition4D.y * plane.normal.y;\n      sme[9] = -lightPosition4D.y * plane.normal.z;\n      sme[13] = -lightPosition4D.y * -plane.constant;\n      sme[2] = -lightPosition4D.z * plane.normal.x;\n      sme[6] = -lightPosition4D.z * plane.normal.y;\n      sme[10] = dot - lightPosition4D.z * plane.normal.z;\n      sme[14] = -lightPosition4D.z * -plane.constant;\n      sme[3] = -lightPosition4D.w * plane.normal.x;\n      sme[7] = -lightPosition4D.w * plane.normal.y;\n      sme[11] = -lightPosition4D.w * plane.normal.z;\n      sme[15] = dot - lightPosition4D.w * -plane.constant;\n      this.matrix.multiplyMatrices(_shadowMatrix, this.meshMatrix);\n    }\n  }]);\n  return ShadowMesh;\n}(Mesh);\nShadowMesh.prototype.isShadowMesh = true;\nexport { ShadowMesh };","map":{"version":3,"names":["Matrix4","Mesh","MeshBasicMaterial","_shadowMatrix","ShadowMesh","mesh","shadowMaterial","color","transparent","opacity","depthWrite","geometry","meshMatrix","matrixWorld","frustumCulled","matrixAutoUpdate","plane","lightPosition4D","dot","normal","x","y","z","constant","w","sme","elements","matrix","multiplyMatrices","prototype","isShadowMesh"],"sources":["/Users/trudypainter/Desktop/latent-2/frontend/node_modules/three-stdlib/objects/ShadowMesh.js"],"sourcesContent":["import { Matrix4, Mesh, MeshBasicMaterial } from 'three';\n\n/**\n * A shadow Mesh that follows a shadow-casting Mesh in the scene, but is confined to a single plane.\n */\n\nconst _shadowMatrix = new Matrix4();\n\nclass ShadowMesh extends Mesh {\n  constructor(mesh) {\n    const shadowMaterial = new MeshBasicMaterial({\n      color: 0x000000,\n      transparent: true,\n      opacity: 0.6,\n      depthWrite: false\n    });\n    super(mesh.geometry, shadowMaterial);\n    this.meshMatrix = mesh.matrixWorld;\n    this.frustumCulled = false;\n    this.matrixAutoUpdate = false;\n  }\n\n  update(plane, lightPosition4D) {\n    // based on https://www.opengl.org/archives/resources/features/StencilTalk/tsld021.htm\n    const dot = plane.normal.x * lightPosition4D.x + plane.normal.y * lightPosition4D.y + plane.normal.z * lightPosition4D.z + -plane.constant * lightPosition4D.w;\n    const sme = _shadowMatrix.elements;\n    sme[0] = dot - lightPosition4D.x * plane.normal.x;\n    sme[4] = -lightPosition4D.x * plane.normal.y;\n    sme[8] = -lightPosition4D.x * plane.normal.z;\n    sme[12] = -lightPosition4D.x * -plane.constant;\n    sme[1] = -lightPosition4D.y * plane.normal.x;\n    sme[5] = dot - lightPosition4D.y * plane.normal.y;\n    sme[9] = -lightPosition4D.y * plane.normal.z;\n    sme[13] = -lightPosition4D.y * -plane.constant;\n    sme[2] = -lightPosition4D.z * plane.normal.x;\n    sme[6] = -lightPosition4D.z * plane.normal.y;\n    sme[10] = dot - lightPosition4D.z * plane.normal.z;\n    sme[14] = -lightPosition4D.z * -plane.constant;\n    sme[3] = -lightPosition4D.w * plane.normal.x;\n    sme[7] = -lightPosition4D.w * plane.normal.y;\n    sme[11] = -lightPosition4D.w * plane.normal.z;\n    sme[15] = dot - lightPosition4D.w * -plane.constant;\n    this.matrix.multiplyMatrices(_shadowMatrix, this.meshMatrix);\n  }\n\n}\n\nShadowMesh.prototype.isShadowMesh = true;\n\nexport { ShadowMesh };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}