{"ast":null,"code":"import { useState, useLayoutEffect } from 'react';\nfunction call(ref, value) {\n  if (typeof ref === 'function') ref(value);else if (ref != null) ref.current = value;\n}\nfunction useEffectfulState(fn) {\n  let deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  let cb = arguments.length > 2 ? arguments[2] : undefined;\n  const [state, set] = useState();\n  useLayoutEffect(() => {\n    const value = fn();\n    set(value);\n    call(cb, value);\n    return () => call(cb, null); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n  return state;\n}\nexport default useEffectfulState;","map":{"version":3,"names":["useState","useLayoutEffect","call","ref","value","current","useEffectfulState","fn","deps","cb","state","set"],"sources":["/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/drei/helpers/useEffectfulState.js"],"sourcesContent":["import { useState, useLayoutEffect } from 'react';\n\nfunction call(ref, value) {\n  if (typeof ref === 'function') ref(value);else if (ref != null) ref.current = value;\n}\n\nfunction useEffectfulState(fn, deps = [], cb) {\n  const [state, set] = useState();\n  useLayoutEffect(() => {\n    const value = fn();\n    set(value);\n    call(cb, value);\n    return () => call(cb, null); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n  return state;\n}\n\nexport default useEffectfulState;\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,eAAe,QAAQ,OAAO;AAEjD,SAASC,IAAI,CAACC,GAAG,EAAEC,KAAK,EAAE;EACxB,IAAI,OAAOD,GAAG,KAAK,UAAU,EAAEA,GAAG,CAACC,KAAK,CAAC,CAAC,KAAK,IAAID,GAAG,IAAI,IAAI,EAAEA,GAAG,CAACE,OAAO,GAAGD,KAAK;AACrF;AAEA,SAASE,iBAAiB,CAACC,EAAE,EAAiB;EAAA,IAAfC,IAAI,uEAAG,EAAE;EAAA,IAAEC,EAAE;EAC1C,MAAM,CAACC,KAAK,EAAEC,GAAG,CAAC,GAAGX,QAAQ,EAAE;EAC/BC,eAAe,CAAC,MAAM;IACpB,MAAMG,KAAK,GAAGG,EAAE,EAAE;IAClBI,GAAG,CAACP,KAAK,CAAC;IACVF,IAAI,CAACO,EAAE,EAAEL,KAAK,CAAC;IACf,OAAO,MAAMF,IAAI,CAACO,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;EAC/B,CAAC,EAAED,IAAI,CAAC;EACR,OAAOE,KAAK;AACd;AAEA,eAAeJ,iBAAiB"},"metadata":{},"sourceType":"module"}