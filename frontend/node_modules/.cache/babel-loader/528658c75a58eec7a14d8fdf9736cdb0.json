{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport { ShaderMaterial } from 'three';\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  return class extends ShaderMaterial {\n    constructor() {\n      const entries = Object.entries(uniforms); // Create unforms and shaders\n\n      super({\n        uniforms: entries.reduce((acc, _ref) => {\n          let [name, value] = _ref;\n          return _extends({}, acc, {\n            [name]: {\n              value\n            }\n          });\n        }, {}),\n        vertexShader,\n        fragmentShader\n      }); // Create getter/setters\n\n      entries.forEach(_ref2 => {\n        let [name] = _ref2;\n        return Object.defineProperty(this, name, {\n          get: () => this.uniforms[name].value,\n          set: v => this.uniforms[name].value = v\n        });\n      });\n      if (onInit) onInit(this);\n    }\n  };\n}\nexport { shaderMaterial };","map":{"version":3,"names":["_extends","ShaderMaterial","shaderMaterial","uniforms","vertexShader","fragmentShader","onInit","constructor","entries","Object","reduce","acc","name","value","forEach","defineProperty","get","set","v"],"sources":["/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/drei/shaderMaterial.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { ShaderMaterial } from 'three';\n\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  return class extends ShaderMaterial {\n    constructor() {\n      const entries = Object.entries(uniforms); // Create unforms and shaders\n\n      super({\n        uniforms: entries.reduce((acc, [name, value]) => _extends({}, acc, {\n          [name]: {\n            value\n          }\n        }), {}),\n        vertexShader,\n        fragmentShader\n      }); // Create getter/setters\n\n      entries.forEach(([name]) => Object.defineProperty(this, name, {\n        get: () => this.uniforms[name].value,\n        set: v => this.uniforms[name].value = v\n      }));\n      if (onInit) onInit(this);\n    }\n\n  };\n}\n\nexport { shaderMaterial };\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SAASC,cAAc,QAAQ,OAAO;AAEtC,SAASC,cAAc,CAACC,QAAQ,EAAEC,YAAY,EAAEC,cAAc,EAAEC,MAAM,EAAE;EACtE,OAAO,cAAcL,cAAc,CAAC;IAClCM,WAAW,GAAG;MACZ,MAAMC,OAAO,GAAGC,MAAM,CAACD,OAAO,CAACL,QAAQ,CAAC,CAAC,CAAC;;MAE1C,KAAK,CAAC;QACJA,QAAQ,EAAEK,OAAO,CAACE,MAAM,CAAC,CAACC,GAAG;UAAA,IAAE,CAACC,IAAI,EAAEC,KAAK,CAAC;UAAA,OAAKb,QAAQ,CAAC,CAAC,CAAC,EAAEW,GAAG,EAAE;YACjE,CAACC,IAAI,GAAG;cACNC;YACF;UACF,CAAC,CAAC;QAAA,GAAE,CAAC,CAAC,CAAC;QACPT,YAAY;QACZC;MACF,CAAC,CAAC,CAAC,CAAC;;MAEJG,OAAO,CAACM,OAAO,CAAC;QAAA,IAAC,CAACF,IAAI,CAAC;QAAA,OAAKH,MAAM,CAACM,cAAc,CAAC,IAAI,EAAEH,IAAI,EAAE;UAC5DI,GAAG,EAAE,MAAM,IAAI,CAACb,QAAQ,CAACS,IAAI,CAAC,CAACC,KAAK;UACpCI,GAAG,EAAEC,CAAC,IAAI,IAAI,CAACf,QAAQ,CAACS,IAAI,CAAC,CAACC,KAAK,GAAGK;QACxC,CAAC,CAAC;MAAA,EAAC;MACH,IAAIZ,MAAM,EAAEA,MAAM,CAAC,IAAI,CAAC;IAC1B;EAEF,CAAC;AACH;AAEA,SAASJ,cAAc"},"metadata":{},"sourceType":"module"}