{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Line, BufferGeometry, BufferAttribute, LineBasicMaterial, MathUtils } from 'three';\nvar PositionalAudioHelper = /*#__PURE__*/function (_Line) {\n  _inherits(PositionalAudioHelper, _Line);\n  var _super = _createSuper(PositionalAudioHelper);\n  function PositionalAudioHelper(audio, range, divisionsInnerAngle, divisionsOuterAngle) {\n    var _this;\n    _classCallCheck(this, PositionalAudioHelper);\n    _this.audio = audio;\n    _this.range = range || 1;\n    _this.divisionsInnerAngle = divisionsInnerAngle || 16;\n    _this.divisionsOuterAngle = divisionsOuterAngle || 2;\n    var geometry = new BufferGeometry();\n    var divisions = _this.divisionsInnerAngle + _this.divisionsOuterAngle * 2;\n    var positions = new Float32Array((divisions * 3 + 3) * 3);\n    geometry.setAttribute('position', new BufferAttribute(positions, 3));\n    var materialInnerAngle = new LineBasicMaterial({\n      color: 0x00ff00\n    });\n    var materialOuterAngle = new LineBasicMaterial({\n      color: 0xffff00\n    });\n    _this = _super.call(this, geometry, [materialOuterAngle, materialInnerAngle]);\n    _this.type = 'PositionalAudioHelper';\n    _this.update();\n    return _this;\n  }\n  _createClass(PositionalAudioHelper, [{\n    key: \"update\",\n    value: function update() {\n      var audio = this.audio;\n      var range = this.range;\n      var divisionsInnerAngle = this.divisionsInnerAngle;\n      var divisionsOuterAngle = this.divisionsOuterAngle;\n      var coneInnerAngle = MathUtils.degToRad(audio.panner.coneInnerAngle);\n      var coneOuterAngle = MathUtils.degToRad(audio.panner.coneOuterAngle);\n      var halfConeInnerAngle = coneInnerAngle / 2;\n      var halfConeOuterAngle = coneOuterAngle / 2;\n      var start = 0;\n      var count = 0;\n      var i, stride;\n      var geometry = this.geometry;\n      var positionAttribute = geometry.attributes.position;\n      geometry.clearGroups(); //\n\n      function generateSegment(from, to, divisions, materialIndex) {\n        var step = (to - from) / divisions;\n        positionAttribute.setXYZ(start, 0, 0, 0);\n        count++;\n        for (i = from; i < to; i += step) {\n          stride = start + count;\n          positionAttribute.setXYZ(stride, Math.sin(i) * range, 0, Math.cos(i) * range);\n          positionAttribute.setXYZ(stride + 1, Math.sin(Math.min(i + step, to)) * range, 0, Math.cos(Math.min(i + step, to)) * range);\n          positionAttribute.setXYZ(stride + 2, 0, 0, 0);\n          count += 3;\n        }\n        geometry.addGroup(start, count, materialIndex);\n        start += count;\n        count = 0;\n      } //\n\n      generateSegment(-halfConeOuterAngle, -halfConeInnerAngle, divisionsOuterAngle, 0);\n      generateSegment(-halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1);\n      generateSegment(halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0); //\n\n      positionAttribute.needsUpdate = true;\n      if (coneInnerAngle === coneOuterAngle) this.material[0].visible = false;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.geometry.dispose();\n      this.material[0].dispose();\n      this.material[1].dispose();\n    }\n  }]);\n  return PositionalAudioHelper;\n}(Line);\nexport { PositionalAudioHelper };","map":{"version":3,"names":["Line","BufferGeometry","BufferAttribute","LineBasicMaterial","MathUtils","PositionalAudioHelper","audio","range","divisionsInnerAngle","divisionsOuterAngle","geometry","divisions","positions","Float32Array","setAttribute","materialInnerAngle","color","materialOuterAngle","type","update","coneInnerAngle","degToRad","panner","coneOuterAngle","halfConeInnerAngle","halfConeOuterAngle","start","count","i","stride","positionAttribute","attributes","position","clearGroups","generateSegment","from","to","materialIndex","step","setXYZ","Math","sin","cos","min","addGroup","needsUpdate","material","visible","dispose"],"sources":["/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/three-stdlib/helpers/PositionalAudioHelper.js"],"sourcesContent":["import { Line, BufferGeometry, BufferAttribute, LineBasicMaterial, MathUtils } from 'three';\n\nclass PositionalAudioHelper extends Line {\n  constructor(audio, range, divisionsInnerAngle, divisionsOuterAngle) {\n    this.audio = audio;\n    this.range = range || 1;\n    this.divisionsInnerAngle = divisionsInnerAngle || 16;\n    this.divisionsOuterAngle = divisionsOuterAngle || 2;\n    const geometry = new BufferGeometry();\n    const divisions = this.divisionsInnerAngle + this.divisionsOuterAngle * 2;\n    const positions = new Float32Array((divisions * 3 + 3) * 3);\n    geometry.setAttribute('position', new BufferAttribute(positions, 3));\n    const materialInnerAngle = new LineBasicMaterial({\n      color: 0x00ff00\n    });\n    const materialOuterAngle = new LineBasicMaterial({\n      color: 0xffff00\n    });\n    super(geometry, [materialOuterAngle, materialInnerAngle]);\n    this.type = 'PositionalAudioHelper';\n    this.update();\n  }\n\n  update() {\n    const audio = this.audio;\n    const range = this.range;\n    const divisionsInnerAngle = this.divisionsInnerAngle;\n    const divisionsOuterAngle = this.divisionsOuterAngle;\n    const coneInnerAngle = MathUtils.degToRad(audio.panner.coneInnerAngle);\n    const coneOuterAngle = MathUtils.degToRad(audio.panner.coneOuterAngle);\n    const halfConeInnerAngle = coneInnerAngle / 2;\n    const halfConeOuterAngle = coneOuterAngle / 2;\n    let start = 0;\n    let count = 0;\n    let i, stride;\n    const geometry = this.geometry;\n    const positionAttribute = geometry.attributes.position;\n    geometry.clearGroups(); //\n\n    function generateSegment(from, to, divisions, materialIndex) {\n      const step = (to - from) / divisions;\n      positionAttribute.setXYZ(start, 0, 0, 0);\n      count++;\n\n      for (i = from; i < to; i += step) {\n        stride = start + count;\n        positionAttribute.setXYZ(stride, Math.sin(i) * range, 0, Math.cos(i) * range);\n        positionAttribute.setXYZ(stride + 1, Math.sin(Math.min(i + step, to)) * range, 0, Math.cos(Math.min(i + step, to)) * range);\n        positionAttribute.setXYZ(stride + 2, 0, 0, 0);\n        count += 3;\n      }\n\n      geometry.addGroup(start, count, materialIndex);\n      start += count;\n      count = 0;\n    } //\n\n\n    generateSegment(-halfConeOuterAngle, -halfConeInnerAngle, divisionsOuterAngle, 0);\n    generateSegment(-halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1);\n    generateSegment(halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0); //\n\n    positionAttribute.needsUpdate = true;\n    if (coneInnerAngle === coneOuterAngle) this.material[0].visible = false;\n  }\n\n  dispose() {\n    this.geometry.dispose();\n    this.material[0].dispose();\n    this.material[1].dispose();\n  }\n\n}\n\nexport { PositionalAudioHelper };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}