{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { fromType } from '../Nodes.js';\nimport { Loader } from 'three';\nvar NodeLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(NodeLoader, _Loader);\n  var _super = _createSuper(NodeLoader);\n  function NodeLoader(manager) {\n    var _this;\n    _classCallCheck(this, NodeLoader);\n    _this = _super.call(this, manager);\n    _this.textures = {};\n    return _this;\n  }\n  _createClass(NodeLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var _this2 = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(_this2.parse(JSON.parse(text)));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          _this2.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parseNodes\",\n    value: function parseNodes(json) {\n      var nodes = {};\n      if (json !== undefined) {\n        var _iterator = _createForOfIteratorHelper(json),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var nodeJSON = _step.value;\n            var uuid = nodeJSON.uuid,\n              _type = nodeJSON.type;\n            nodes[uuid] = fromType(_type);\n            nodes[uuid].uuid = uuid;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        var meta = {\n          nodes: nodes,\n          textures: this.textures\n        };\n        var _iterator2 = _createForOfIteratorHelper(json),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _nodeJSON = _step2.value;\n            _nodeJSON.meta = meta;\n            var node = nodes[_nodeJSON.uuid];\n            node.deserialize(_nodeJSON);\n            delete _nodeJSON.meta;\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n      return nodes;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(json) {\n      var node = fromType(type);\n      node.uuid = json.uuid;\n      var nodes = this.parseNodes(json.inputNodes);\n      var meta = {\n        nodes: nodes,\n        textures: this.textures\n      };\n      json.meta = meta;\n      node.deserialize(json);\n      delete json.meta;\n      return node;\n    }\n  }, {\n    key: \"setTextures\",\n    value: function setTextures(value) {\n      this.textures = value;\n      return this;\n    }\n  }]);\n  return NodeLoader;\n}(Loader);\nexport default NodeLoader;","map":{"version":3,"names":["fromType","Loader","NodeLoader","manager","textures","url","onLoad","onProgress","onError","loader","FileLoader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","text","parse","JSON","e","console","error","itemError","json","nodes","undefined","nodeJSON","uuid","type","meta","node","deserialize","parseNodes","inputNodes","value"],"sources":["/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/three-stdlib/nodes/loaders/NodeLoader.js"],"sourcesContent":["import { fromType } from '../Nodes.js';\nimport { Loader } from 'three';\n\nclass NodeLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.textures = {};\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, text => {\n      try {\n        onLoad(this.parse(JSON.parse(text)));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        this.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n\n  parseNodes(json) {\n    const nodes = {};\n\n    if (json !== undefined) {\n      for (const nodeJSON of json) {\n        const {\n          uuid,\n          type\n        } = nodeJSON;\n        nodes[uuid] = fromType(type);\n        nodes[uuid].uuid = uuid;\n      }\n\n      const meta = {\n        nodes,\n        textures: this.textures\n      };\n\n      for (const nodeJSON of json) {\n        nodeJSON.meta = meta;\n        const node = nodes[nodeJSON.uuid];\n        node.deserialize(nodeJSON);\n        delete nodeJSON.meta;\n      }\n    }\n\n    return nodes;\n  }\n\n  parse(json) {\n    const node = fromType(type);\n    node.uuid = json.uuid;\n    const nodes = this.parseNodes(json.inputNodes);\n    const meta = {\n      nodes,\n      textures: this.textures\n    };\n    json.meta = meta;\n    node.deserialize(json);\n    delete json.meta;\n    return node;\n  }\n\n  setTextures(value) {\n    this.textures = value;\n    return this;\n  }\n\n}\n\nexport default NodeLoader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}