{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Vector3, Mesh, SkinnedMesh } from 'three';\n\n/**\n * Usage:\n *  const exporter = new STLExporter();\n *\n *  // second argument is a list of options\n *  const data = exporter.parse( mesh, { binary: true } );\n *\n */\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/f7ec78508c6797e42f87a4390735bc2c650a1bfd/types/three/examples/jsm/exporters/STLExporter.d.ts\nvar STLExporter = /*#__PURE__*/function () {\n  function STLExporter() {\n    _classCallCheck(this, STLExporter);\n    _defineProperty(this, \"binary\", void 0);\n    _defineProperty(this, \"output\", void 0);\n    _defineProperty(this, \"offset\", void 0);\n    _defineProperty(this, \"objects\", void 0);\n    _defineProperty(this, \"triangles\", void 0);\n    _defineProperty(this, \"vA\", void 0);\n    _defineProperty(this, \"vB\", void 0);\n    _defineProperty(this, \"vC\", void 0);\n    _defineProperty(this, \"cb\", void 0);\n    _defineProperty(this, \"ab\", void 0);\n    _defineProperty(this, \"normal\", void 0);\n    this.binary = false;\n    this.output = '';\n    this.offset = 80; // skip header\n\n    this.objects = [];\n    this.triangles = 0;\n    this.vA = new Vector3();\n    this.vB = new Vector3();\n    this.vC = new Vector3();\n    this.cb = new Vector3();\n    this.ab = new Vector3();\n    this.normal = new Vector3();\n  }\n  _createClass(STLExporter, [{\n    key: \"parse\",\n    value: function parse(scene, options) {\n      var _this = this;\n      this.binary = options.binary !== undefined ? options.binary : false; //\n\n      scene.traverse(function (object) {\n        if (object instanceof Mesh && object.isMesh) {\n          var geometry = object.geometry;\n          if (!geometry.isBufferGeometry) {\n            throw new Error('THREE.STLExporter: Geometry is not of type THREE.BufferGeometry.');\n          }\n          var index = geometry.index;\n          var positionAttribute = geometry.getAttribute('position');\n          _this.triangles += index !== null ? index.count / 3 : positionAttribute.count / 3;\n          _this.objects.push({\n            object3d: object,\n            geometry: geometry\n          });\n        }\n      });\n      if (this.binary) {\n        var bufferLength = this.triangles * 2 + this.triangles * 3 * 4 * 4 + 80 + 4;\n        var arrayBuffer = new ArrayBuffer(bufferLength);\n        this.output = new DataView(arrayBuffer);\n        this.output.setUint32(this.offset, this.triangles, true);\n        this.offset += 4;\n      } else {\n        this.output = '';\n        this.output += 'solid exported\\n';\n      }\n      for (var i = 0, il = this.objects.length; i < il; i++) {\n        var object = this.objects[i].object3d;\n        var geometry = this.objects[i].geometry;\n        var index = geometry.index;\n        var positionAttribute = geometry.getAttribute('position');\n        if (object instanceof SkinnedMesh) {\n          if (index !== null) {\n            // indexed geometry\n            for (var j = 0; j < index.count; j += 3) {\n              var a = index.getX(j + 0);\n              var b = index.getX(j + 1);\n              var c = index.getX(j + 2);\n              this.writeFace(a, b, c, positionAttribute, object);\n            }\n          } else {\n            // non-indexed geometry\n            for (var _j = 0; _j < positionAttribute.count; _j += 3) {\n              var _a = _j + 0;\n              var _b = _j + 1;\n              var _c = _j + 2;\n              this.writeFace(_a, _b, _c, positionAttribute, object);\n            }\n          }\n        }\n      }\n      if (!this.binary) {\n        this.output += 'endsolid exported\\n';\n      }\n      return this.output;\n    }\n  }, {\n    key: \"writeFace\",\n    value: function writeFace(a, b, c, positionAttribute, object) {\n      this.vA.fromBufferAttribute(positionAttribute, a);\n      this.vB.fromBufferAttribute(positionAttribute, b);\n      this.vC.fromBufferAttribute(positionAttribute, c);\n      if (object.isSkinnedMesh) {\n        object.boneTransform(a, this.vA);\n        object.boneTransform(b, this.vB);\n        object.boneTransform(c, this.vC);\n      }\n      this.vA.applyMatrix4(object.matrixWorld);\n      this.vB.applyMatrix4(object.matrixWorld);\n      this.vC.applyMatrix4(object.matrixWorld);\n      this.writeNormal(this.vA, this.vB, this.vC);\n      this.writeVertex(this.vA);\n      this.writeVertex(this.vB);\n      this.writeVertex(this.vC);\n      if (this.binary && this.output instanceof DataView) {\n        this.output.setUint16(this.offset, 0, true);\n        this.offset += 2;\n      } else {\n        this.output += '\\t\\tendloop\\n';\n        this.output += '\\tendfacet\\n';\n      }\n    }\n  }, {\n    key: \"writeNormal\",\n    value: function writeNormal(vA, vB, vC) {\n      this.cb.subVectors(vC, vB);\n      this.ab.subVectors(vA, vB);\n      this.cb.cross(this.ab).normalize();\n      this.normal.copy(this.cb).normalize();\n      if (this.binary && this.output instanceof DataView) {\n        this.output.setFloat32(this.offset, this.normal.x, true);\n        this.offset += 4;\n        this.output.setFloat32(this.offset, this.normal.y, true);\n        this.offset += 4;\n        this.output.setFloat32(this.offset, this.normal.z, true);\n        this.offset += 4;\n      } else {\n        this.output += \"\\tfacet normal \".concat(this.normal.x, \" \").concat(this.normal.y, \" \").concat(this.normal.z, \"\\n\");\n        this.output += '\\t\\touter loop\\n';\n      }\n    }\n  }, {\n    key: \"writeVertex\",\n    value: function writeVertex(vertex) {\n      if (this.binary && this.output instanceof DataView) {\n        this.output.setFloat32(this.offset, vertex.x, true);\n        this.offset += 4;\n        this.output.setFloat32(this.offset, vertex.y, true);\n        this.offset += 4;\n        this.output.setFloat32(this.offset, vertex.z, true);\n        this.offset += 4;\n      } else {\n        this.output += \"\\t\\t\\tvertex vertex.x vertex.y vertex.z\\n\";\n      }\n    }\n  }]);\n  return STLExporter;\n}();\nexport { STLExporter };","map":{"version":3,"names":["_defineProperty","Vector3","Mesh","SkinnedMesh","STLExporter","binary","output","offset","objects","triangles","vA","vB","vC","cb","ab","normal","scene","options","undefined","traverse","object","isMesh","geometry","isBufferGeometry","Error","index","positionAttribute","getAttribute","count","push","object3d","bufferLength","arrayBuffer","ArrayBuffer","DataView","setUint32","i","il","length","j","a","getX","b","c","writeFace","fromBufferAttribute","isSkinnedMesh","boneTransform","applyMatrix4","matrixWorld","writeNormal","writeVertex","setUint16","subVectors","cross","normalize","copy","setFloat32","x","y","z","vertex"],"sources":["/Users/trudypainter/Desktop/latent-2/frontend/node_modules/three-stdlib/exporters/STLExporter.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Vector3, Mesh, SkinnedMesh } from 'three';\n\n/**\n * Usage:\n *  const exporter = new STLExporter();\n *\n *  // second argument is a list of options\n *  const data = exporter.parse( mesh, { binary: true } );\n *\n */\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/f7ec78508c6797e42f87a4390735bc2c650a1bfd/types/three/examples/jsm/exporters/STLExporter.d.ts\n\nclass STLExporter {\n  constructor() {\n    _defineProperty(this, \"binary\", void 0);\n\n    _defineProperty(this, \"output\", void 0);\n\n    _defineProperty(this, \"offset\", void 0);\n\n    _defineProperty(this, \"objects\", void 0);\n\n    _defineProperty(this, \"triangles\", void 0);\n\n    _defineProperty(this, \"vA\", void 0);\n\n    _defineProperty(this, \"vB\", void 0);\n\n    _defineProperty(this, \"vC\", void 0);\n\n    _defineProperty(this, \"cb\", void 0);\n\n    _defineProperty(this, \"ab\", void 0);\n\n    _defineProperty(this, \"normal\", void 0);\n\n    this.binary = false;\n    this.output = '';\n    this.offset = 80; // skip header\n\n    this.objects = [];\n    this.triangles = 0;\n    this.vA = new Vector3();\n    this.vB = new Vector3();\n    this.vC = new Vector3();\n    this.cb = new Vector3();\n    this.ab = new Vector3();\n    this.normal = new Vector3();\n  }\n\n  parse(scene, options) {\n    this.binary = options.binary !== undefined ? options.binary : false; //\n\n    scene.traverse(object => {\n      if (object instanceof Mesh && object.isMesh) {\n        const geometry = object.geometry;\n\n        if (!geometry.isBufferGeometry) {\n          throw new Error('THREE.STLExporter: Geometry is not of type THREE.BufferGeometry.');\n        }\n\n        const index = geometry.index;\n        const positionAttribute = geometry.getAttribute('position');\n        this.triangles += index !== null ? index.count / 3 : positionAttribute.count / 3;\n        this.objects.push({\n          object3d: object,\n          geometry: geometry\n        });\n      }\n    });\n\n    if (this.binary) {\n      const bufferLength = this.triangles * 2 + this.triangles * 3 * 4 * 4 + 80 + 4;\n      const arrayBuffer = new ArrayBuffer(bufferLength);\n      this.output = new DataView(arrayBuffer);\n      this.output.setUint32(this.offset, this.triangles, true);\n      this.offset += 4;\n    } else {\n      this.output = '';\n      this.output += 'solid exported\\n';\n    }\n\n    for (let i = 0, il = this.objects.length; i < il; i++) {\n      const object = this.objects[i].object3d;\n      const geometry = this.objects[i].geometry;\n      const index = geometry.index;\n      const positionAttribute = geometry.getAttribute('position');\n\n      if (object instanceof SkinnedMesh) {\n        if (index !== null) {\n          // indexed geometry\n          for (let j = 0; j < index.count; j += 3) {\n            const a = index.getX(j + 0);\n            const b = index.getX(j + 1);\n            const c = index.getX(j + 2);\n            this.writeFace(a, b, c, positionAttribute, object);\n          }\n        } else {\n          // non-indexed geometry\n          for (let j = 0; j < positionAttribute.count; j += 3) {\n            const a = j + 0;\n            const b = j + 1;\n            const c = j + 2;\n            this.writeFace(a, b, c, positionAttribute, object);\n          }\n        }\n      }\n    }\n\n    if (!this.binary) {\n      this.output += 'endsolid exported\\n';\n    }\n\n    return this.output;\n  }\n\n  writeFace(a, b, c, positionAttribute, object) {\n    this.vA.fromBufferAttribute(positionAttribute, a);\n    this.vB.fromBufferAttribute(positionAttribute, b);\n    this.vC.fromBufferAttribute(positionAttribute, c);\n\n    if (object.isSkinnedMesh) {\n      object.boneTransform(a, this.vA);\n      object.boneTransform(b, this.vB);\n      object.boneTransform(c, this.vC);\n    }\n\n    this.vA.applyMatrix4(object.matrixWorld);\n    this.vB.applyMatrix4(object.matrixWorld);\n    this.vC.applyMatrix4(object.matrixWorld);\n    this.writeNormal(this.vA, this.vB, this.vC);\n    this.writeVertex(this.vA);\n    this.writeVertex(this.vB);\n    this.writeVertex(this.vC);\n\n    if (this.binary && this.output instanceof DataView) {\n      this.output.setUint16(this.offset, 0, true);\n      this.offset += 2;\n    } else {\n      this.output += '\\t\\tendloop\\n';\n      this.output += '\\tendfacet\\n';\n    }\n  }\n\n  writeNormal(vA, vB, vC) {\n    this.cb.subVectors(vC, vB);\n    this.ab.subVectors(vA, vB);\n    this.cb.cross(this.ab).normalize();\n    this.normal.copy(this.cb).normalize();\n\n    if (this.binary && this.output instanceof DataView) {\n      this.output.setFloat32(this.offset, this.normal.x, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, this.normal.y, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, this.normal.z, true);\n      this.offset += 4;\n    } else {\n      this.output += `\\tfacet normal ${this.normal.x} ${this.normal.y} ${this.normal.z}\\n`;\n      this.output += '\\t\\touter loop\\n';\n    }\n  }\n\n  writeVertex(vertex) {\n    if (this.binary && this.output instanceof DataView) {\n      this.output.setFloat32(this.offset, vertex.x, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, vertex.y, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, vertex.z, true);\n      this.offset += 4;\n    } else {\n      this.output += `\\t\\t\\tvertex vertex.x vertex.y vertex.z\\n`;\n    }\n  }\n\n}\n\nexport { STLExporter };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}