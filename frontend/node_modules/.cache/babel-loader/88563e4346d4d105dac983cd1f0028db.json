{"ast":null,"code":"import _get from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _classCallCheck from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport * as t from \"three\";\nfunction e(e, i) {\n  var s = new t.Matrix4(),\n    r = new t.Ray(),\n    a = new t.Sphere(),\n    o = new t.Vector3(),\n    n = this.geometry;\n  if (a.copy(n.boundingSphere), a.applyMatrix4(this.matrixWorld), !1 === e.ray.intersectSphere(a, o)) return;\n  s.copy(this.matrixWorld).invert(), r.copy(e.ray).applyMatrix4(s);\n  var u = new t.Vector3(),\n    h = new t.Vector3(),\n    l = new t.Vector3(),\n    p = this instanceof t.LineSegments ? 2 : 1,\n    c = n.index,\n    f = n.attributes;\n  if (null !== c) {\n    var _t = c.array,\n      _s = f.position.array,\n      _a = f.width.array;\n    for (var _n = 0, _c = _t.length - 1; _n < _c; _n += p) {\n      var _p = _t[_n],\n        _f = _t[_n + 1];\n      u.fromArray(_s, 3 * _p), h.fromArray(_s, 3 * _f);\n      var d = null != _a[Math.floor(_n / 3)] ? _a[Math.floor(_n / 3)] : 1,\n        v = e.params.Line.threshold + this.material.lineWidth * d / 2,\n        m = v * v;\n      if (r.distanceSqToSegment(u, h, o, l) > m) continue;\n      o.applyMatrix4(this.matrixWorld);\n      var y = e.ray.origin.distanceTo(o);\n      y < e.near || y > e.far || (i.push({\n        distance: y,\n        point: l.clone().applyMatrix4(this.matrixWorld),\n        index: _n,\n        face: null,\n        faceIndex: null,\n        object: this\n      }), _n = _c);\n    }\n  }\n}\nfunction i(t, e, i, s, r) {\n  var a;\n  if (t = t.subarray || t.slice ? t : t.buffer, i = i.subarray || i.slice ? i : i.buffer, t = e ? t.subarray ? t.subarray(e, r && e + r) : t.slice(e, r && e + r) : t, i.set) i.set(t, s);else for (a = 0; a < t.length; a++) {\n    i[a + s] = t[a];\n  }\n  return i;\n}\nvar s = /*#__PURE__*/function (_t$BufferGeometry) {\n  _inherits(s, _t$BufferGeometry);\n  var _super = _createSuper(s);\n  function s() {\n    var _this;\n    _classCallCheck(this, s);\n    _this = _super.call(this), _this.type = \"MeshLine\", _this.isMeshLine = !0, _this.positions = [], _this.raycast = e, _this.previous = [], _this.next = [], _this.side = [], _this.width = [], _this.indices_array = [], _this.uvs = [], _this.counters = [], _this._points = [], _this._geom = null, _this.widthCallback = null, _this.matrixWorld = new t.Matrix4(), Object.defineProperties(_assertThisInitialized(_this), {\n      geometry: {\n        enumerable: !0,\n        get: function get() {\n          return this;\n        }\n      },\n      geom: {\n        enumerable: !0,\n        get: function get() {\n          return this._geom;\n        },\n        set: function set(t) {\n          this.setGeometry(t, this.widthCallback);\n        }\n      },\n      points: {\n        enumerable: !0,\n        get: function get() {\n          return this._points;\n        },\n        set: function set(t) {\n          this.setPoints(t, this.widthCallback);\n        }\n      }\n    });\n    return _this;\n  }\n  _createClass(s, [{\n    key: \"setMatrixWorld\",\n    value: function setMatrixWorld(t) {\n      this.matrixWorld = t;\n    }\n  }, {\n    key: \"setGeometry\",\n    value: function setGeometry(e, i) {\n      this._geometry = e, e instanceof t.BufferGeometry ? this.setPoints(e.getAttribute(\"position\").array, i) : this.setPoints(e, i);\n    }\n  }, {\n    key: \"setPoints\",\n    value: function setPoints(e, i) {\n      if (e instanceof Float32Array || e instanceof Array) {\n        if (this._points = e, this.widthCallback = i, this.positions = [], this.counters = [], e.length && e[0] instanceof t.Vector3) for (var _s2 = 0; _s2 < e.length; _s2++) {\n          var _t2 = e[_s2];\n          var r = _s2 / e.length;\n          this.positions.push(_t2.x, _t2.y, _t2.z), this.positions.push(_t2.x, _t2.y, _t2.z), this.counters.push(r), this.counters.push(r);\n        } else for (_s2 = 0; _s2 < e.length; _s2 += 3) {\n          r = _s2 / e.length;\n          this.positions.push(e[_s2], e[_s2 + 1], e[_s2 + 2]), this.positions.push(e[_s2], e[_s2 + 1], e[_s2 + 2]), this.counters.push(r), this.counters.push(r);\n        }\n        this.process();\n      } else console.error(\"ERROR: The BufferArray of points is not instancied correctly.\");\n    }\n  }, {\n    key: \"compareV3\",\n    value: function compareV3(t, e) {\n      var i = 6 * t,\n        _s3 = 6 * e;\n      return this.positions[i] === this.positions[_s3] && this.positions[i + 1] === this.positions[_s3 + 1] && this.positions[i + 2] === this.positions[_s3 + 2];\n    }\n  }, {\n    key: \"copyV3\",\n    value: function copyV3(t) {\n      var e = 6 * t;\n      return [this.positions[e], this.positions[e + 1], this.positions[e + 2]];\n    }\n  }, {\n    key: \"process\",\n    value: function process() {\n      var e = this.positions.length / 6;\n      var i, _s4;\n      this.previous = [], this.next = [], this.side = [], this.width = [], this.indices_array = [], this.uvs = [], _s4 = this.compareV3(0, e - 1) ? this.copyV3(e - 2) : this.copyV3(0), this.previous.push(_s4[0], _s4[1], _s4[2]), this.previous.push(_s4[0], _s4[1], _s4[2]);\n      for (var _t3 = 0; _t3 < e; _t3++) {\n        if (this.side.push(1), this.side.push(-1), i = this.widthCallback ? this.widthCallback(_t3 / (e - 1)) : 1, this.width.push(i), this.width.push(i), this.uvs.push(_t3 / (e - 1), 0), this.uvs.push(_t3 / (e - 1), 1), _t3 < e - 1) {\n          _s4 = this.copyV3(_t3), this.previous.push(_s4[0], _s4[1], _s4[2]), this.previous.push(_s4[0], _s4[1], _s4[2]);\n          var _e = 2 * _t3;\n          this.indices_array.push(_e, _e + 1, _e + 2), this.indices_array.push(_e + 2, _e + 1, _e + 3);\n        }\n        _t3 > 0 && (_s4 = this.copyV3(_t3), this.next.push(_s4[0], _s4[1], _s4[2]), this.next.push(_s4[0], _s4[1], _s4[2]));\n      }\n      _s4 = this.compareV3(e - 1, 0) ? this.copyV3(1) : this.copyV3(e - 1), this.next.push(_s4[0], _s4[1], _s4[2]), this.next.push(_s4[0], _s4[1], _s4[2]), this._attributes && this._attributes.position.count === this.positions.length ? (this._attributes.position.copyArray(new Float32Array(this.positions)), this._attributes.position.needsUpdate = !0, this._attributes.previous.copyArray(new Float32Array(this.previous)), this._attributes.previous.needsUpdate = !0, this._attributes.next.copyArray(new Float32Array(this.next)), this._attributes.next.needsUpdate = !0, this._attributes.side.copyArray(new Float32Array(this.side)), this._attributes.side.needsUpdate = !0, this._attributes.width.copyArray(new Float32Array(this.width)), this._attributes.width.needsUpdate = !0, this._attributes.uv.copyArray(new Float32Array(this.uvs)), this._attributes.uv.needsUpdate = !0, this._attributes.index.copyArray(new Uint16Array(this.indices_array)), this._attributes.index.needsUpdate = !0) : this._attributes = {\n        position: new t.BufferAttribute(new Float32Array(this.positions), 3),\n        previous: new t.BufferAttribute(new Float32Array(this.previous), 3),\n        next: new t.BufferAttribute(new Float32Array(this.next), 3),\n        side: new t.BufferAttribute(new Float32Array(this.side), 1),\n        width: new t.BufferAttribute(new Float32Array(this.width), 1),\n        uv: new t.BufferAttribute(new Float32Array(this.uvs), 2),\n        index: new t.BufferAttribute(new Uint16Array(this.indices_array), 1),\n        counters: new t.BufferAttribute(new Float32Array(this.counters), 1)\n      }, this.setAttribute(\"position\", this._attributes.position), this.setAttribute(\"previous\", this._attributes.previous), this.setAttribute(\"next\", this._attributes.next), this.setAttribute(\"side\", this._attributes.side), this.setAttribute(\"width\", this._attributes.width), this.setAttribute(\"uv\", this._attributes.uv), this.setAttribute(\"counters\", this._attributes.counters), this.setIndex(this._attributes.index), this.computeBoundingSphere(), this.computeBoundingBox();\n    }\n  }, {\n    key: \"advance\",\n    value: function advance(_ref) {\n      var t = _ref.x,\n        e = _ref.y,\n        _s5 = _ref.z;\n      var r = this._attributes.position.array,\n        a = this._attributes.previous.array,\n        o = this._attributes.next.array,\n        n = r.length;\n      i(r, 0, a, 0, n), i(r, 6, r, 0, n - 6), r[n - 6] = t, r[n - 5] = e, r[n - 4] = _s5, r[n - 3] = t, r[n - 2] = e, r[n - 1] = _s5, i(r, 6, o, 0, n - 6), o[n - 6] = t, o[n - 5] = e, o[n - 4] = _s5, o[n - 3] = t, o[n - 2] = e, o[n - 1] = _s5, this._attributes.position.needsUpdate = !0, this._attributes.previous.needsUpdate = !0, this._attributes.next.needsUpdate = !0;\n    }\n  }]);\n  return s;\n}(t.BufferGeometry);\nt.ShaderChunk.meshline_vert = [\"\", \"#include <common>\", \"\", t.ShaderChunk.logdepthbuf_pars_vertex, t.ShaderChunk.fog_pars_vertex, \"\", \"attribute vec3 previous;\", \"attribute vec3 next;\", \"attribute float side;\", \"attribute float width;\", \"attribute float counters;\", \"\", \"uniform vec2 resolution;\", \"uniform float lineWidth;\", \"uniform vec3 color;\", \"uniform float opacity;\", \"uniform float sizeAttenuation;\", \"\", \"varying vec2 vUV;\", \"varying vec4 vColor;\", \"varying float vCounters;\", \"\", \"vec2 fix( vec4 i, float aspect ) {\", \"\", \"    vec2 res = i.xy / i.w;\", \"    res.x *= aspect;\", \"\\t vCounters = counters;\", \"    return res;\", \"\", \"}\", \"\", \"void main() {\", \"\", \"    float aspect = resolution.x / resolution.y;\", \"\", \"    vColor = vec4( color, opacity );\", \"    vUV = uv;\", \"\", \"    mat4 m = projectionMatrix * modelViewMatrix;\", \"    vec4 finalPosition = m * vec4( position, 1.0 );\", \"    vec4 prevPos = m * vec4( previous, 1.0 );\", \"    vec4 nextPos = m * vec4( next, 1.0 );\", \"\", \"    vec2 currentP = fix( finalPosition, aspect );\", \"    vec2 prevP = fix( prevPos, aspect );\", \"    vec2 nextP = fix( nextPos, aspect );\", \"\", \"    float w = lineWidth * width;\", \"\", \"    vec2 dir;\", \"    if( nextP == currentP ) dir = normalize( currentP - prevP );\", \"    else if( prevP == currentP ) dir = normalize( nextP - currentP );\", \"    else {\", \"        vec2 dir1 = normalize( currentP - prevP );\", \"        vec2 dir2 = normalize( nextP - currentP );\", \"        dir = normalize( dir1 + dir2 );\", \"\", \"        vec2 perp = vec2( -dir1.y, dir1.x );\", \"        vec2 miter = vec2( -dir.y, dir.x );\", \"        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );\", \"\", \"    }\", \"\", \"    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;\", \"    vec4 normal = vec4( -dir.y, dir.x, 0., 1. );\", \"    normal.xy *= .5 * w;\", \"    normal *= projectionMatrix;\", \"    if( sizeAttenuation == 0. ) {\", \"        normal.xy *= finalPosition.w;\", \"        normal.xy /= ( vec4( resolution, 0., 1. ) * projectionMatrix ).xy;\", \"    }\", \"\", \"    finalPosition.xy += normal.xy * side;\", \"\", \"    gl_Position = finalPosition;\", \"\", t.ShaderChunk.logdepthbuf_vertex, t.ShaderChunk.fog_vertex && \"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\", t.ShaderChunk.fog_vertex, \"}\"].join(\"\\n\"), t.ShaderChunk.meshline_frag = [\"\", t.ShaderChunk.fog_pars_fragment, t.ShaderChunk.logdepthbuf_pars_fragment, \"\", \"uniform sampler2D map;\", \"uniform sampler2D alphaMap;\", \"uniform float useMap;\", \"uniform float useAlphaMap;\", \"uniform float useDash;\", \"uniform float dashArray;\", \"uniform float dashOffset;\", \"uniform float dashRatio;\", \"uniform float visibility;\", \"uniform float alphaTest;\", \"uniform vec2 repeat;\", \"\", \"varying vec2 vUV;\", \"varying vec4 vColor;\", \"varying float vCounters;\", \"\", \"void main() {\", \"\", t.ShaderChunk.logdepthbuf_fragment, \"\", \"    vec4 c = vColor;\", \"    if( useMap == 1. ) c *= texture2D( map, vUV * repeat );\", \"    if( useAlphaMap == 1. ) c.a *= texture2D( alphaMap, vUV * repeat ).a;\", \"    if( c.a < alphaTest ) discard;\", \"    if( useDash == 1. ){\", \"        c.a *= ceil(mod(vCounters + dashOffset, dashArray) - (dashArray * dashRatio));\", \"    }\", \"    gl_FragColor = c;\", \"    gl_FragColor.a *= step(vCounters, visibility);\", \"\", t.ShaderChunk.fog_fragment, \"}\"].join(\"\\n\");\nvar r = /*#__PURE__*/function (_t$ShaderMaterial) {\n  _inherits(r, _t$ShaderMaterial);\n  var _super2 = _createSuper(r);\n  function r(e) {\n    var _this2;\n    _classCallCheck(this, r);\n    _this2 = _super2.call(this, {\n      uniforms: Object.assign({}, t.UniformsLib.fog, {\n        lineWidth: {\n          value: 1\n        },\n        map: {\n          value: null\n        },\n        useMap: {\n          value: 0\n        },\n        alphaMap: {\n          value: null\n        },\n        useAlphaMap: {\n          value: 0\n        },\n        color: {\n          value: new t.Color(16777215)\n        },\n        opacity: {\n          value: 1\n        },\n        resolution: {\n          value: new t.Vector2(1, 1)\n        },\n        sizeAttenuation: {\n          value: 1\n        },\n        dashArray: {\n          value: 0\n        },\n        dashOffset: {\n          value: 0\n        },\n        dashRatio: {\n          value: .5\n        },\n        useDash: {\n          value: 0\n        },\n        visibility: {\n          value: 1\n        },\n        alphaTest: {\n          value: 0\n        },\n        repeat: {\n          value: new t.Vector2(1, 1)\n        }\n      }),\n      vertexShader: t.ShaderChunk.meshline_vert,\n      fragmentShader: t.ShaderChunk.meshline_frag\n    }), _this2.type = \"MeshLineMaterial\", Object.defineProperties(_assertThisInitialized(_this2), {\n      lineWidth: {\n        enumerable: !0,\n        get: function get() {\n          return this.uniforms.lineWidth.value;\n        },\n        set: function set(t) {\n          this.uniforms.lineWidth.value = t;\n        }\n      },\n      map: {\n        enumerable: !0,\n        get: function get() {\n          return this.uniforms.map.value;\n        },\n        set: function set(t) {\n          this.uniforms.map.value = t;\n        }\n      },\n      useMap: {\n        enumerable: !0,\n        get: function get() {\n          return this.uniforms.useMap.value;\n        },\n        set: function set(t) {\n          this.uniforms.useMap.value = t;\n        }\n      },\n      alphaMap: {\n        enumerable: !0,\n        get: function get() {\n          return this.uniforms.alphaMap.value;\n        },\n        set: function set(t) {\n          this.uniforms.alphaMap.value = t;\n        }\n      },\n      useAlphaMap: {\n        enumerable: !0,\n        get: function get() {\n          return this.uniforms.useAlphaMap.value;\n        },\n        set: function set(t) {\n          this.uniforms.useAlphaMap.value = t;\n        }\n      },\n      color: {\n        enumerable: !0,\n        get: function get() {\n          return this.uniforms.color.value;\n        },\n        set: function set(t) {\n          this.uniforms.color.value = t;\n        }\n      },\n      opacity: {\n        enumerable: !0,\n        get: function get() {\n          return this.uniforms.opacity.value;\n        },\n        set: function set(t) {\n          this.uniforms.opacity.value = t;\n        }\n      },\n      resolution: {\n        enumerable: !0,\n        get: function get() {\n          return this.uniforms.resolution.value;\n        },\n        set: function set(t) {\n          this.uniforms.resolution.value.copy(t);\n        }\n      },\n      sizeAttenuation: {\n        enumerable: !0,\n        get: function get() {\n          return this.uniforms.sizeAttenuation.value;\n        },\n        set: function set(t) {\n          this.uniforms.sizeAttenuation.value = t;\n        }\n      },\n      dashArray: {\n        enumerable: !0,\n        get: function get() {\n          return this.uniforms.dashArray.value;\n        },\n        set: function set(t) {\n          this.uniforms.dashArray.value = t, this.useDash = 0 !== t ? 1 : 0;\n        }\n      },\n      dashOffset: {\n        enumerable: !0,\n        get: function get() {\n          return this.uniforms.dashOffset.value;\n        },\n        set: function set(t) {\n          this.uniforms.dashOffset.value = t;\n        }\n      },\n      dashRatio: {\n        enumerable: !0,\n        get: function get() {\n          return this.uniforms.dashRatio.value;\n        },\n        set: function set(t) {\n          this.uniforms.dashRatio.value = t;\n        }\n      },\n      useDash: {\n        enumerable: !0,\n        get: function get() {\n          return this.uniforms.useDash.value;\n        },\n        set: function set(t) {\n          this.uniforms.useDash.value = t;\n        }\n      },\n      visibility: {\n        enumerable: !0,\n        get: function get() {\n          return this.uniforms.visibility.value;\n        },\n        set: function set(t) {\n          this.uniforms.visibility.value = t;\n        }\n      },\n      alphaTest: {\n        enumerable: !0,\n        get: function get() {\n          return this.uniforms.alphaTest.value;\n        },\n        set: function set(t) {\n          this.uniforms.alphaTest.value = t;\n        }\n      },\n      repeat: {\n        enumerable: !0,\n        get: function get() {\n          return this.uniforms.repeat.value;\n        },\n        set: function set(t) {\n          this.uniforms.repeat.value.copy(t);\n        }\n      }\n    }), _this2.setValues(e);\n    return _this2;\n  }\n  _createClass(r, [{\n    key: \"copy\",\n    value: function copy(t) {\n      return _get(_getPrototypeOf(r.prototype), \"copy\", this).call(this, t), this.lineWidth = t.lineWidth, this.map = t.map, this.useMap = t.useMap, this.alphaMap = t.alphaMap, this.useAlphaMap = t.useAlphaMap, this.color.copy(t.color), this.opacity = t.opacity, this.resolution.copy(t.resolution), this.sizeAttenuation = t.sizeAttenuation, this.dashArray.copy(t.dashArray), this.dashOffset.copy(t.dashOffset), this.dashRatio.copy(t.dashRatio), this.useDash = t.useDash, this.visibility = t.visibility, this.alphaTest = t.alphaTest, this.repeat.copy(t.repeat), this;\n    }\n  }]);\n  return r;\n}(t.ShaderMaterial);\nexport { s as MeshLine, r as MeshLineMaterial, e as MeshLineRaycast };","map":{"version":3,"names":["t","e","i","s","Matrix4","r","Ray","a","Sphere","o","Vector3","n","geometry","copy","boundingSphere","applyMatrix4","matrixWorld","ray","intersectSphere","invert","u","h","l","p","LineSegments","c","index","f","attributes","array","position","width","length","fromArray","d","Math","floor","v","params","Line","threshold","material","lineWidth","m","distanceSqToSegment","y","origin","distanceTo","near","far","push","distance","point","clone","face","faceIndex","object","subarray","slice","buffer","set","type","isMeshLine","positions","raycast","previous","next","side","indices_array","uvs","counters","_points","_geom","widthCallback","Object","defineProperties","enumerable","get","geom","setGeometry","points","setPoints","_geometry","BufferGeometry","getAttribute","Float32Array","Array","x","z","process","console","error","compareV3","copyV3","_attributes","count","copyArray","needsUpdate","uv","Uint16Array","BufferAttribute","setAttribute","setIndex","computeBoundingSphere","computeBoundingBox","ShaderChunk","meshline_vert","logdepthbuf_pars_vertex","fog_pars_vertex","logdepthbuf_vertex","fog_vertex","join","meshline_frag","fog_pars_fragment","logdepthbuf_pars_fragment","logdepthbuf_fragment","fog_fragment","uniforms","assign","UniformsLib","fog","value","map","useMap","alphaMap","useAlphaMap","color","Color","opacity","resolution","Vector2","sizeAttenuation","dashArray","dashOffset","dashRatio","useDash","visibility","alphaTest","repeat","vertexShader","fragmentShader","setValues","ShaderMaterial","MeshLine","MeshLineMaterial","MeshLineRaycast"],"sources":["/Users/trudypainter/Desktop/latent-2/frontend/node_modules/meshline/dist/meshline.es.js"],"sourcesContent":["import*as t from\"three\";function e(e,i){const s=new t.Matrix4,r=new t.Ray,a=new t.Sphere,o=new t.Vector3,n=this.geometry;if(a.copy(n.boundingSphere),a.applyMatrix4(this.matrixWorld),!1===e.ray.intersectSphere(a,o))return;s.copy(this.matrixWorld).invert(),r.copy(e.ray).applyMatrix4(s);const u=new t.Vector3,h=new t.Vector3,l=new t.Vector3,p=this instanceof t.LineSegments?2:1,c=n.index,f=n.attributes;if(null!==c){const t=c.array,s=f.position.array,a=f.width.array;for(let n=0,c=t.length-1;n<c;n+=p){const p=t[n],f=t[n+1];u.fromArray(s,3*p),h.fromArray(s,3*f);const d=null!=a[Math.floor(n/3)]?a[Math.floor(n/3)]:1,v=e.params.Line.threshold+this.material.lineWidth*d/2,m=v*v;if(r.distanceSqToSegment(u,h,o,l)>m)continue;o.applyMatrix4(this.matrixWorld);const y=e.ray.origin.distanceTo(o);y<e.near||y>e.far||(i.push({distance:y,point:l.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this}),n=c)}}}function i(t,e,i,s,r){let a;if(t=t.subarray||t.slice?t:t.buffer,i=i.subarray||i.slice?i:i.buffer,t=e?t.subarray?t.subarray(e,r&&e+r):t.slice(e,r&&e+r):t,i.set)i.set(t,s);else for(a=0;a<t.length;a++)i[a+s]=t[a];return i}class s extends t.BufferGeometry{constructor(){super(),this.type=\"MeshLine\",this.isMeshLine=!0,this.positions=[],this.raycast=e,this.previous=[],this.next=[],this.side=[],this.width=[],this.indices_array=[],this.uvs=[],this.counters=[],this._points=[],this._geom=null,this.widthCallback=null,this.matrixWorld=new t.Matrix4,Object.defineProperties(this,{geometry:{enumerable:!0,get(){return this}},geom:{enumerable:!0,get(){return this._geom},set(t){this.setGeometry(t,this.widthCallback)}},points:{enumerable:!0,get(){return this._points},set(t){this.setPoints(t,this.widthCallback)}}})}setMatrixWorld(t){this.matrixWorld=t}setGeometry(e,i){this._geometry=e,e instanceof t.BufferGeometry?this.setPoints(e.getAttribute(\"position\").array,i):this.setPoints(e,i)}setPoints(e,i){if(e instanceof Float32Array||e instanceof Array){if(this._points=e,this.widthCallback=i,this.positions=[],this.counters=[],e.length&&e[0]instanceof t.Vector3)for(var s=0;s<e.length;s++){const t=e[s];var r=s/e.length;this.positions.push(t.x,t.y,t.z),this.positions.push(t.x,t.y,t.z),this.counters.push(r),this.counters.push(r)}else for(s=0;s<e.length;s+=3){r=s/e.length;this.positions.push(e[s],e[s+1],e[s+2]),this.positions.push(e[s],e[s+1],e[s+2]),this.counters.push(r),this.counters.push(r)}this.process()}else console.error(\"ERROR: The BufferArray of points is not instancied correctly.\")}compareV3(t,e){const i=6*t,s=6*e;return this.positions[i]===this.positions[s]&&this.positions[i+1]===this.positions[s+1]&&this.positions[i+2]===this.positions[s+2]}copyV3(t){const e=6*t;return[this.positions[e],this.positions[e+1],this.positions[e+2]]}process(){const e=this.positions.length/6;let i,s;this.previous=[],this.next=[],this.side=[],this.width=[],this.indices_array=[],this.uvs=[],s=this.compareV3(0,e-1)?this.copyV3(e-2):this.copyV3(0),this.previous.push(s[0],s[1],s[2]),this.previous.push(s[0],s[1],s[2]);for(let t=0;t<e;t++){if(this.side.push(1),this.side.push(-1),i=this.widthCallback?this.widthCallback(t/(e-1)):1,this.width.push(i),this.width.push(i),this.uvs.push(t/(e-1),0),this.uvs.push(t/(e-1),1),t<e-1){s=this.copyV3(t),this.previous.push(s[0],s[1],s[2]),this.previous.push(s[0],s[1],s[2]);const e=2*t;this.indices_array.push(e,e+1,e+2),this.indices_array.push(e+2,e+1,e+3)}t>0&&(s=this.copyV3(t),this.next.push(s[0],s[1],s[2]),this.next.push(s[0],s[1],s[2]))}s=this.compareV3(e-1,0)?this.copyV3(1):this.copyV3(e-1),this.next.push(s[0],s[1],s[2]),this.next.push(s[0],s[1],s[2]),this._attributes&&this._attributes.position.count===this.positions.length?(this._attributes.position.copyArray(new Float32Array(this.positions)),this._attributes.position.needsUpdate=!0,this._attributes.previous.copyArray(new Float32Array(this.previous)),this._attributes.previous.needsUpdate=!0,this._attributes.next.copyArray(new Float32Array(this.next)),this._attributes.next.needsUpdate=!0,this._attributes.side.copyArray(new Float32Array(this.side)),this._attributes.side.needsUpdate=!0,this._attributes.width.copyArray(new Float32Array(this.width)),this._attributes.width.needsUpdate=!0,this._attributes.uv.copyArray(new Float32Array(this.uvs)),this._attributes.uv.needsUpdate=!0,this._attributes.index.copyArray(new Uint16Array(this.indices_array)),this._attributes.index.needsUpdate=!0):this._attributes={position:new t.BufferAttribute(new Float32Array(this.positions),3),previous:new t.BufferAttribute(new Float32Array(this.previous),3),next:new t.BufferAttribute(new Float32Array(this.next),3),side:new t.BufferAttribute(new Float32Array(this.side),1),width:new t.BufferAttribute(new Float32Array(this.width),1),uv:new t.BufferAttribute(new Float32Array(this.uvs),2),index:new t.BufferAttribute(new Uint16Array(this.indices_array),1),counters:new t.BufferAttribute(new Float32Array(this.counters),1)},this.setAttribute(\"position\",this._attributes.position),this.setAttribute(\"previous\",this._attributes.previous),this.setAttribute(\"next\",this._attributes.next),this.setAttribute(\"side\",this._attributes.side),this.setAttribute(\"width\",this._attributes.width),this.setAttribute(\"uv\",this._attributes.uv),this.setAttribute(\"counters\",this._attributes.counters),this.setIndex(this._attributes.index),this.computeBoundingSphere(),this.computeBoundingBox()}advance({x:t,y:e,z:s}){const r=this._attributes.position.array,a=this._attributes.previous.array,o=this._attributes.next.array,n=r.length;i(r,0,a,0,n),i(r,6,r,0,n-6),r[n-6]=t,r[n-5]=e,r[n-4]=s,r[n-3]=t,r[n-2]=e,r[n-1]=s,i(r,6,o,0,n-6),o[n-6]=t,o[n-5]=e,o[n-4]=s,o[n-3]=t,o[n-2]=e,o[n-1]=s,this._attributes.position.needsUpdate=!0,this._attributes.previous.needsUpdate=!0,this._attributes.next.needsUpdate=!0}}t.ShaderChunk.meshline_vert=[\"\",\"#include <common>\",\"\",t.ShaderChunk.logdepthbuf_pars_vertex,t.ShaderChunk.fog_pars_vertex,\"\",\"attribute vec3 previous;\",\"attribute vec3 next;\",\"attribute float side;\",\"attribute float width;\",\"attribute float counters;\",\"\",\"uniform vec2 resolution;\",\"uniform float lineWidth;\",\"uniform vec3 color;\",\"uniform float opacity;\",\"uniform float sizeAttenuation;\",\"\",\"varying vec2 vUV;\",\"varying vec4 vColor;\",\"varying float vCounters;\",\"\",\"vec2 fix( vec4 i, float aspect ) {\",\"\",\"    vec2 res = i.xy / i.w;\",\"    res.x *= aspect;\",\"\\t vCounters = counters;\",\"    return res;\",\"\",\"}\",\"\",\"void main() {\",\"\",\"    float aspect = resolution.x / resolution.y;\",\"\",\"    vColor = vec4( color, opacity );\",\"    vUV = uv;\",\"\",\"    mat4 m = projectionMatrix * modelViewMatrix;\",\"    vec4 finalPosition = m * vec4( position, 1.0 );\",\"    vec4 prevPos = m * vec4( previous, 1.0 );\",\"    vec4 nextPos = m * vec4( next, 1.0 );\",\"\",\"    vec2 currentP = fix( finalPosition, aspect );\",\"    vec2 prevP = fix( prevPos, aspect );\",\"    vec2 nextP = fix( nextPos, aspect );\",\"\",\"    float w = lineWidth * width;\",\"\",\"    vec2 dir;\",\"    if( nextP == currentP ) dir = normalize( currentP - prevP );\",\"    else if( prevP == currentP ) dir = normalize( nextP - currentP );\",\"    else {\",\"        vec2 dir1 = normalize( currentP - prevP );\",\"        vec2 dir2 = normalize( nextP - currentP );\",\"        dir = normalize( dir1 + dir2 );\",\"\",\"        vec2 perp = vec2( -dir1.y, dir1.x );\",\"        vec2 miter = vec2( -dir.y, dir.x );\",\"        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );\",\"\",\"    }\",\"\",\"    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;\",\"    vec4 normal = vec4( -dir.y, dir.x, 0., 1. );\",\"    normal.xy *= .5 * w;\",\"    normal *= projectionMatrix;\",\"    if( sizeAttenuation == 0. ) {\",\"        normal.xy *= finalPosition.w;\",\"        normal.xy /= ( vec4( resolution, 0., 1. ) * projectionMatrix ).xy;\",\"    }\",\"\",\"    finalPosition.xy += normal.xy * side;\",\"\",\"    gl_Position = finalPosition;\",\"\",t.ShaderChunk.logdepthbuf_vertex,t.ShaderChunk.fog_vertex&&\"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",t.ShaderChunk.fog_vertex,\"}\"].join(\"\\n\"),t.ShaderChunk.meshline_frag=[\"\",t.ShaderChunk.fog_pars_fragment,t.ShaderChunk.logdepthbuf_pars_fragment,\"\",\"uniform sampler2D map;\",\"uniform sampler2D alphaMap;\",\"uniform float useMap;\",\"uniform float useAlphaMap;\",\"uniform float useDash;\",\"uniform float dashArray;\",\"uniform float dashOffset;\",\"uniform float dashRatio;\",\"uniform float visibility;\",\"uniform float alphaTest;\",\"uniform vec2 repeat;\",\"\",\"varying vec2 vUV;\",\"varying vec4 vColor;\",\"varying float vCounters;\",\"\",\"void main() {\",\"\",t.ShaderChunk.logdepthbuf_fragment,\"\",\"    vec4 c = vColor;\",\"    if( useMap == 1. ) c *= texture2D( map, vUV * repeat );\",\"    if( useAlphaMap == 1. ) c.a *= texture2D( alphaMap, vUV * repeat ).a;\",\"    if( c.a < alphaTest ) discard;\",\"    if( useDash == 1. ){\",\"        c.a *= ceil(mod(vCounters + dashOffset, dashArray) - (dashArray * dashRatio));\",\"    }\",\"    gl_FragColor = c;\",\"    gl_FragColor.a *= step(vCounters, visibility);\",\"\",t.ShaderChunk.fog_fragment,\"}\"].join(\"\\n\");class r extends t.ShaderMaterial{constructor(e){super({uniforms:Object.assign({},t.UniformsLib.fog,{lineWidth:{value:1},map:{value:null},useMap:{value:0},alphaMap:{value:null},useAlphaMap:{value:0},color:{value:new t.Color(16777215)},opacity:{value:1},resolution:{value:new t.Vector2(1,1)},sizeAttenuation:{value:1},dashArray:{value:0},dashOffset:{value:0},dashRatio:{value:.5},useDash:{value:0},visibility:{value:1},alphaTest:{value:0},repeat:{value:new t.Vector2(1,1)}}),vertexShader:t.ShaderChunk.meshline_vert,fragmentShader:t.ShaderChunk.meshline_frag}),this.type=\"MeshLineMaterial\",Object.defineProperties(this,{lineWidth:{enumerable:!0,get(){return this.uniforms.lineWidth.value},set(t){this.uniforms.lineWidth.value=t}},map:{enumerable:!0,get(){return this.uniforms.map.value},set(t){this.uniforms.map.value=t}},useMap:{enumerable:!0,get(){return this.uniforms.useMap.value},set(t){this.uniforms.useMap.value=t}},alphaMap:{enumerable:!0,get(){return this.uniforms.alphaMap.value},set(t){this.uniforms.alphaMap.value=t}},useAlphaMap:{enumerable:!0,get(){return this.uniforms.useAlphaMap.value},set(t){this.uniforms.useAlphaMap.value=t}},color:{enumerable:!0,get(){return this.uniforms.color.value},set(t){this.uniforms.color.value=t}},opacity:{enumerable:!0,get(){return this.uniforms.opacity.value},set(t){this.uniforms.opacity.value=t}},resolution:{enumerable:!0,get(){return this.uniforms.resolution.value},set(t){this.uniforms.resolution.value.copy(t)}},sizeAttenuation:{enumerable:!0,get(){return this.uniforms.sizeAttenuation.value},set(t){this.uniforms.sizeAttenuation.value=t}},dashArray:{enumerable:!0,get(){return this.uniforms.dashArray.value},set(t){this.uniforms.dashArray.value=t,this.useDash=0!==t?1:0}},dashOffset:{enumerable:!0,get(){return this.uniforms.dashOffset.value},set(t){this.uniforms.dashOffset.value=t}},dashRatio:{enumerable:!0,get(){return this.uniforms.dashRatio.value},set(t){this.uniforms.dashRatio.value=t}},useDash:{enumerable:!0,get(){return this.uniforms.useDash.value},set(t){this.uniforms.useDash.value=t}},visibility:{enumerable:!0,get(){return this.uniforms.visibility.value},set(t){this.uniforms.visibility.value=t}},alphaTest:{enumerable:!0,get(){return this.uniforms.alphaTest.value},set(t){this.uniforms.alphaTest.value=t}},repeat:{enumerable:!0,get(){return this.uniforms.repeat.value},set(t){this.uniforms.repeat.value.copy(t)}}}),this.setValues(e)}copy(t){return super.copy(t),this.lineWidth=t.lineWidth,this.map=t.map,this.useMap=t.useMap,this.alphaMap=t.alphaMap,this.useAlphaMap=t.useAlphaMap,this.color.copy(t.color),this.opacity=t.opacity,this.resolution.copy(t.resolution),this.sizeAttenuation=t.sizeAttenuation,this.dashArray.copy(t.dashArray),this.dashOffset.copy(t.dashOffset),this.dashRatio.copy(t.dashRatio),this.useDash=t.useDash,this.visibility=t.visibility,this.alphaTest=t.alphaTest,this.repeat.copy(t.repeat),this}}export{s as MeshLine,r as MeshLineMaterial,e as MeshLineRaycast};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}