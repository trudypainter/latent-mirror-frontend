{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Loader, FileLoader, BufferGeometry, Float32BufferAttribute } from 'three';\nvar XYZLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(XYZLoader, _Loader);\n  var _super = _createSuper(XYZLoader);\n  function XYZLoader() {\n    _classCallCheck(this, XYZLoader);\n    return _super.apply(this, arguments);\n  }\n  _createClass(XYZLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(scope.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(text) {\n      var lines = text.split('\\n');\n      var vertices = [];\n      var colors = [];\n      var _iterator = _createForOfIteratorHelper(lines),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var line = _step.value;\n          line = line.trim();\n          if (line.charAt(0) === '#') continue; // skip comments\n\n          var lineValues = line.split(/\\s+/);\n          if (lineValues.length === 3) {\n            // XYZ\n            vertices.push(parseFloat(lineValues[0]));\n            vertices.push(parseFloat(lineValues[1]));\n            vertices.push(parseFloat(lineValues[2]));\n          }\n          if (lineValues.length === 6) {\n            // XYZRGB\n            vertices.push(parseFloat(lineValues[0]));\n            vertices.push(parseFloat(lineValues[1]));\n            vertices.push(parseFloat(lineValues[2]));\n            colors.push(parseFloat(lineValues[3]) / 255);\n            colors.push(parseFloat(lineValues[4]) / 255);\n            colors.push(parseFloat(lineValues[5]) / 255);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      if (colors.length > 0) {\n        geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n      }\n      return geometry;\n    }\n  }]);\n  return XYZLoader;\n}(Loader);\nexport { XYZLoader };","map":{"version":3,"names":["Loader","FileLoader","BufferGeometry","Float32BufferAttribute","XYZLoader","url","onLoad","onProgress","onError","scope","loader","manager","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","text","parse","e","console","error","itemError","lines","split","vertices","colors","line","trim","charAt","lineValues","length","push","parseFloat","geometry","setAttribute"],"sources":["/Users/trudypainter/Desktop/latent-2/frontend/node_modules/three-stdlib/loaders/XYZLoader.js"],"sourcesContent":["import { Loader, FileLoader, BufferGeometry, Float32BufferAttribute } from 'three';\n\nclass XYZLoader extends Loader {\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n\n  parse(text) {\n    const lines = text.split('\\n');\n    const vertices = [];\n    const colors = [];\n\n    for (let line of lines) {\n      line = line.trim();\n      if (line.charAt(0) === '#') continue; // skip comments\n\n      const lineValues = line.split(/\\s+/);\n\n      if (lineValues.length === 3) {\n        // XYZ\n        vertices.push(parseFloat(lineValues[0]));\n        vertices.push(parseFloat(lineValues[1]));\n        vertices.push(parseFloat(lineValues[2]));\n      }\n\n      if (lineValues.length === 6) {\n        // XYZRGB\n        vertices.push(parseFloat(lineValues[0]));\n        vertices.push(parseFloat(lineValues[1]));\n        vertices.push(parseFloat(lineValues[2]));\n        colors.push(parseFloat(lineValues[3]) / 255);\n        colors.push(parseFloat(lineValues[4]) / 255);\n        colors.push(parseFloat(lineValues[5]) / 255);\n      }\n    }\n\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n    if (colors.length > 0) {\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    }\n\n    return geometry;\n  }\n\n}\n\nexport { XYZLoader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}