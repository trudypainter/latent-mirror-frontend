{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport { ShaderNode, sub, mul, pow, vec3, lessThanEqual, mix, join } from '../ShaderNode.js';\nimport { LinearEncoding, sRGBEncoding } from 'three';\nvar LinearToLinear = new ShaderNode(function (inputs) {\n  return inputs.value;\n});\nvar LinearTosRGB = new ShaderNode(function (inputs) {\n  var value = inputs.value;\n  var rgb = value.rgb;\n  var a = sub(mul(pow(value.rgb, vec3(0.41666)), 1.055), vec3(0.055));\n  var b = mul(rgb, 12.92);\n  var factor = vec3(lessThanEqual(rgb, vec3(0.0031308)));\n  var rgbResult = mix(a, b, factor);\n  return join(rgbResult.r, rgbResult.g, rgbResult.b, value.a);\n});\nvar EncodingLib = {\n  LinearToLinear: LinearToLinear,\n  LinearTosRGB: LinearTosRGB\n};\nvar ColorSpaceNode = /*#__PURE__*/function (_Node) {\n  _inherits(ColorSpaceNode, _Node);\n  var _super = _createSuper(ColorSpaceNode);\n  function ColorSpaceNode(method, node) {\n    var _this;\n    _classCallCheck(this, ColorSpaceNode);\n    _this = _super.call(this, 'vec4');\n    _this.method = method;\n    _this.node = node;\n    return _this;\n  }\n  _createClass(ColorSpaceNode, [{\n    key: \"fromEncoding\",\n    value: function fromEncoding(encoding) {\n      var method = null;\n      if (encoding === LinearEncoding) {\n        method = 'Linear';\n      } else if (encoding === sRGBEncoding) {\n        method = 'sRGB';\n      }\n      this.method = 'LinearTo' + method;\n      return this;\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var type = this.getNodeType(builder);\n      var method = this.method;\n      var node = this.node;\n      if (method !== ColorSpaceNode.LINEAR_TO_LINEAR) {\n        var encodingFunctionNode = EncodingLib[method];\n        return encodingFunctionNode({\n          value: node\n        }).build(builder, type);\n      } else {\n        return node.build(builder, type);\n      }\n    }\n  }]);\n  return ColorSpaceNode;\n}(Node);\n_defineProperty(ColorSpaceNode, \"LINEAR_TO_LINEAR\", 'LinearToLinear');\n_defineProperty(ColorSpaceNode, \"LINEAR_TO_SRGB\", 'LinearTosRGB');\nexport default ColorSpaceNode;\nexport { LinearToLinear, LinearTosRGB };","map":{"version":3,"names":["_defineProperty","Node","ShaderNode","sub","mul","pow","vec3","lessThanEqual","mix","join","LinearEncoding","sRGBEncoding","LinearToLinear","inputs","value","LinearTosRGB","rgb","a","b","factor","rgbResult","r","g","EncodingLib","ColorSpaceNode","method","node","encoding","builder","type","getNodeType","LINEAR_TO_LINEAR","encodingFunctionNode","build"],"sources":["/Users/trudypainter/Desktop/latent-2/frontend/node_modules/three-stdlib/nodes/display/ColorSpaceNode.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport { ShaderNode, sub, mul, pow, vec3, lessThanEqual, mix, join } from '../ShaderNode.js';\nimport { LinearEncoding, sRGBEncoding } from 'three';\n\nconst LinearToLinear = new ShaderNode(inputs => {\n  return inputs.value;\n});\nconst LinearTosRGB = new ShaderNode(inputs => {\n  const {\n    value\n  } = inputs;\n  const rgb = value.rgb;\n  const a = sub(mul(pow(value.rgb, vec3(0.41666)), 1.055), vec3(0.055));\n  const b = mul(rgb, 12.92);\n  const factor = vec3(lessThanEqual(rgb, vec3(0.0031308)));\n  const rgbResult = mix(a, b, factor);\n  return join(rgbResult.r, rgbResult.g, rgbResult.b, value.a);\n});\nconst EncodingLib = {\n  LinearToLinear,\n  LinearTosRGB\n};\n\nclass ColorSpaceNode extends Node {\n  constructor(method, node) {\n    super('vec4');\n    this.method = method;\n    this.node = node;\n  }\n\n  fromEncoding(encoding) {\n    let method = null;\n\n    if (encoding === LinearEncoding) {\n      method = 'Linear';\n    } else if (encoding === sRGBEncoding) {\n      method = 'sRGB';\n    }\n\n    this.method = 'LinearTo' + method;\n    return this;\n  }\n\n  generate(builder) {\n    const type = this.getNodeType(builder);\n    const method = this.method;\n    const node = this.node;\n\n    if (method !== ColorSpaceNode.LINEAR_TO_LINEAR) {\n      const encodingFunctionNode = EncodingLib[method];\n      return encodingFunctionNode({\n        value: node\n      }).build(builder, type);\n    } else {\n      return node.build(builder, type);\n    }\n  }\n\n}\n\n_defineProperty(ColorSpaceNode, \"LINEAR_TO_LINEAR\", 'LinearToLinear');\n\n_defineProperty(ColorSpaceNode, \"LINEAR_TO_SRGB\", 'LinearTosRGB');\n\nexport default ColorSpaceNode;\nexport { LinearToLinear, LinearTosRGB };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}