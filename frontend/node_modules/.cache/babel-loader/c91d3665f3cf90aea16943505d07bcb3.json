{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _possibleConstructorReturn from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Vector3, LineSegments, BufferGeometry, Float32BufferAttribute, LineBasicMaterial } from 'three';\nvar _v1 = new Vector3();\nvar _v2 = new Vector3();\nvar VertexTangentsHelper = /*#__PURE__*/function (_LineSegments) {\n  _inherits(VertexTangentsHelper, _LineSegments);\n  var _super = _createSuper(VertexTangentsHelper);\n  function VertexTangentsHelper(object, size, hex) {\n    var _this;\n    _classCallCheck(this, VertexTangentsHelper);\n    var color = hex !== undefined ? hex : 0x00ffff; //\n\n    var objGeometry = object.geometry;\n    if (!(objGeometry && objGeometry.isBufferGeometry)) {\n      console.error('THREE.VertexTangentsHelper: geometry not an instance of THREE.BufferGeometry.', objGeometry);\n      return _possibleConstructorReturn(_this);\n    }\n    var nTangents = objGeometry.attributes.tangent.count; //\n\n    var geometry = new BufferGeometry();\n    var positions = new Float32BufferAttribute(nTangents * 2 * 3, 3);\n    geometry.setAttribute('position', positions);\n    _this = _super.call(this, geometry, new LineBasicMaterial({\n      color: color,\n      toneMapped: false\n    }));\n    _this.type = 'VertexTangentsHelper';\n    _this.object = object;\n    _this.size = size !== undefined ? size : 1; //\n\n    _this.matrixAutoUpdate = false;\n    _this.update();\n    return _this;\n  }\n  _createClass(VertexTangentsHelper, [{\n    key: \"update\",\n    value: function update() {\n      this.object.updateMatrixWorld(true);\n      var matrixWorld = this.object.matrixWorld;\n      var position = this.geometry.attributes.position; //\n\n      var objGeometry = this.object.geometry;\n      var objPos = objGeometry.attributes.position;\n      var objTan = objGeometry.attributes.tangent;\n      var idx = 0; // for simplicity, ignore index and drawcalls, and render every tangent\n\n      for (var j = 0, jl = objPos.count; j < jl; j++) {\n        _v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n        _v2.set(objTan.getX(j), objTan.getY(j), objTan.getZ(j));\n        _v2.transformDirection(matrixWorld).multiplyScalar(this.size).add(_v1);\n        position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n        idx = idx + 1;\n        position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n        idx = idx + 1;\n      }\n      position.needsUpdate = true;\n    }\n  }]);\n  return VertexTangentsHelper;\n}(LineSegments);\nexport { VertexTangentsHelper };","map":{"version":3,"names":["Vector3","LineSegments","BufferGeometry","Float32BufferAttribute","LineBasicMaterial","_v1","_v2","VertexTangentsHelper","object","size","hex","color","undefined","objGeometry","geometry","isBufferGeometry","console","error","nTangents","attributes","tangent","count","positions","setAttribute","toneMapped","type","matrixAutoUpdate","update","updateMatrixWorld","matrixWorld","position","objPos","objTan","idx","j","jl","set","getX","getY","getZ","applyMatrix4","transformDirection","multiplyScalar","add","setXYZ","x","y","z","needsUpdate"],"sources":["/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/three-stdlib/helpers/VertexTangentsHelper.js"],"sourcesContent":["import { Vector3, LineSegments, BufferGeometry, Float32BufferAttribute, LineBasicMaterial } from 'three';\n\nconst _v1 = new Vector3();\n\nconst _v2 = new Vector3();\n\nclass VertexTangentsHelper extends LineSegments {\n  constructor(object, size, hex) {\n    const color = hex !== undefined ? hex : 0x00ffff; //\n\n    const objGeometry = object.geometry;\n\n    if (!(objGeometry && objGeometry.isBufferGeometry)) {\n      console.error('THREE.VertexTangentsHelper: geometry not an instance of THREE.BufferGeometry.', objGeometry);\n      return;\n    }\n\n    const nTangents = objGeometry.attributes.tangent.count; //\n\n    const geometry = new BufferGeometry();\n    const positions = new Float32BufferAttribute(nTangents * 2 * 3, 3);\n    geometry.setAttribute('position', positions);\n    super(geometry, new LineBasicMaterial({\n      color,\n      toneMapped: false\n    }));\n    this.type = 'VertexTangentsHelper';\n    this.object = object;\n    this.size = size !== undefined ? size : 1; //\n\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n\n  update() {\n    this.object.updateMatrixWorld(true);\n    const matrixWorld = this.object.matrixWorld;\n    const position = this.geometry.attributes.position; //\n\n    const objGeometry = this.object.geometry;\n    const objPos = objGeometry.attributes.position;\n    const objTan = objGeometry.attributes.tangent;\n    let idx = 0; // for simplicity, ignore index and drawcalls, and render every tangent\n\n    for (let j = 0, jl = objPos.count; j < jl; j++) {\n      _v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n\n      _v2.set(objTan.getX(j), objTan.getY(j), objTan.getZ(j));\n\n      _v2.transformDirection(matrixWorld).multiplyScalar(this.size).add(_v1);\n\n      position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n      idx = idx + 1;\n      position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n      idx = idx + 1;\n    }\n\n    position.needsUpdate = true;\n  }\n\n}\n\nexport { VertexTangentsHelper };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}