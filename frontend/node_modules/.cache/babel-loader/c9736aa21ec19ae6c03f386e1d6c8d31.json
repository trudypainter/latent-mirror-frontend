{"ast":null,"code":"import _createClass from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { BufferGeometry, Float32BufferAttribute } from 'three';\nvar BoxLineGeometry = /*#__PURE__*/function (_BufferGeometry) {\n  _inherits(BoxLineGeometry, _BufferGeometry);\n  var _super = _createSuper(BoxLineGeometry);\n  function BoxLineGeometry(width, height, depth, widthSegments, heightSegments, depthSegments) {\n    var _this;\n    _classCallCheck(this, BoxLineGeometry);\n    _this = _super.call(this);\n    width = width || 1;\n    height = height || 1;\n    depth = depth || 1;\n    widthSegments = Math.floor(widthSegments) || 1;\n    heightSegments = Math.floor(heightSegments) || 1;\n    depthSegments = Math.floor(depthSegments) || 1;\n    var widthHalf = width / 2;\n    var heightHalf = height / 2;\n    var depthHalf = depth / 2;\n    var segmentWidth = width / widthSegments;\n    var segmentHeight = height / heightSegments;\n    var segmentDepth = depth / depthSegments;\n    var vertices = [];\n    var x = -widthHalf,\n      y = -heightHalf,\n      z = -depthHalf;\n    for (var i = 0; i <= widthSegments; i++) {\n      vertices.push(x, -heightHalf, -depthHalf, x, heightHalf, -depthHalf);\n      vertices.push(x, heightHalf, -depthHalf, x, heightHalf, depthHalf);\n      vertices.push(x, heightHalf, depthHalf, x, -heightHalf, depthHalf);\n      vertices.push(x, -heightHalf, depthHalf, x, -heightHalf, -depthHalf);\n      x += segmentWidth;\n    }\n    for (var _i = 0; _i <= heightSegments; _i++) {\n      vertices.push(-widthHalf, y, -depthHalf, widthHalf, y, -depthHalf);\n      vertices.push(widthHalf, y, -depthHalf, widthHalf, y, depthHalf);\n      vertices.push(widthHalf, y, depthHalf, -widthHalf, y, depthHalf);\n      vertices.push(-widthHalf, y, depthHalf, -widthHalf, y, -depthHalf);\n      y += segmentHeight;\n    }\n    for (var _i2 = 0; _i2 <= depthSegments; _i2++) {\n      vertices.push(-widthHalf, -heightHalf, z, -widthHalf, heightHalf, z);\n      vertices.push(-widthHalf, heightHalf, z, widthHalf, heightHalf, z);\n      vertices.push(widthHalf, heightHalf, z, widthHalf, -heightHalf, z);\n      vertices.push(widthHalf, -heightHalf, z, -widthHalf, -heightHalf, z);\n      z += segmentDepth;\n    }\n    _this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    return _this;\n  }\n  return _createClass(BoxLineGeometry);\n}(BufferGeometry);\nexport { BoxLineGeometry };","map":{"version":3,"names":["BufferGeometry","Float32BufferAttribute","BoxLineGeometry","width","height","depth","widthSegments","heightSegments","depthSegments","Math","floor","widthHalf","heightHalf","depthHalf","segmentWidth","segmentHeight","segmentDepth","vertices","x","y","z","i","push","setAttribute"],"sources":["/Users/trudypainter/Desktop/latent-2/frontend/node_modules/three-stdlib/geometries/BoxLineGeometry.js"],"sourcesContent":["import { BufferGeometry, Float32BufferAttribute } from 'three';\n\nclass BoxLineGeometry extends BufferGeometry {\n  constructor(width, height, depth, widthSegments, heightSegments, depthSegments) {\n    super();\n    width = width || 1;\n    height = height || 1;\n    depth = depth || 1;\n    widthSegments = Math.floor(widthSegments) || 1;\n    heightSegments = Math.floor(heightSegments) || 1;\n    depthSegments = Math.floor(depthSegments) || 1;\n    const widthHalf = width / 2;\n    const heightHalf = height / 2;\n    const depthHalf = depth / 2;\n    const segmentWidth = width / widthSegments;\n    const segmentHeight = height / heightSegments;\n    const segmentDepth = depth / depthSegments;\n    const vertices = [];\n    let x = -widthHalf,\n        y = -heightHalf,\n        z = -depthHalf;\n\n    for (let i = 0; i <= widthSegments; i++) {\n      vertices.push(x, -heightHalf, -depthHalf, x, heightHalf, -depthHalf);\n      vertices.push(x, heightHalf, -depthHalf, x, heightHalf, depthHalf);\n      vertices.push(x, heightHalf, depthHalf, x, -heightHalf, depthHalf);\n      vertices.push(x, -heightHalf, depthHalf, x, -heightHalf, -depthHalf);\n      x += segmentWidth;\n    }\n\n    for (let i = 0; i <= heightSegments; i++) {\n      vertices.push(-widthHalf, y, -depthHalf, widthHalf, y, -depthHalf);\n      vertices.push(widthHalf, y, -depthHalf, widthHalf, y, depthHalf);\n      vertices.push(widthHalf, y, depthHalf, -widthHalf, y, depthHalf);\n      vertices.push(-widthHalf, y, depthHalf, -widthHalf, y, -depthHalf);\n      y += segmentHeight;\n    }\n\n    for (let i = 0; i <= depthSegments; i++) {\n      vertices.push(-widthHalf, -heightHalf, z, -widthHalf, heightHalf, z);\n      vertices.push(-widthHalf, heightHalf, z, widthHalf, heightHalf, z);\n      vertices.push(widthHalf, heightHalf, z, widthHalf, -heightHalf, z);\n      vertices.push(widthHalf, -heightHalf, z, -widthHalf, -heightHalf, z);\n      z += segmentDepth;\n    }\n\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n  }\n\n}\n\nexport { BoxLineGeometry };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}