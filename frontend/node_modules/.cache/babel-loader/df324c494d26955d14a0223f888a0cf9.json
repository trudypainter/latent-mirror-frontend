{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Group, BufferGeometry, BufferAttribute, LineSegments, LineBasicMaterial, Box3Helper, Box3, MeshBasicMaterial, DoubleSide, Mesh, PlaneGeometry } from 'three';\nvar CSMHelper = /*#__PURE__*/function (_Group) {\n  _inherits(CSMHelper, _Group);\n  var _super = _createSuper(CSMHelper);\n  function CSMHelper(csm) {\n    var _this;\n    _classCallCheck(this, CSMHelper);\n    _this = _super.call(this);\n    _this.csm = csm;\n    _this.displayFrustum = true;\n    _this.displayPlanes = true;\n    _this.displayShadowBounds = true;\n    var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    var positions = new Float32Array(24);\n    var frustumGeometry = new BufferGeometry();\n    frustumGeometry.setIndex(new BufferAttribute(indices, 1));\n    frustumGeometry.setAttribute('position', new BufferAttribute(positions, 3, false));\n    var frustumLines = new LineSegments(frustumGeometry, new LineBasicMaterial());\n    _this.add(frustumLines);\n    _this.frustumLines = frustumLines;\n    _this.cascadeLines = [];\n    _this.cascadePlanes = [];\n    _this.shadowLines = [];\n    return _this;\n  }\n  _createClass(CSMHelper, [{\n    key: \"updateVisibility\",\n    value: function updateVisibility() {\n      var displayFrustum = this.displayFrustum;\n      var displayPlanes = this.displayPlanes;\n      var displayShadowBounds = this.displayShadowBounds;\n      var frustumLines = this.frustumLines;\n      var cascadeLines = this.cascadeLines;\n      var cascadePlanes = this.cascadePlanes;\n      var shadowLines = this.shadowLines;\n      for (var i = 0, l = cascadeLines.length; i < l; i++) {\n        var cascadeLine = cascadeLines[i];\n        var cascadePlane = cascadePlanes[i];\n        var shadowLineGroup = shadowLines[i];\n        cascadeLine.visible = displayFrustum;\n        cascadePlane.visible = displayFrustum && displayPlanes;\n        shadowLineGroup.visible = displayShadowBounds;\n      }\n      frustumLines.visible = displayFrustum;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var csm = this.csm;\n      var camera = csm.camera;\n      var cascades = csm.cascades;\n      var mainFrustum = csm.mainFrustum;\n      var frustums = csm.frustums;\n      var lights = csm.lights;\n      var frustumLines = this.frustumLines;\n      var frustumLinePositions = frustumLines.geometry.getAttribute('position');\n      var cascadeLines = this.cascadeLines;\n      var cascadePlanes = this.cascadePlanes;\n      var shadowLines = this.shadowLines;\n      this.position.copy(camera.position);\n      this.quaternion.copy(camera.quaternion);\n      this.scale.copy(camera.scale);\n      this.updateMatrixWorld(true);\n      while (cascadeLines.length > cascades) {\n        this.remove(cascadeLines.pop());\n        this.remove(cascadePlanes.pop());\n        this.remove(shadowLines.pop());\n      }\n      while (cascadeLines.length < cascades) {\n        var cascadeLine = new Box3Helper(new Box3(), 0xffffff);\n        var planeMat = new MeshBasicMaterial({\n          transparent: true,\n          opacity: 0.1,\n          depthWrite: false,\n          side: DoubleSide\n        });\n        var cascadePlane = new Mesh(new PlaneGeometry(), planeMat);\n        var shadowLineGroup = new Group();\n        var shadowLine = new Box3Helper(new Box3(), 0xffff00);\n        shadowLineGroup.add(shadowLine);\n        this.add(cascadeLine);\n        this.add(cascadePlane);\n        this.add(shadowLineGroup);\n        cascadeLines.push(cascadeLine);\n        cascadePlanes.push(cascadePlane);\n        shadowLines.push(shadowLineGroup);\n      }\n      for (var i = 0; i < cascades; i++) {\n        var frustum = frustums[i];\n        var light = lights[i];\n        var shadowCam = light.shadow.camera;\n        var _farVerts = frustum.vertices.far;\n        var _cascadeLine = cascadeLines[i];\n        var _cascadePlane = cascadePlanes[i];\n        var _shadowLineGroup = shadowLines[i];\n        var _shadowLine = _shadowLineGroup.children[0];\n        _cascadeLine.box.min.copy(_farVerts[2]);\n        _cascadeLine.box.max.copy(_farVerts[0]);\n        _cascadeLine.box.max.z += 1e-4;\n        _cascadePlane.position.addVectors(_farVerts[0], _farVerts[2]);\n        _cascadePlane.position.multiplyScalar(0.5);\n        _cascadePlane.scale.subVectors(_farVerts[0], _farVerts[2]);\n        _cascadePlane.scale.z = 1e-4;\n        this.remove(_shadowLineGroup);\n        _shadowLineGroup.position.copy(shadowCam.position);\n        _shadowLineGroup.quaternion.copy(shadowCam.quaternion);\n        _shadowLineGroup.scale.copy(shadowCam.scale);\n        _shadowLineGroup.updateMatrixWorld(true);\n        this.attach(_shadowLineGroup);\n        _shadowLine.box.min.set(shadowCam.bottom, shadowCam.left, -shadowCam.far);\n        _shadowLine.box.max.set(shadowCam.top, shadowCam.right, -shadowCam.near);\n      }\n      var nearVerts = mainFrustum.vertices.near;\n      var farVerts = mainFrustum.vertices.far;\n      frustumLinePositions.setXYZ(0, farVerts[0].x, farVerts[0].y, farVerts[0].z);\n      frustumLinePositions.setXYZ(1, farVerts[3].x, farVerts[3].y, farVerts[3].z);\n      frustumLinePositions.setXYZ(2, farVerts[2].x, farVerts[2].y, farVerts[2].z);\n      frustumLinePositions.setXYZ(3, farVerts[1].x, farVerts[1].y, farVerts[1].z);\n      frustumLinePositions.setXYZ(4, nearVerts[0].x, nearVerts[0].y, nearVerts[0].z);\n      frustumLinePositions.setXYZ(5, nearVerts[3].x, nearVerts[3].y, nearVerts[3].z);\n      frustumLinePositions.setXYZ(6, nearVerts[2].x, nearVerts[2].y, nearVerts[2].z);\n      frustumLinePositions.setXYZ(7, nearVerts[1].x, nearVerts[1].y, nearVerts[1].z);\n      frustumLinePositions.needsUpdate = true;\n    }\n  }]);\n  return CSMHelper;\n}(Group);\nexport { CSMHelper };","map":{"version":3,"names":["Group","BufferGeometry","BufferAttribute","LineSegments","LineBasicMaterial","Box3Helper","Box3","MeshBasicMaterial","DoubleSide","Mesh","PlaneGeometry","CSMHelper","csm","displayFrustum","displayPlanes","displayShadowBounds","indices","Uint16Array","positions","Float32Array","frustumGeometry","setIndex","setAttribute","frustumLines","add","cascadeLines","cascadePlanes","shadowLines","i","l","length","cascadeLine","cascadePlane","shadowLineGroup","visible","camera","cascades","mainFrustum","frustums","lights","frustumLinePositions","geometry","getAttribute","position","copy","quaternion","scale","updateMatrixWorld","remove","pop","planeMat","transparent","opacity","depthWrite","side","shadowLine","push","frustum","light","shadowCam","shadow","farVerts","vertices","far","children","box","min","max","z","addVectors","multiplyScalar","subVectors","attach","set","bottom","left","top","right","near","nearVerts","setXYZ","x","y","needsUpdate"],"sources":["/Users/trudypainter/Desktop/latent-2/frontend/node_modules/three-stdlib/csm/CSMHelper.js"],"sourcesContent":["import { Group, BufferGeometry, BufferAttribute, LineSegments, LineBasicMaterial, Box3Helper, Box3, MeshBasicMaterial, DoubleSide, Mesh, PlaneGeometry } from 'three';\n\nclass CSMHelper extends Group {\n  constructor(csm) {\n    super();\n    this.csm = csm;\n    this.displayFrustum = true;\n    this.displayPlanes = true;\n    this.displayShadowBounds = true;\n    const indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    const positions = new Float32Array(24);\n    const frustumGeometry = new BufferGeometry();\n    frustumGeometry.setIndex(new BufferAttribute(indices, 1));\n    frustumGeometry.setAttribute('position', new BufferAttribute(positions, 3, false));\n    const frustumLines = new LineSegments(frustumGeometry, new LineBasicMaterial());\n    this.add(frustumLines);\n    this.frustumLines = frustumLines;\n    this.cascadeLines = [];\n    this.cascadePlanes = [];\n    this.shadowLines = [];\n  }\n\n  updateVisibility() {\n    const displayFrustum = this.displayFrustum;\n    const displayPlanes = this.displayPlanes;\n    const displayShadowBounds = this.displayShadowBounds;\n    const frustumLines = this.frustumLines;\n    const cascadeLines = this.cascadeLines;\n    const cascadePlanes = this.cascadePlanes;\n    const shadowLines = this.shadowLines;\n\n    for (let i = 0, l = cascadeLines.length; i < l; i++) {\n      const cascadeLine = cascadeLines[i];\n      const cascadePlane = cascadePlanes[i];\n      const shadowLineGroup = shadowLines[i];\n      cascadeLine.visible = displayFrustum;\n      cascadePlane.visible = displayFrustum && displayPlanes;\n      shadowLineGroup.visible = displayShadowBounds;\n    }\n\n    frustumLines.visible = displayFrustum;\n  }\n\n  update() {\n    const csm = this.csm;\n    const camera = csm.camera;\n    const cascades = csm.cascades;\n    const mainFrustum = csm.mainFrustum;\n    const frustums = csm.frustums;\n    const lights = csm.lights;\n    const frustumLines = this.frustumLines;\n    const frustumLinePositions = frustumLines.geometry.getAttribute('position');\n    const cascadeLines = this.cascadeLines;\n    const cascadePlanes = this.cascadePlanes;\n    const shadowLines = this.shadowLines;\n    this.position.copy(camera.position);\n    this.quaternion.copy(camera.quaternion);\n    this.scale.copy(camera.scale);\n    this.updateMatrixWorld(true);\n\n    while (cascadeLines.length > cascades) {\n      this.remove(cascadeLines.pop());\n      this.remove(cascadePlanes.pop());\n      this.remove(shadowLines.pop());\n    }\n\n    while (cascadeLines.length < cascades) {\n      const cascadeLine = new Box3Helper(new Box3(), 0xffffff);\n      const planeMat = new MeshBasicMaterial({\n        transparent: true,\n        opacity: 0.1,\n        depthWrite: false,\n        side: DoubleSide\n      });\n      const cascadePlane = new Mesh(new PlaneGeometry(), planeMat);\n      const shadowLineGroup = new Group();\n      const shadowLine = new Box3Helper(new Box3(), 0xffff00);\n      shadowLineGroup.add(shadowLine);\n      this.add(cascadeLine);\n      this.add(cascadePlane);\n      this.add(shadowLineGroup);\n      cascadeLines.push(cascadeLine);\n      cascadePlanes.push(cascadePlane);\n      shadowLines.push(shadowLineGroup);\n    }\n\n    for (let i = 0; i < cascades; i++) {\n      const frustum = frustums[i];\n      const light = lights[i];\n      const shadowCam = light.shadow.camera;\n      const farVerts = frustum.vertices.far;\n      const cascadeLine = cascadeLines[i];\n      const cascadePlane = cascadePlanes[i];\n      const shadowLineGroup = shadowLines[i];\n      const shadowLine = shadowLineGroup.children[0];\n      cascadeLine.box.min.copy(farVerts[2]);\n      cascadeLine.box.max.copy(farVerts[0]);\n      cascadeLine.box.max.z += 1e-4;\n      cascadePlane.position.addVectors(farVerts[0], farVerts[2]);\n      cascadePlane.position.multiplyScalar(0.5);\n      cascadePlane.scale.subVectors(farVerts[0], farVerts[2]);\n      cascadePlane.scale.z = 1e-4;\n      this.remove(shadowLineGroup);\n      shadowLineGroup.position.copy(shadowCam.position);\n      shadowLineGroup.quaternion.copy(shadowCam.quaternion);\n      shadowLineGroup.scale.copy(shadowCam.scale);\n      shadowLineGroup.updateMatrixWorld(true);\n      this.attach(shadowLineGroup);\n      shadowLine.box.min.set(shadowCam.bottom, shadowCam.left, -shadowCam.far);\n      shadowLine.box.max.set(shadowCam.top, shadowCam.right, -shadowCam.near);\n    }\n\n    const nearVerts = mainFrustum.vertices.near;\n    const farVerts = mainFrustum.vertices.far;\n    frustumLinePositions.setXYZ(0, farVerts[0].x, farVerts[0].y, farVerts[0].z);\n    frustumLinePositions.setXYZ(1, farVerts[3].x, farVerts[3].y, farVerts[3].z);\n    frustumLinePositions.setXYZ(2, farVerts[2].x, farVerts[2].y, farVerts[2].z);\n    frustumLinePositions.setXYZ(3, farVerts[1].x, farVerts[1].y, farVerts[1].z);\n    frustumLinePositions.setXYZ(4, nearVerts[0].x, nearVerts[0].y, nearVerts[0].z);\n    frustumLinePositions.setXYZ(5, nearVerts[3].x, nearVerts[3].y, nearVerts[3].z);\n    frustumLinePositions.setXYZ(6, nearVerts[2].x, nearVerts[2].y, nearVerts[2].z);\n    frustumLinePositions.setXYZ(7, nearVerts[1].x, nearVerts[1].y, nearVerts[1].z);\n    frustumLinePositions.needsUpdate = true;\n  }\n\n}\n\nexport { CSMHelper };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}