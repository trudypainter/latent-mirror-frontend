{"ast":null,"code":"import _slicedToArray from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\nvar isOrthographicCamera = function isOrthographicCamera(def) {\n  return def && def.isOrthographicCamera;\n};\nvar col = new THREE.Color();\nfunction Container(_ref) {\n  var canvasSize = _ref.canvasSize,\n    scene = _ref.scene,\n    index = _ref.index,\n    children = _ref.children,\n    frames = _ref.frames,\n    rect = _ref.rect,\n    track = _ref.track;\n  var get = useThree(function (state) {\n    return state.get;\n  });\n  var camera = useThree(function (state) {\n    return state.camera;\n  });\n  var virtualScene = useThree(function (state) {\n    return state.scene;\n  });\n  var setEvents = useThree(function (state) {\n    return state.setEvents;\n  });\n  var frameCount = 0;\n  useFrame(function (state) {\n    if (frames === Infinity || frameCount <= frames) {\n      var _track$current;\n      rect.current = (_track$current = track.current) == null ? void 0 : _track$current.getBoundingClientRect();\n      frameCount++;\n    }\n    if (rect.current) {\n      var _rect$current = rect.current,\n        left = _rect$current.left,\n        right = _rect$current.right,\n        top = _rect$current.top,\n        bottom = _rect$current.bottom,\n        width = _rect$current.width,\n        height = _rect$current.height;\n      var isOffscreen = bottom < 0 || top > canvasSize.height || right < 0 || left > canvasSize.width;\n      var positiveYUpBottom = canvasSize.height - bottom;\n      var aspect = width / height;\n      if (isOrthographicCamera(camera)) {\n        if (camera.left !== width / -2 || camera.right !== width / 2 || camera.top !== height / 2 || camera.bottom !== height / -2) {\n          Object.assign(camera, {\n            left: width / -2,\n            right: width / 2,\n            top: height / 2,\n            bottom: height / -2\n          });\n          camera.updateProjectionMatrix();\n        }\n      } else if (camera.aspect !== aspect) {\n        camera.aspect = aspect;\n        camera.updateProjectionMatrix();\n      }\n      state.gl.setViewport(left, positiveYUpBottom, width, height);\n      state.gl.setScissor(left, positiveYUpBottom, width, height);\n      state.gl.setScissorTest(true);\n      if (isOffscreen) {\n        state.gl.getClearColor(col);\n        state.gl.setClearColor(col, state.gl.getClearAlpha());\n        state.gl.clear(true, true);\n        return;\n      } // When children are present render the portalled scene, otherwise the default scene\n\n      state.gl.render(children ? virtualScene : scene, camera);\n    }\n  }, index);\n  React.useEffect(function () {\n    // Connect the event layer to the tracking element\n    var old = get().events.connected;\n    setEvents({\n      connected: track.current\n    });\n    return function () {\n      return setEvents({\n        connected: old\n      });\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\nvar View = function View(_ref2) {\n  var track = _ref2.track,\n    _ref2$index = _ref2.index,\n    index = _ref2$index === void 0 ? 1 : _ref2$index,\n    _ref2$frames = _ref2.frames,\n    frames = _ref2$frames === void 0 ? Infinity : _ref2$frames,\n    children = _ref2.children;\n  var rect = React.useRef(null);\n  var _useThree = useThree(),\n    size = _useThree.size,\n    scene = _useThree.scene;\n  var _React$useState = React.useState(function () {\n      return new THREE.Scene();\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    virtualScene = _React$useState2[0];\n  var compute = React.useCallback(function (event, state) {\n    if (track.current && event.target === track.current) {\n      var _rect$current2 = rect.current,\n        width = _rect$current2.width,\n        height = _rect$current2.height,\n        left = _rect$current2.left,\n        top = _rect$current2.top;\n      var x = event.clientX - left;\n      var y = event.clientY - top;\n      state.pointer.set(x / width * 2 - 1, -(y / height) * 2 + 1);\n      state.raycaster.setFromCamera(state.pointer, state.camera);\n    }\n  }, [rect]);\n  var _React$useReducer = React.useReducer(function () {\n      return true;\n    }, false),\n    _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n    ready = _React$useReducer2[0],\n    toggle = _React$useReducer2[1];\n  React.useEffect(function () {\n    var _track$current2;\n\n    // We need the tracking elements bounds beforehand in order to inject it into the portal\n    rect.current = (_track$current2 = track.current) == null ? void 0 : _track$current2.getBoundingClientRect(); // And now we can proceed\n\n    toggle();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, ready && createPortal( /*#__PURE__*/React.createElement(Container, {\n    canvasSize: size,\n    frames: frames,\n    scene: scene,\n    track: track,\n    rect: rect,\n    index: index\n  }, children), virtualScene, {\n    events: {\n      compute: compute,\n      priority: index\n    },\n    size: {\n      width: rect.current.width,\n      height: rect.current.height\n    }\n  }));\n};\nexport { View };","map":{"version":3,"names":["React","THREE","useThree","createPortal","useFrame","isOrthographicCamera","def","col","Color","Container","canvasSize","scene","index","children","frames","rect","track","get","state","camera","virtualScene","setEvents","frameCount","Infinity","_track$current","current","getBoundingClientRect","left","right","top","bottom","width","height","isOffscreen","positiveYUpBottom","aspect","Object","assign","updateProjectionMatrix","gl","setViewport","setScissor","setScissorTest","getClearColor","setClearColor","getClearAlpha","clear","render","useEffect","old","events","connected","createElement","Fragment","View","useRef","size","useState","Scene","compute","useCallback","event","target","x","clientX","y","clientY","pointer","set","raycaster","setFromCamera","useReducer","ready","toggle","_track$current2","priority"],"sources":["/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@react-three/drei/web/View.js"],"sourcesContent":["import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\n\nconst isOrthographicCamera = def => def && def.isOrthographicCamera;\n\nconst col = new THREE.Color();\n\nfunction Container({\n  canvasSize,\n  scene,\n  index,\n  children,\n  frames,\n  rect,\n  track\n}) {\n  const get = useThree(state => state.get);\n  const camera = useThree(state => state.camera);\n  const virtualScene = useThree(state => state.scene);\n  const setEvents = useThree(state => state.setEvents);\n  let frameCount = 0;\n  useFrame(state => {\n    if (frames === Infinity || frameCount <= frames) {\n      var _track$current;\n\n      rect.current = (_track$current = track.current) == null ? void 0 : _track$current.getBoundingClientRect();\n      frameCount++;\n    }\n\n    if (rect.current) {\n      const {\n        left,\n        right,\n        top,\n        bottom,\n        width,\n        height\n      } = rect.current;\n      const isOffscreen = bottom < 0 || top > canvasSize.height || right < 0 || left > canvasSize.width;\n      const positiveYUpBottom = canvasSize.height - bottom;\n      const aspect = width / height;\n\n      if (isOrthographicCamera(camera)) {\n        if (camera.left !== width / -2 || camera.right !== width / 2 || camera.top !== height / 2 || camera.bottom !== height / -2) {\n          Object.assign(camera, {\n            left: width / -2,\n            right: width / 2,\n            top: height / 2,\n            bottom: height / -2\n          });\n          camera.updateProjectionMatrix();\n        }\n      } else if (camera.aspect !== aspect) {\n        camera.aspect = aspect;\n        camera.updateProjectionMatrix();\n      }\n\n      state.gl.setViewport(left, positiveYUpBottom, width, height);\n      state.gl.setScissor(left, positiveYUpBottom, width, height);\n      state.gl.setScissorTest(true);\n\n      if (isOffscreen) {\n        state.gl.getClearColor(col);\n        state.gl.setClearColor(col, state.gl.getClearAlpha());\n        state.gl.clear(true, true);\n        return;\n      } // When children are present render the portalled scene, otherwise the default scene\n\n\n      state.gl.render(children ? virtualScene : scene, camera);\n    }\n  }, index);\n  React.useEffect(() => {\n    // Connect the event layer to the tracking element\n    const old = get().events.connected;\n    setEvents({\n      connected: track.current\n    });\n    return () => setEvents({\n      connected: old\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nconst View = ({\n  track,\n  index = 1,\n  frames = Infinity,\n  children\n}) => {\n  const rect = React.useRef(null);\n  const {\n    size,\n    scene\n  } = useThree();\n  const [virtualScene] = React.useState(() => new THREE.Scene());\n  const compute = React.useCallback((event, state) => {\n    if (track.current && event.target === track.current) {\n      const {\n        width,\n        height,\n        left,\n        top\n      } = rect.current;\n      const x = event.clientX - left;\n      const y = event.clientY - top;\n      state.pointer.set(x / width * 2 - 1, -(y / height) * 2 + 1);\n      state.raycaster.setFromCamera(state.pointer, state.camera);\n    }\n  }, [rect]);\n  const [ready, toggle] = React.useReducer(() => true, false);\n  React.useEffect(() => {\n    var _track$current2;\n\n    // We need the tracking elements bounds beforehand in order to inject it into the portal\n    rect.current = (_track$current2 = track.current) == null ? void 0 : _track$current2.getBoundingClientRect(); // And now we can proceed\n\n    toggle();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, ready && createPortal( /*#__PURE__*/React.createElement(Container, {\n    canvasSize: size,\n    frames: frames,\n    scene: scene,\n    track: track,\n    rect: rect,\n    index: index\n  }, children), virtualScene, {\n    events: {\n      compute,\n      priority: index\n    },\n    size: {\n      width: rect.current.width,\n      height: rect.current.height\n    }\n  }));\n};\n\nexport { View };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}