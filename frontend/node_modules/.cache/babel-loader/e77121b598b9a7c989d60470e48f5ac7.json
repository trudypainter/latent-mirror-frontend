{"ast":null,"code":"import _slicedToArray from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"mixBlur\", \"mixStrength\", \"resolution\", \"blur\", \"args\", \"minDepthThreshold\", \"maxDepthThreshold\", \"depthScale\", \"depthToBlurRatioBias\", \"mirror\", \"children\", \"debug\", \"distortion\", \"mixContrast\", \"distortionMap\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, LinearFilter, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { BlurPass } from '../materials/BlurPass.js';\nimport { MeshReflectorMaterial } from '../materials/MeshReflectorMaterial.js';\nextend({\n  MeshReflectorMaterial: MeshReflectorMaterial\n});\nvar Reflector = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$mixBlur = _ref.mixBlur,\n    mixBlur = _ref$mixBlur === void 0 ? 0 : _ref$mixBlur,\n    _ref$mixStrength = _ref.mixStrength,\n    mixStrength = _ref$mixStrength === void 0 ? 0.5 : _ref$mixStrength,\n    _ref$resolution = _ref.resolution,\n    resolution = _ref$resolution === void 0 ? 256 : _ref$resolution,\n    _ref$blur = _ref.blur,\n    blur = _ref$blur === void 0 ? [0, 0] : _ref$blur,\n    _ref$args = _ref.args,\n    args = _ref$args === void 0 ? [1, 1] : _ref$args,\n    _ref$minDepthThreshol = _ref.minDepthThreshold,\n    minDepthThreshold = _ref$minDepthThreshol === void 0 ? 0.9 : _ref$minDepthThreshol,\n    _ref$maxDepthThreshol = _ref.maxDepthThreshold,\n    maxDepthThreshold = _ref$maxDepthThreshol === void 0 ? 1 : _ref$maxDepthThreshol,\n    _ref$depthScale = _ref.depthScale,\n    depthScale = _ref$depthScale === void 0 ? 0 : _ref$depthScale,\n    _ref$depthToBlurRatio = _ref.depthToBlurRatioBias,\n    depthToBlurRatioBias = _ref$depthToBlurRatio === void 0 ? 0.25 : _ref$depthToBlurRatio,\n    _ref$mirror = _ref.mirror,\n    mirror = _ref$mirror === void 0 ? 0 : _ref$mirror,\n    children = _ref.children,\n    _ref$debug = _ref.debug,\n    debug = _ref$debug === void 0 ? 0 : _ref$debug,\n    _ref$distortion = _ref.distortion,\n    distortion = _ref$distortion === void 0 ? 1 : _ref$distortion,\n    _ref$mixContrast = _ref.mixContrast,\n    mixContrast = _ref$mixContrast === void 0 ? 1 : _ref$mixContrast,\n    distortionMap = _ref.distortionMap,\n    props = _objectWithoutProperties(_ref, _excluded);\n  React.useEffect(function () {\n    console.warn('Reflector has been deprecated and will be removed next major. Replace it with <MeshReflectorMaterial />!');\n  }, []);\n  var gl = useThree(function (_ref2) {\n    var gl = _ref2.gl;\n    return gl;\n  });\n  var camera = useThree(function (_ref3) {\n    var camera = _ref3.camera;\n    return camera;\n  });\n  var scene = useThree(function (_ref4) {\n    var scene = _ref4.scene;\n    return scene;\n  });\n  blur = Array.isArray(blur) ? blur : [blur, blur];\n  var hasBlur = blur[0] + blur[1] > 0;\n  var meshRef = React.useRef(null);\n  var _React$useState = React.useState(function () {\n      return new Plane();\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    reflectorPlane = _React$useState2[0];\n  var _React$useState3 = React.useState(function () {\n      return new Vector3();\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 1),\n    normal = _React$useState4[0];\n  var _React$useState5 = React.useState(function () {\n      return new Vector3();\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 1),\n    reflectorWorldPosition = _React$useState6[0];\n  var _React$useState7 = React.useState(function () {\n      return new Vector3();\n    }),\n    _React$useState8 = _slicedToArray(_React$useState7, 1),\n    cameraWorldPosition = _React$useState8[0];\n  var _React$useState9 = React.useState(function () {\n      return new Matrix4();\n    }),\n    _React$useState10 = _slicedToArray(_React$useState9, 1),\n    rotationMatrix = _React$useState10[0];\n  var _React$useState11 = React.useState(function () {\n      return new Vector3(0, 0, -1);\n    }),\n    _React$useState12 = _slicedToArray(_React$useState11, 1),\n    lookAtPosition = _React$useState12[0];\n  var _React$useState13 = React.useState(function () {\n      return new Vector4();\n    }),\n    _React$useState14 = _slicedToArray(_React$useState13, 1),\n    clipPlane = _React$useState14[0];\n  var _React$useState15 = React.useState(function () {\n      return new Vector3();\n    }),\n    _React$useState16 = _slicedToArray(_React$useState15, 1),\n    view = _React$useState16[0];\n  var _React$useState17 = React.useState(function () {\n      return new Vector3();\n    }),\n    _React$useState18 = _slicedToArray(_React$useState17, 1),\n    target = _React$useState18[0];\n  var _React$useState19 = React.useState(function () {\n      return new Vector4();\n    }),\n    _React$useState20 = _slicedToArray(_React$useState19, 1),\n    q = _React$useState20[0];\n  var _React$useState21 = React.useState(function () {\n      return new Matrix4();\n    }),\n    _React$useState22 = _slicedToArray(_React$useState21, 1),\n    textureMatrix = _React$useState22[0];\n  var _React$useState23 = React.useState(function () {\n      return new PerspectiveCamera();\n    }),\n    _React$useState24 = _slicedToArray(_React$useState23, 1),\n    virtualCamera = _React$useState24[0];\n  var beforeRender = React.useCallback(function () {\n    reflectorWorldPosition.setFromMatrixPosition(meshRef.current.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(meshRef.current.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition); // Avoid rendering when reflector is facing away\n\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix); // Update the texture matrix\n\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(meshRef.current.matrixWorld); // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    var projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]; // Calculate the scaled plane vector\n\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q)); // Replacing the third row of the projection matrix\n\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w;\n  }, []);\n  var _React$useMemo = React.useMemo(function () {\n      var parameters = {\n        minFilter: LinearFilter,\n        magFilter: LinearFilter,\n        encoding: gl.outputEncoding\n      };\n      var fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n      fbo1.depthBuffer = true;\n      fbo1.depthTexture = new DepthTexture(resolution, resolution);\n      fbo1.depthTexture.format = DepthFormat;\n      fbo1.depthTexture.type = UnsignedShortType;\n      var fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\n      var blurpass = new BlurPass({\n        gl: gl,\n        resolution: resolution,\n        width: blur[0],\n        height: blur[1],\n        minDepthThreshold: minDepthThreshold,\n        maxDepthThreshold: maxDepthThreshold,\n        depthScale: depthScale,\n        depthToBlurRatioBias: depthToBlurRatioBias\n      });\n      var reflectorProps = {\n        mirror: mirror,\n        textureMatrix: textureMatrix,\n        mixBlur: mixBlur,\n        tDiffuse: fbo1.texture,\n        tDepth: fbo1.depthTexture,\n        tDiffuseBlur: fbo2.texture,\n        hasBlur: hasBlur,\n        mixStrength: mixStrength,\n        minDepthThreshold: minDepthThreshold,\n        maxDepthThreshold: maxDepthThreshold,\n        depthScale: depthScale,\n        depthToBlurRatioBias: depthToBlurRatioBias,\n        transparent: true,\n        debug: debug,\n        distortion: distortion,\n        distortionMap: distortionMap,\n        mixContrast: mixContrast,\n        'defines-USE_BLUR': hasBlur ? '' : undefined,\n        'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\n        'defines-USE_DISTORTION': distortionMap ? '' : undefined\n      };\n      return [fbo1, fbo2, blurpass, reflectorProps];\n    }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, debug, distortion, distortionMap, mixContrast]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 4),\n    fbo1 = _React$useMemo2[0],\n    fbo2 = _React$useMemo2[1],\n    blurpass = _React$useMemo2[2],\n    reflectorProps = _React$useMemo2[3];\n  useFrame(function () {\n    if (!(meshRef != null && meshRef.current)) return;\n    meshRef.current.visible = false;\n    var currentXrEnabled = gl.xr.enabled;\n    var currentShadowAutoUpdate = gl.shadowMap.autoUpdate;\n    beforeRender();\n    gl.xr.enabled = false;\n    gl.shadowMap.autoUpdate = false;\n    gl.setRenderTarget(fbo1);\n    gl.state.buffers.depth.setMask(true);\n    if (!gl.autoClear) gl.clear();\n    gl.render(scene, virtualCamera);\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\n    gl.xr.enabled = currentXrEnabled;\n    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;\n    meshRef.current.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: mergeRefs([meshRef, ref])\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: args\n  }), children ? children('meshReflectorMaterial', reflectorProps) : /*#__PURE__*/React.createElement(\"meshReflectorMaterial\", reflectorProps));\n});\nexport { Reflector };","map":{"version":3,"names":["_extends","React","Plane","Vector3","Matrix4","Vector4","PerspectiveCamera","LinearFilter","WebGLRenderTarget","DepthTexture","DepthFormat","UnsignedShortType","extend","useThree","useFrame","mergeRefs","BlurPass","MeshReflectorMaterial","Reflector","forwardRef","ref","mixBlur","mixStrength","resolution","blur","args","minDepthThreshold","maxDepthThreshold","depthScale","depthToBlurRatioBias","mirror","children","debug","distortion","mixContrast","distortionMap","props","useEffect","console","warn","gl","camera","scene","Array","isArray","hasBlur","meshRef","useRef","useState","reflectorPlane","normal","reflectorWorldPosition","cameraWorldPosition","rotationMatrix","lookAtPosition","clipPlane","view","target","q","textureMatrix","virtualCamera","beforeRender","useCallback","setFromMatrixPosition","current","matrixWorld","extractRotation","set","applyMatrix4","subVectors","dot","reflect","negate","add","position","copy","up","lookAt","far","updateMatrixWorld","projectionMatrix","multiply","matrixWorldInverse","setFromNormalAndCoplanarPoint","x","y","z","constant","Math","sign","elements","w","multiplyScalar","useMemo","parameters","minFilter","magFilter","encoding","outputEncoding","fbo1","depthBuffer","depthTexture","format","type","fbo2","blurpass","width","height","reflectorProps","tDiffuse","texture","tDepth","tDiffuseBlur","transparent","undefined","visible","currentXrEnabled","xr","enabled","currentShadowAutoUpdate","shadowMap","autoUpdate","setRenderTarget","state","buffers","depth","setMask","autoClear","clear","render","createElement"],"sources":["/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@react-three/drei/core/Reflector.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, LinearFilter, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { BlurPass } from '../materials/BlurPass.js';\nimport { MeshReflectorMaterial } from '../materials/MeshReflectorMaterial.js';\n\nextend({\n  MeshReflectorMaterial\n});\nconst Reflector = /*#__PURE__*/React.forwardRef(({\n  mixBlur = 0,\n  mixStrength = 0.5,\n  resolution = 256,\n  blur = [0, 0],\n  args = [1, 1],\n  minDepthThreshold = 0.9,\n  maxDepthThreshold = 1,\n  depthScale = 0,\n  depthToBlurRatioBias = 0.25,\n  mirror = 0,\n  children,\n  debug = 0,\n  distortion = 1,\n  mixContrast = 1,\n  distortionMap,\n  ...props\n}, ref) => {\n  React.useEffect(() => {\n    console.warn('Reflector has been deprecated and will be removed next major. Replace it with <MeshReflectorMaterial />!');\n  }, []);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  blur = Array.isArray(blur) ? blur : [blur, blur];\n  const hasBlur = blur[0] + blur[1] > 0;\n  const meshRef = React.useRef(null);\n  const [reflectorPlane] = React.useState(() => new Plane());\n  const [normal] = React.useState(() => new Vector3());\n  const [reflectorWorldPosition] = React.useState(() => new Vector3());\n  const [cameraWorldPosition] = React.useState(() => new Vector3());\n  const [rotationMatrix] = React.useState(() => new Matrix4());\n  const [lookAtPosition] = React.useState(() => new Vector3(0, 0, -1));\n  const [clipPlane] = React.useState(() => new Vector4());\n  const [view] = React.useState(() => new Vector3());\n  const [target] = React.useState(() => new Vector3());\n  const [q] = React.useState(() => new Vector4());\n  const [textureMatrix] = React.useState(() => new Matrix4());\n  const [virtualCamera] = React.useState(() => new PerspectiveCamera());\n  const beforeRender = React.useCallback(() => {\n    reflectorWorldPosition.setFromMatrixPosition(meshRef.current.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(meshRef.current.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition); // Avoid rendering when reflector is facing away\n\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix); // Update the texture matrix\n\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(meshRef.current.matrixWorld); // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    const projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]; // Calculate the scaled plane vector\n\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q)); // Replacing the third row of the projection matrix\n\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w;\n  }, []);\n  const [fbo1, fbo2, blurpass, reflectorProps] = React.useMemo(() => {\n    const parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      encoding: gl.outputEncoding\n    };\n    const fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n    fbo1.depthBuffer = true;\n    fbo1.depthTexture = new DepthTexture(resolution, resolution);\n    fbo1.depthTexture.format = DepthFormat;\n    fbo1.depthTexture.type = UnsignedShortType;\n    const fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\n    const blurpass = new BlurPass({\n      gl,\n      resolution,\n      width: blur[0],\n      height: blur[1],\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias\n    });\n    const reflectorProps = {\n      mirror,\n      textureMatrix,\n      mixBlur,\n      tDiffuse: fbo1.texture,\n      tDepth: fbo1.depthTexture,\n      tDiffuseBlur: fbo2.texture,\n      hasBlur,\n      mixStrength,\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias,\n      transparent: true,\n      debug,\n      distortion,\n      distortionMap,\n      mixContrast,\n      'defines-USE_BLUR': hasBlur ? '' : undefined,\n      'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\n      'defines-USE_DISTORTION': distortionMap ? '' : undefined\n    };\n    return [fbo1, fbo2, blurpass, reflectorProps];\n  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, debug, distortion, distortionMap, mixContrast]);\n  useFrame(() => {\n    if (!(meshRef != null && meshRef.current)) return;\n    meshRef.current.visible = false;\n    const currentXrEnabled = gl.xr.enabled;\n    const currentShadowAutoUpdate = gl.shadowMap.autoUpdate;\n    beforeRender();\n    gl.xr.enabled = false;\n    gl.shadowMap.autoUpdate = false;\n    gl.setRenderTarget(fbo1);\n    gl.state.buffers.depth.setMask(true);\n    if (!gl.autoClear) gl.clear();\n    gl.render(scene, virtualCamera);\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\n    gl.xr.enabled = currentXrEnabled;\n    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;\n    meshRef.current.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: mergeRefs([meshRef, ref])\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: args\n  }), children ? children('meshReflectorMaterial', reflectorProps) : /*#__PURE__*/React.createElement(\"meshReflectorMaterial\", reflectorProps));\n});\n\nexport { Reflector };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}