{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node from './Node.js';\nvar BypassNode = /*#__PURE__*/function (_Node) {\n  _inherits(BypassNode, _Node);\n  var _super = _createSuper(BypassNode);\n  function BypassNode(returnNode, callNode) {\n    var _this;\n    _classCallCheck(this, BypassNode);\n    _this = _super.call(this);\n    _this.outputNode = returnNode;\n    _this.callNode = callNode;\n    return _this;\n  }\n  _createClass(BypassNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      return this.outputNode.getNodeType(builder);\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder, output) {\n      var snippet = this.callNode.build(builder, 'void');\n      if (snippet !== '') {\n        builder.addFlowCode(snippet);\n      }\n      return this.outputNode.build(builder, output);\n    }\n  }]);\n  return BypassNode;\n}(Node);\nBypassNode.prototype.isBypassNode = true;\nexport default BypassNode;","map":{"version":3,"names":["Node","BypassNode","returnNode","callNode","outputNode","builder","getNodeType","output","snippet","build","addFlowCode","prototype","isBypassNode"],"sources":["/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/three-stdlib/nodes/core/BypassNode.js"],"sourcesContent":["import Node from './Node.js';\n\nclass BypassNode extends Node {\n  constructor(returnNode, callNode) {\n    super();\n    this.outputNode = returnNode;\n    this.callNode = callNode;\n  }\n\n  getNodeType(builder) {\n    return this.outputNode.getNodeType(builder);\n  }\n\n  generate(builder, output) {\n    const snippet = this.callNode.build(builder, 'void');\n\n    if (snippet !== '') {\n      builder.addFlowCode(snippet);\n    }\n\n    return this.outputNode.build(builder, output);\n  }\n\n}\n\nBypassNode.prototype.isBypassNode = true;\n\nexport default BypassNode;\n"],"mappings":";;;;AAAA,OAAOA,IAAI,MAAM,WAAW;AAAC,IAEvBC,UAAU;EAAA;EAAA;EACd,oBAAYC,UAAU,EAAEC,QAAQ,EAAE;IAAA;IAAA;IAChC;IACA,MAAKC,UAAU,GAAGF,UAAU;IAC5B,MAAKC,QAAQ,GAAGA,QAAQ;IAAC;EAC3B;EAAC;IAAA;IAAA,OAED,qBAAYE,OAAO,EAAE;MACnB,OAAO,IAAI,CAACD,UAAU,CAACE,WAAW,CAACD,OAAO,CAAC;IAC7C;EAAC;IAAA;IAAA,OAED,kBAASA,OAAO,EAAEE,MAAM,EAAE;MACxB,IAAMC,OAAO,GAAG,IAAI,CAACL,QAAQ,CAACM,KAAK,CAACJ,OAAO,EAAE,MAAM,CAAC;MAEpD,IAAIG,OAAO,KAAK,EAAE,EAAE;QAClBH,OAAO,CAACK,WAAW,CAACF,OAAO,CAAC;MAC9B;MAEA,OAAO,IAAI,CAACJ,UAAU,CAACK,KAAK,CAACJ,OAAO,EAAEE,MAAM,CAAC;IAC/C;EAAC;EAAA;AAAA,EAnBsBP,IAAI;AAuB7BC,UAAU,CAACU,SAAS,CAACC,YAAY,GAAG,IAAI;AAExC,eAAeX,UAAU"},"metadata":{},"sourceType":"module"}