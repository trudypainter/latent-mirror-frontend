{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { LineSegmentsGeometry } from './LineSegmentsGeometry.js';\nvar LineGeometry = /*#__PURE__*/function (_LineSegmentsGeometry) {\n  _inherits(LineGeometry, _LineSegmentsGeometry);\n  var _super = _createSuper(LineGeometry);\n  function LineGeometry() {\n    var _this;\n    _classCallCheck(this, LineGeometry);\n    _this = _super.call(this);\n    _this.isLineGeometry = true;\n    _this.type = 'LineGeometry';\n    return _this;\n  }\n  _createClass(LineGeometry, [{\n    key: \"setPositions\",\n    value: function setPositions(array) {\n      // converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n      var length = array.length - 3;\n      var points = new Float32Array(2 * length);\n      for (var i = 0; i < length; i += 3) {\n        points[2 * i] = array[i];\n        points[2 * i + 1] = array[i + 1];\n        points[2 * i + 2] = array[i + 2];\n        points[2 * i + 3] = array[i + 3];\n        points[2 * i + 4] = array[i + 4];\n        points[2 * i + 5] = array[i + 5];\n      }\n      _get(_getPrototypeOf(LineGeometry.prototype), \"setPositions\", this).call(this, points);\n      return this;\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors(array) {\n      // converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n      var length = array.length - 3;\n      var colors = new Float32Array(2 * length);\n      for (var i = 0; i < length; i += 3) {\n        colors[2 * i] = array[i];\n        colors[2 * i + 1] = array[i + 1];\n        colors[2 * i + 2] = array[i + 2];\n        colors[2 * i + 3] = array[i + 3];\n        colors[2 * i + 4] = array[i + 4];\n        colors[2 * i + 5] = array[i + 5];\n      }\n      _get(_getPrototypeOf(LineGeometry.prototype), \"setColors\", this).call(this, colors);\n      return this;\n    }\n  }, {\n    key: \"fromLine\",\n    value: function fromLine(line) {\n      var geometry = line.geometry;\n      this.setPositions(geometry.attributes.position.array); // assumes non-indexed\n      // set colors, maybe\n\n      return this;\n    }\n  }]);\n  return LineGeometry;\n}(LineSegmentsGeometry);\nexport { LineGeometry };","map":{"version":3,"names":["LineSegmentsGeometry","LineGeometry","isLineGeometry","type","array","length","points","Float32Array","i","colors","line","geometry","setPositions","attributes","position"],"sources":["/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/three-stdlib/lines/LineGeometry.js"],"sourcesContent":["import { LineSegmentsGeometry } from './LineSegmentsGeometry.js';\n\nclass LineGeometry extends LineSegmentsGeometry {\n  constructor() {\n    super();\n    this.isLineGeometry = true;\n    this.type = 'LineGeometry';\n  }\n\n  setPositions(array) {\n    // converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n    const length = array.length - 3;\n    const points = new Float32Array(2 * length);\n\n    for (let i = 0; i < length; i += 3) {\n      points[2 * i] = array[i];\n      points[2 * i + 1] = array[i + 1];\n      points[2 * i + 2] = array[i + 2];\n      points[2 * i + 3] = array[i + 3];\n      points[2 * i + 4] = array[i + 4];\n      points[2 * i + 5] = array[i + 5];\n    }\n\n    super.setPositions(points);\n    return this;\n  }\n\n  setColors(array) {\n    // converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n    const length = array.length - 3;\n    const colors = new Float32Array(2 * length);\n\n    for (let i = 0; i < length; i += 3) {\n      colors[2 * i] = array[i];\n      colors[2 * i + 1] = array[i + 1];\n      colors[2 * i + 2] = array[i + 2];\n      colors[2 * i + 3] = array[i + 3];\n      colors[2 * i + 4] = array[i + 4];\n      colors[2 * i + 5] = array[i + 5];\n    }\n\n    super.setColors(colors);\n    return this;\n  }\n\n  fromLine(line) {\n    const geometry = line.geometry;\n    this.setPositions(geometry.attributes.position.array); // assumes non-indexed\n    // set colors, maybe\n\n    return this;\n  }\n\n}\n\nexport { LineGeometry };\n"],"mappings":";;;;;;AAAA,SAASA,oBAAoB,QAAQ,2BAA2B;AAAC,IAE3DC,YAAY;EAAA;EAAA;EAChB,wBAAc;IAAA;IAAA;IACZ;IACA,MAAKC,cAAc,GAAG,IAAI;IAC1B,MAAKC,IAAI,GAAG,cAAc;IAAC;EAC7B;EAAC;IAAA;IAAA,OAED,sBAAaC,KAAK,EAAE;MAClB;MACA,IAAMC,MAAM,GAAGD,KAAK,CAACC,MAAM,GAAG,CAAC;MAC/B,IAAMC,MAAM,GAAG,IAAIC,YAAY,CAAC,CAAC,GAAGF,MAAM,CAAC;MAE3C,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,EAAEG,CAAC,IAAI,CAAC,EAAE;QAClCF,MAAM,CAAC,CAAC,GAAGE,CAAC,CAAC,GAAGJ,KAAK,CAACI,CAAC,CAAC;QACxBF,MAAM,CAAC,CAAC,GAAGE,CAAC,GAAG,CAAC,CAAC,GAAGJ,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC;QAChCF,MAAM,CAAC,CAAC,GAAGE,CAAC,GAAG,CAAC,CAAC,GAAGJ,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC;QAChCF,MAAM,CAAC,CAAC,GAAGE,CAAC,GAAG,CAAC,CAAC,GAAGJ,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC;QAChCF,MAAM,CAAC,CAAC,GAAGE,CAAC,GAAG,CAAC,CAAC,GAAGJ,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC;QAChCF,MAAM,CAAC,CAAC,GAAGE,CAAC,GAAG,CAAC,CAAC,GAAGJ,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC;MAClC;MAEA,+EAAmBF,MAAM;MACzB,OAAO,IAAI;IACb;EAAC;IAAA;IAAA,OAED,mBAAUF,KAAK,EAAE;MACf;MACA,IAAMC,MAAM,GAAGD,KAAK,CAACC,MAAM,GAAG,CAAC;MAC/B,IAAMI,MAAM,GAAG,IAAIF,YAAY,CAAC,CAAC,GAAGF,MAAM,CAAC;MAE3C,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,EAAEG,CAAC,IAAI,CAAC,EAAE;QAClCC,MAAM,CAAC,CAAC,GAAGD,CAAC,CAAC,GAAGJ,KAAK,CAACI,CAAC,CAAC;QACxBC,MAAM,CAAC,CAAC,GAAGD,CAAC,GAAG,CAAC,CAAC,GAAGJ,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC;QAChCC,MAAM,CAAC,CAAC,GAAGD,CAAC,GAAG,CAAC,CAAC,GAAGJ,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC;QAChCC,MAAM,CAAC,CAAC,GAAGD,CAAC,GAAG,CAAC,CAAC,GAAGJ,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC;QAChCC,MAAM,CAAC,CAAC,GAAGD,CAAC,GAAG,CAAC,CAAC,GAAGJ,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC;QAChCC,MAAM,CAAC,CAAC,GAAGD,CAAC,GAAG,CAAC,CAAC,GAAGJ,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC;MAClC;MAEA,4EAAgBC,MAAM;MACtB,OAAO,IAAI;IACb;EAAC;IAAA;IAAA,OAED,kBAASC,IAAI,EAAE;MACb,IAAMC,QAAQ,GAAGD,IAAI,CAACC,QAAQ;MAC9B,IAAI,CAACC,YAAY,CAACD,QAAQ,CAACE,UAAU,CAACC,QAAQ,CAACV,KAAK,CAAC,CAAC,CAAC;MACvD;;MAEA,OAAO,IAAI;IACb;EAAC;EAAA;AAAA,EAjDwBJ,oBAAoB;AAqD/C,SAASC,YAAY"},"metadata":{},"sourceType":"module"}