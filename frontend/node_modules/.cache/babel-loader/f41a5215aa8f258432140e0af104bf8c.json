{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport VaryNode from '../core/VaryNode.js';\nimport ModelNode from './ModelNode.js';\nimport CameraNode from './CameraNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MathNode from '../math/MathNode.js';\nvar NormalNode = /*#__PURE__*/function (_Node) {\n  _inherits(NormalNode, _Node);\n  var _super = _createSuper(NormalNode);\n  function NormalNode() {\n    var _this;\n    var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : NormalNode.LOCAL;\n    _classCallCheck(this, NormalNode);\n    _this = _super.call(this, 'vec3');\n    _this.scope = scope;\n    return _this;\n  }\n  _createClass(NormalNode, [{\n    key: \"getHash\",\n    value: function getHash() {\n      return \"normal-\".concat(this.scope);\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var scope = this.scope;\n      var outputNode = null;\n      if (scope === NormalNode.GEOMETRY) {\n        outputNode = new AttributeNode('normal', 'vec3');\n      } else if (scope === NormalNode.LOCAL) {\n        outputNode = new VaryNode(new NormalNode(NormalNode.GEOMETRY));\n      } else if (scope === NormalNode.VIEW) {\n        var vertexNormalNode = new OperatorNode('*', new ModelNode(ModelNode.NORMAL_MATRIX), new NormalNode(NormalNode.LOCAL));\n        outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(vertexNormalNode));\n      } else if (scope === NormalNode.WORLD) {\n        // To use INVERSE_TRANSFORM_DIRECTION only inverse the param order like this: MathNode( ..., Vector, Matrix );\n        var _vertexNormalNode = new MathNode(MathNode.TRANSFORM_DIRECTION, new NormalNode(NormalNode.VIEW), new CameraNode(CameraNode.VIEW_MATRIX));\n        outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(_vertexNormalNode));\n      }\n      return outputNode.build(builder);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(NormalNode.prototype), \"serialize\", this).call(this, data);\n      data.scope = this.scope;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(NormalNode.prototype), \"deserialize\", this).call(this, data);\n      this.scope = data.scope;\n    }\n  }]);\n  return NormalNode;\n}(Node);\n_defineProperty(NormalNode, \"GEOMETRY\", 'geometry');\n_defineProperty(NormalNode, \"LOCAL\", 'local');\n_defineProperty(NormalNode, \"WORLD\", 'world');\n_defineProperty(NormalNode, \"VIEW\", 'view');\nexport default NormalNode;","map":{"version":3,"names":["_defineProperty","Node","AttributeNode","VaryNode","ModelNode","CameraNode","OperatorNode","MathNode","NormalNode","scope","LOCAL","builder","outputNode","GEOMETRY","VIEW","vertexNormalNode","NORMAL_MATRIX","NORMALIZE","WORLD","TRANSFORM_DIRECTION","VIEW_MATRIX","build","data"],"sources":["/Users/trudypainter/Desktop/latent-2/frontend/node_modules/three-stdlib/nodes/accessors/NormalNode.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport VaryNode from '../core/VaryNode.js';\nimport ModelNode from './ModelNode.js';\nimport CameraNode from './CameraNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MathNode from '../math/MathNode.js';\n\nclass NormalNode extends Node {\n  constructor(scope = NormalNode.LOCAL) {\n    super('vec3');\n    this.scope = scope;\n  }\n\n  getHash() {\n    return `normal-${this.scope}`;\n  }\n\n  generate(builder) {\n    const scope = this.scope;\n    let outputNode = null;\n\n    if (scope === NormalNode.GEOMETRY) {\n      outputNode = new AttributeNode('normal', 'vec3');\n    } else if (scope === NormalNode.LOCAL) {\n      outputNode = new VaryNode(new NormalNode(NormalNode.GEOMETRY));\n    } else if (scope === NormalNode.VIEW) {\n      const vertexNormalNode = new OperatorNode('*', new ModelNode(ModelNode.NORMAL_MATRIX), new NormalNode(NormalNode.LOCAL));\n      outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(vertexNormalNode));\n    } else if (scope === NormalNode.WORLD) {\n      // To use INVERSE_TRANSFORM_DIRECTION only inverse the param order like this: MathNode( ..., Vector, Matrix );\n      const vertexNormalNode = new MathNode(MathNode.TRANSFORM_DIRECTION, new NormalNode(NormalNode.VIEW), new CameraNode(CameraNode.VIEW_MATRIX));\n      outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(vertexNormalNode));\n    }\n\n    return outputNode.build(builder);\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n  }\n\n}\n\n_defineProperty(NormalNode, \"GEOMETRY\", 'geometry');\n\n_defineProperty(NormalNode, \"LOCAL\", 'local');\n\n_defineProperty(NormalNode, \"WORLD\", 'world');\n\n_defineProperty(NormalNode, \"VIEW\", 'view');\n\nexport default NormalNode;\n"],"mappings":";;;;;;AAAA,OAAOA,eAAe,MAAM,2CAA2C;AACvE,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,aAAa,MAAM,0BAA0B;AACpD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,QAAQ,MAAM,qBAAqB;AAAC,IAErCC,UAAU;EAAA;EAAA;EACd,sBAAsC;IAAA;IAAA,IAA1BC,KAAK,uEAAGD,UAAU,CAACE,KAAK;IAAA;IAClC,0BAAM,MAAM;IACZ,MAAKD,KAAK,GAAGA,KAAK;IAAC;EACrB;EAAC;IAAA;IAAA,OAED,mBAAU;MACR,wBAAiB,IAAI,CAACA,KAAK;IAC7B;EAAC;IAAA;IAAA,OAED,kBAASE,OAAO,EAAE;MAChB,IAAMF,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAIG,UAAU,GAAG,IAAI;MAErB,IAAIH,KAAK,KAAKD,UAAU,CAACK,QAAQ,EAAE;QACjCD,UAAU,GAAG,IAAIV,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC;MAClD,CAAC,MAAM,IAAIO,KAAK,KAAKD,UAAU,CAACE,KAAK,EAAE;QACrCE,UAAU,GAAG,IAAIT,QAAQ,CAAC,IAAIK,UAAU,CAACA,UAAU,CAACK,QAAQ,CAAC,CAAC;MAChE,CAAC,MAAM,IAAIJ,KAAK,KAAKD,UAAU,CAACM,IAAI,EAAE;QACpC,IAAMC,gBAAgB,GAAG,IAAIT,YAAY,CAAC,GAAG,EAAE,IAAIF,SAAS,CAACA,SAAS,CAACY,aAAa,CAAC,EAAE,IAAIR,UAAU,CAACA,UAAU,CAACE,KAAK,CAAC,CAAC;QACxHE,UAAU,GAAG,IAAIL,QAAQ,CAACA,QAAQ,CAACU,SAAS,EAAE,IAAId,QAAQ,CAACY,gBAAgB,CAAC,CAAC;MAC/E,CAAC,MAAM,IAAIN,KAAK,KAAKD,UAAU,CAACU,KAAK,EAAE;QACrC;QACA,IAAMH,iBAAgB,GAAG,IAAIR,QAAQ,CAACA,QAAQ,CAACY,mBAAmB,EAAE,IAAIX,UAAU,CAACA,UAAU,CAACM,IAAI,CAAC,EAAE,IAAIT,UAAU,CAACA,UAAU,CAACe,WAAW,CAAC,CAAC;QAC5IR,UAAU,GAAG,IAAIL,QAAQ,CAACA,QAAQ,CAACU,SAAS,EAAE,IAAId,QAAQ,CAACY,iBAAgB,CAAC,CAAC;MAC/E;MAEA,OAAOH,UAAU,CAACS,KAAK,CAACV,OAAO,CAAC;IAClC;EAAC;IAAA;IAAA,OAED,mBAAUW,IAAI,EAAE;MACd,0EAAgBA,IAAI;MACpBA,IAAI,CAACb,KAAK,GAAG,IAAI,CAACA,KAAK;IACzB;EAAC;IAAA;IAAA,OAED,qBAAYa,IAAI,EAAE;MAChB,4EAAkBA,IAAI;MACtB,IAAI,CAACb,KAAK,GAAGa,IAAI,CAACb,KAAK;IACzB;EAAC;EAAA;AAAA,EAtCsBR,IAAI;AA0C7BD,eAAe,CAACQ,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;AAEnDR,eAAe,CAACQ,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC;AAE7CR,eAAe,CAACQ,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC;AAE7CR,eAAe,CAACQ,UAAU,EAAE,MAAM,EAAE,MAAM,CAAC;AAE3C,eAAeA,UAAU"},"metadata":{},"sourceType":"module"}