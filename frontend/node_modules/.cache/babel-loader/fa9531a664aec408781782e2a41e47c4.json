{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Matrix4, Vector3 } from 'three';\nvar inverseProjectionMatrix = new Matrix4();\nvar CSMFrustum = /*#__PURE__*/function () {\n  function CSMFrustum(data) {\n    _classCallCheck(this, CSMFrustum);\n    data = data || {};\n    this.vertices = {\n      near: [new Vector3(), new Vector3(), new Vector3(), new Vector3()],\n      far: [new Vector3(), new Vector3(), new Vector3(), new Vector3()]\n    };\n    if (data.projectionMatrix !== undefined) {\n      this.setFromProjectionMatrix(data.projectionMatrix, data.maxFar || 10000);\n    }\n  }\n  _createClass(CSMFrustum, [{\n    key: \"setFromProjectionMatrix\",\n    value: function setFromProjectionMatrix(projectionMatrix, maxFar) {\n      var isOrthographic = projectionMatrix.elements[2 * 4 + 3] === 0;\n      inverseProjectionMatrix.copy(projectionMatrix).invert(); // 3 --- 0  vertices.near/far order\n      // |     |\n      // 2 --- 1\n      // clip space spans from [-1, 1]\n\n      this.vertices.near[0].set(1, 1, -1);\n      this.vertices.near[1].set(1, -1, -1);\n      this.vertices.near[2].set(-1, -1, -1);\n      this.vertices.near[3].set(-1, 1, -1);\n      this.vertices.near.forEach(function (v) {\n        v.applyMatrix4(inverseProjectionMatrix);\n      });\n      this.vertices.far[0].set(1, 1, 1);\n      this.vertices.far[1].set(1, -1, 1);\n      this.vertices.far[2].set(-1, -1, 1);\n      this.vertices.far[3].set(-1, 1, 1);\n      this.vertices.far.forEach(function (v) {\n        v.applyMatrix4(inverseProjectionMatrix);\n        var absZ = Math.abs(v.z);\n        if (isOrthographic) {\n          v.z *= Math.min(maxFar / absZ, 1.0);\n        } else {\n          v.multiplyScalar(Math.min(maxFar / absZ, 1.0));\n        }\n      });\n      return this.vertices;\n    }\n  }, {\n    key: \"split\",\n    value: function split(breaks, target) {\n      while (breaks.length > target.length) {\n        target.push(new CSMFrustum());\n      }\n      target.length = breaks.length;\n      for (var i = 0; i < breaks.length; i++) {\n        var cascade = target[i];\n        if (i === 0) {\n          for (var j = 0; j < 4; j++) {\n            cascade.vertices.near[j].copy(this.vertices.near[j]);\n          }\n        } else {\n          for (var _j = 0; _j < 4; _j++) {\n            cascade.vertices.near[_j].lerpVectors(this.vertices.near[_j], this.vertices.far[_j], breaks[i - 1]);\n          }\n        }\n        if (i === breaks.length - 1) {\n          for (var _j2 = 0; _j2 < 4; _j2++) {\n            cascade.vertices.far[_j2].copy(this.vertices.far[_j2]);\n          }\n        } else {\n          for (var _j3 = 0; _j3 < 4; _j3++) {\n            cascade.vertices.far[_j3].lerpVectors(this.vertices.near[_j3], this.vertices.far[_j3], breaks[i]);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"toSpace\",\n    value: function toSpace(cameraMatrix, target) {\n      for (var i = 0; i < 4; i++) {\n        target.vertices.near[i].copy(this.vertices.near[i]).applyMatrix4(cameraMatrix);\n        target.vertices.far[i].copy(this.vertices.far[i]).applyMatrix4(cameraMatrix);\n      }\n    }\n  }]);\n  return CSMFrustum;\n}();\nexport { CSMFrustum };","map":{"version":3,"names":["Matrix4","Vector3","inverseProjectionMatrix","CSMFrustum","data","vertices","near","far","projectionMatrix","undefined","setFromProjectionMatrix","maxFar","isOrthographic","elements","copy","invert","set","forEach","v","applyMatrix4","absZ","Math","abs","z","min","multiplyScalar","breaks","target","length","push","i","cascade","j","lerpVectors","cameraMatrix"],"sources":["/Users/trudypainter/Desktop/latent internet mirror/frontend/node_modules/three-stdlib/csm/CSMFrustum.js"],"sourcesContent":["import { Matrix4, Vector3 } from 'three';\n\nconst inverseProjectionMatrix = new Matrix4();\n\nclass CSMFrustum {\n  constructor(data) {\n    data = data || {};\n    this.vertices = {\n      near: [new Vector3(), new Vector3(), new Vector3(), new Vector3()],\n      far: [new Vector3(), new Vector3(), new Vector3(), new Vector3()]\n    };\n\n    if (data.projectionMatrix !== undefined) {\n      this.setFromProjectionMatrix(data.projectionMatrix, data.maxFar || 10000);\n    }\n  }\n\n  setFromProjectionMatrix(projectionMatrix, maxFar) {\n    const isOrthographic = projectionMatrix.elements[2 * 4 + 3] === 0;\n    inverseProjectionMatrix.copy(projectionMatrix).invert(); // 3 --- 0  vertices.near/far order\n    // |     |\n    // 2 --- 1\n    // clip space spans from [-1, 1]\n\n    this.vertices.near[0].set(1, 1, -1);\n    this.vertices.near[1].set(1, -1, -1);\n    this.vertices.near[2].set(-1, -1, -1);\n    this.vertices.near[3].set(-1, 1, -1);\n    this.vertices.near.forEach(function (v) {\n      v.applyMatrix4(inverseProjectionMatrix);\n    });\n    this.vertices.far[0].set(1, 1, 1);\n    this.vertices.far[1].set(1, -1, 1);\n    this.vertices.far[2].set(-1, -1, 1);\n    this.vertices.far[3].set(-1, 1, 1);\n    this.vertices.far.forEach(function (v) {\n      v.applyMatrix4(inverseProjectionMatrix);\n      const absZ = Math.abs(v.z);\n\n      if (isOrthographic) {\n        v.z *= Math.min(maxFar / absZ, 1.0);\n      } else {\n        v.multiplyScalar(Math.min(maxFar / absZ, 1.0));\n      }\n    });\n    return this.vertices;\n  }\n\n  split(breaks, target) {\n    while (breaks.length > target.length) {\n      target.push(new CSMFrustum());\n    }\n\n    target.length = breaks.length;\n\n    for (let i = 0; i < breaks.length; i++) {\n      const cascade = target[i];\n\n      if (i === 0) {\n        for (let j = 0; j < 4; j++) {\n          cascade.vertices.near[j].copy(this.vertices.near[j]);\n        }\n      } else {\n        for (let j = 0; j < 4; j++) {\n          cascade.vertices.near[j].lerpVectors(this.vertices.near[j], this.vertices.far[j], breaks[i - 1]);\n        }\n      }\n\n      if (i === breaks.length - 1) {\n        for (let j = 0; j < 4; j++) {\n          cascade.vertices.far[j].copy(this.vertices.far[j]);\n        }\n      } else {\n        for (let j = 0; j < 4; j++) {\n          cascade.vertices.far[j].lerpVectors(this.vertices.near[j], this.vertices.far[j], breaks[i]);\n        }\n      }\n    }\n  }\n\n  toSpace(cameraMatrix, target) {\n    for (let i = 0; i < 4; i++) {\n      target.vertices.near[i].copy(this.vertices.near[i]).applyMatrix4(cameraMatrix);\n      target.vertices.far[i].copy(this.vertices.far[i]).applyMatrix4(cameraMatrix);\n    }\n  }\n\n}\n\nexport { CSMFrustum };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}