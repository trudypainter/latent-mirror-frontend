{"ast":null,"code":"import _classCallCheck from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/trudypainter/Desktop/latent-2/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node from '../core/Node.js';\nvar ArrayElementNode = /*#__PURE__*/function (_Node) {\n  _inherits(ArrayElementNode, _Node);\n  var _super = _createSuper(ArrayElementNode);\n  function ArrayElementNode(node, indexNode) {\n    var _this;\n    _classCallCheck(this, ArrayElementNode);\n    _this = _super.call(this);\n    _this.node = node;\n    _this.indexNode = indexNode;\n    return _this;\n  }\n  _createClass(ArrayElementNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      return this.node.getNodeType(builder);\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var nodeSnippet = this.node.build(builder);\n      var indexSnippet = this.indexNode.build(builder, 'int');\n      return \"\".concat(nodeSnippet, \"[ \").concat(indexSnippet, \" ]\");\n    }\n  }]);\n  return ArrayElementNode;\n}(Node);\nexport default ArrayElementNode;","map":{"version":3,"names":["Node","ArrayElementNode","node","indexNode","builder","getNodeType","nodeSnippet","build","indexSnippet"],"sources":["/Users/trudypainter/Desktop/latent-2/frontend/node_modules/three-stdlib/nodes/utils/ArrayElementNode.js"],"sourcesContent":["import Node from '../core/Node.js';\n\nclass ArrayElementNode extends Node {\n  constructor(node, indexNode) {\n    super();\n    this.node = node;\n    this.indexNode = indexNode;\n  }\n\n  getNodeType(builder) {\n    return this.node.getNodeType(builder);\n  }\n\n  generate(builder) {\n    const nodeSnippet = this.node.build(builder);\n    const indexSnippet = this.indexNode.build(builder, 'int');\n    return `${nodeSnippet}[ ${indexSnippet} ]`;\n  }\n\n}\n\nexport default ArrayElementNode;\n"],"mappings":";;;;AAAA,OAAOA,IAAI,MAAM,iBAAiB;AAAC,IAE7BC,gBAAgB;EAAA;EAAA;EACpB,0BAAYC,IAAI,EAAEC,SAAS,EAAE;IAAA;IAAA;IAC3B;IACA,MAAKD,IAAI,GAAGA,IAAI;IAChB,MAAKC,SAAS,GAAGA,SAAS;IAAC;EAC7B;EAAC;IAAA;IAAA,OAED,qBAAYC,OAAO,EAAE;MACnB,OAAO,IAAI,CAACF,IAAI,CAACG,WAAW,CAACD,OAAO,CAAC;IACvC;EAAC;IAAA;IAAA,OAED,kBAASA,OAAO,EAAE;MAChB,IAAME,WAAW,GAAG,IAAI,CAACJ,IAAI,CAACK,KAAK,CAACH,OAAO,CAAC;MAC5C,IAAMI,YAAY,GAAG,IAAI,CAACL,SAAS,CAACI,KAAK,CAACH,OAAO,EAAE,KAAK,CAAC;MACzD,iBAAUE,WAAW,eAAKE,YAAY;IACxC;EAAC;EAAA;AAAA,EAf4BR,IAAI;AAmBnC,eAAeC,gBAAgB"},"metadata":{},"sourceType":"module"}