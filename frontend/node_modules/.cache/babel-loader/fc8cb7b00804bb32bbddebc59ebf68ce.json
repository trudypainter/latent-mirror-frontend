{"ast":null,"code":"var _jsxFileName = \"/Users/trudypainter/Desktop/latent internet mirror/frontend/src/HistoryItem.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\n// import { Billboard } from \"drei\";\nimport { Html } from \"@react-three/drei\";\n\n// item box\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HistoryItem(props) {\n  _s();\n  const SCALE = 10;\n  const k = 1 / 600;\n  function sigmoid(z) {\n    return 1 / (1 + Math.exp(-z / k));\n  }\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false);\n  const itemSelected = props.canvasItems.includes(props.item);\n  const handleSphereClicked = () => {\n    if (!itemSelected) {\n      props.setCanvasItems([...props.canvasItems, props.item]);\n    }\n  };\n  const handlePointerIn = () => {\n    setHover(true);\n    props.setHoveredItem(props.item);\n  };\n  const handlePointerOut = () => {\n    setHover(false);\n    props.setHoveredItem(undefined);\n  };\n  let dim = props.item[\"visitCount\"] / 850;\n  let x_item = props.item[\"3d_x\"] / SCALE;\n  let y_item = props.item[\"3d_y\"] / SCALE;\n  let z_item = props.item[\"3d_z\"] / SCALE;\n  let opacity = 0.3;\n  let color = \"gray\";\n  if (itemSelected) {\n    color = \"blue\";\n    opacity = 0.8;\n  }\n  if (hovered | props.item === props.HoveredItem) {\n    color = \"purple\";\n    opacity = 0.8;\n  }\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: mesh,\n    onClick: event => handleSphereClicked(),\n    onPointerOver: event => handlePointerIn(),\n    onPointerOut: event => handlePointerOut(),\n    position: [x_item, y_item, z_item],\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [dim, dim, dim]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: color,\n      transparent: true,\n      opacity: opacity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), hovered && /*#__PURE__*/_jsxDEV(Html, {\n      position: [0, 0, 0],\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"truncate\",\n        children: [props.item[\"description\"], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), props.item[\"url\"]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(HistoryItem, \"4XjFIWunPiJhYB6n3q5g5BaRzFM=\");\n_c = HistoryItem;\nexport default HistoryItem;\nvar _c;\n$RefreshReg$(_c, \"HistoryItem\");","map":{"version":3,"names":["useState","useRef","useEffect","Html","HistoryItem","props","SCALE","k","sigmoid","z","Math","exp","mesh","hovered","setHover","itemSelected","canvasItems","includes","item","handleSphereClicked","setCanvasItems","handlePointerIn","setHoveredItem","handlePointerOut","undefined","dim","x_item","y_item","z_item","opacity","color","HoveredItem","event"],"sources":["/Users/trudypainter/Desktop/latent internet mirror/frontend/src/HistoryItem.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\n// import { Billboard } from \"drei\";\nimport { Html } from \"@react-three/drei\";\n\n// item box\nfunction HistoryItem(props) {\n  const SCALE = 10;\n\n  const k = 1 / 600;\n  function sigmoid(z) {\n    return 1 / (1 + Math.exp(-z / k));\n  }\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false);\n  const itemSelected = props.canvasItems.includes(props.item);\n\n  const handleSphereClicked = () => {\n    if (!itemSelected) {\n      props.setCanvasItems([...props.canvasItems, props.item]);\n    }\n  };\n\n  const handlePointerIn = () => {\n    setHover(true);\n    props.setHoveredItem(props.item);\n  };\n\n  const handlePointerOut = () => {\n    setHover(false);\n    props.setHoveredItem(undefined);\n  };\n\n  let dim = props.item[\"visitCount\"] / 850;\n\n  let x_item = props.item[\"3d_x\"] / SCALE;\n  let y_item = props.item[\"3d_y\"] / SCALE;\n  let z_item = props.item[\"3d_z\"] / SCALE;\n\n  let opacity = 0.3;\n  let color = \"gray\";\n  if (itemSelected) {\n    color = \"blue\";\n    opacity = 0.8;\n  }\n\n  if (hovered | (props.item === props.HoveredItem)) {\n    color = \"purple\";\n    opacity = 0.8;\n  }\n\n  return (\n    <mesh\n      ref={mesh}\n      onClick={(event) => handleSphereClicked()}\n      onPointerOver={(event) => handlePointerIn()}\n      onPointerOut={(event) => handlePointerOut()}\n      position={[x_item, y_item, z_item]}\n    >\n      <boxGeometry args={[dim, dim, dim]} />\n      <meshStandardMaterial\n        color={color}\n        transparent={true}\n        opacity={opacity}\n      />\n      {hovered && (\n        <Html position={[0, 0, 0]}>\n          <p className=\"truncate\">\n            {props.item[\"description\"]}\n            <br />\n            {props.item[\"url\"]}\n          </p>\n        </Html>\n      )}\n    </mesh>\n  );\n}\n\nexport default HistoryItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}